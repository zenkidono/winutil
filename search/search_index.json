{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the WinUtil Documentation!","text":"<p>Welcome to the official documentation for WinUtil, your go-to utility for optimizing and managing your Windows environment. Whether you\u2019re an IT professional, power user, or regular user, WinUtil provides a comprehensive set of tools to enhance your Windows experience.</p>"},{"location":"#running-the-latest-release-of-winutil","title":"Running the latest release of WinUtil","text":"<ul> <li>You will first need to start a Powershell terminal as Admin.</li> <li>Now you can run the following command:    <pre><code>irm https://christitus.com/win | iex\n</code></pre></li> </ul> <p>Info</p> <p>WinUtil is updated weekly as of the time of writing. Consequently, features and functionalities may evolve, and the documentation may not always reflect the most current images or information.</p>"},{"location":"CONTRIBUTING/","title":"How to Contribute?","text":""},{"location":"CONTRIBUTING/#testing","title":"Testing","text":"<ul> <li>Test the latest changes to WinUtil by running the pre-release and reporting issues you are encountering to help us continually improve WinUtil!</li> </ul>"},{"location":"CONTRIBUTING/#run-the-latest-pre-release","title":"Run the latest pre-release","text":"<pre><code>irm https://christitus.com/windev | iex\n</code></pre> <p>Keep in mind</p> <p>This is a pre-release and should be treated as such. It exists for developers to test the utility and report or fix bugs before they get added to the stable release. Don't use it in production!</p>"},{"location":"CONTRIBUTING/#issues","title":"Issues","text":"<ul> <li>If you encounter any challenges or problems with the script, I kindly request that you submit them via the \"Issues\" tab on the GitHub repository. By filling out the provided template, you can provide specific details about the issue, allowing me (and others in the community) to promptly address any bugs or consider feature requests.</li> </ul>"},{"location":"CONTRIBUTING/#contribute-code","title":"Contribute Code","text":"<ul> <li> <p>Pull requests are now handled directly on the MAIN branch. This was done since we can now select specific releases to launch via releases in GitHub.</p> </li> <li> <p>If you're doing code changes, then you can submit a PR to <code>main</code> branch, but I am very selective about these.</p> </li> </ul> <p>Important</p> <p>Do not use a code formatter, make massive amounts of line changes, or make multiple feature changes. EACH FEATURE CHANGE SHOULD BE IT'S OWN PULL REQUEST!</p> <ul> <li> <p>When creating pull requests, it is essential to thoroughly document all changes made. This includes, but is not limited to, documenting any additions made to the <code>tweaks</code> section and corresponding <code>undo tweak</code>, so users are able to remove the newly added tweaks if necessary, and comprehensive documentation is required for all code changes. Document your changes and briefly explain why you made your changes in your Pull Request Description. Failure to adhere to this format may result in the denial of the pull request. Additionally, any code lacking sufficient documentation may also be denied.</p> </li> <li> <p>By following these guidelines, we can maintain a high standard of quality and ensure that the codebase remains organized and well-documented.</p> </li> </ul> <p>Note</p> <p>When creating a function, please include \"WPF\" or \"WinUtil\" in the file name so it can be loaded into the runspace.</p>"},{"location":"CONTRIBUTING/#walk-through","title":"Walk through","text":"<ul> <li>This is a guide for beginners. If you are still having issues, look at the following official GitHub documentation:<ul> <li>Commit through WEB</li> <li>Commit through GitHub Desktop</li> <li>Create a Pull Request</li> </ul> </li> </ul>"},{"location":"CONTRIBUTING/#overview","title":"Overview","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"cardinal\"}} }%%\ngraph TD\n\u00a0 A[Fork Project] --&gt; B[Clone Repository];\n\u00a0 B --&gt; C[Create New Branch];\n\u00a0 C --&gt; D[Make Changes];\n\u00a0 D --&gt; G[Test Changes];\n\u00a0 G --&gt; H{Tests Passed?};\n\u00a0 H --&gt;|Yes| E[Commit Changes];\n\u00a0 H --&gt;|No| J[Fix Issues];\n\u00a0 J --&gt; G;\n\u00a0 E --&gt; F[Push Branch];\n\u00a0 F --&gt; K[Create Pull Request];\n\u00a0 K --&gt; L[Fill out PR template];\n  classDef default stroke:#333,stroke-width:4px,font-size:12pt;</code></pre> <p>Info</p> <p>This is a diagram to guide you through the process. It may vary depending on the type of change you're making.</p>"},{"location":"CONTRIBUTING/#fork-the-repo","title":"Fork the Repo","text":"<ul> <li>Fork the WinUtil Repository here to create a copy that will be available in your repository list.</li> </ul>"},{"location":"CONTRIBUTING/#clone-the-fork","title":"Clone the Fork","text":"<p>Tip</p> <p>While you can make your changes directly through the Web, we recommend cloning the repo to your device using the application GitHub Desktop (available in WinUtil) to test your fork easily.</p> <ul> <li>Install GitHub Desktop if it is not already installed.</li> <li>Log in using the same GitHub account you used to fork WinUtil.</li> <li>Choose the fork under \"Your Repositories\" and press \"clone {repo name}\"</li> <li> <p>Create a new branch and name it something relatable to your changes.</p> </li> <li> <p>Now you can modify WinUtil to your liking using your preferred text editor.</p> </li> </ul>"},{"location":"CONTRIBUTING/#testing-your-changes","title":"Testing your changes","text":"<ul> <li> <p>To test to see if your changes work as intended run following commands in a powershell teminal as admin:</p> </li> <li> <p>Change the directory where you are running the commands to the forked project.</p> </li> <li><code>cd {path to the folder with the compile.ps1}</code></li> <li>Run the following command to compile and run WinUtil:</li> <li><code>.\\Compile.ps1 -run</code></li> </ul> <p></p> <ul> <li>After seeing that your changes work properly, feel free to commit the changes to the repository and make a PR. For help on that, follow the documentation below.</li> </ul>"},{"location":"CONTRIBUTING/#committing-the-changes","title":"Committing the changes","text":"<ul> <li>Before committing your changes, please discard changes made to the <code>winutil.ps1</code> file, like the following:</li> </ul> <ul> <li>Now, commit your changes once you are happy with the result.</li> </ul> <ul> <li>Push the changes to upload them to your fork on github.com.</li> </ul>"},{"location":"CONTRIBUTING/#making-a-pr","title":"Making a PR","text":"<ul> <li>To make a PR on your repo under a new branch linking to the main branch, a button will show and say Preview and Create pull request. Click that button and fill in all the information that is provided on the template. Once all the information is filled in correctly, check your PR to make sure there is not a WinUtil.ps1 file attached to the PR. Once everything is good, make the PR and wait for Chris (the maintainer) to accept or deny your PR. Once it is accepted by Chris, you will be able to see your changes in the \"/windev\" build.</li> <li>If you do not see your feature in the main \"/win\" build, that is fine. All new changes go into the /windev build to make sure everything is working OK before going fully public.</li> <li>Congratulations! You just submitted your first PR. Thank you so much for contributing to WinUtil.</li> </ul>"},{"location":"KnownIssues/","title":"Known Issues","text":""},{"location":"KnownIssues/#launch-issues","title":"Launch Issues","text":""},{"location":"KnownIssues/#blocked-by-anti-virus","title":"Blocked by anti-virus","text":"<p>Windows Security (formerly Defender) and other anti-virus software are known to block the script. The script gets flagged due to the fact that it requires administrator privileges &amp; makes drastic system changes.</p> <p>To resolve this, allow/whitelist the script in your anti-virus software settings, or temporarily disable real-time protection. Since the project is open source, you may audit the code if security is a concern.</p>"},{"location":"KnownIssues/#download-not-working","title":"Download not working","text":"<p>If <code>https://christitus.com/win</code> is not working, or you want to download the code from GitHub directly, you can use the direct download link:</p> <pre><code>irm https://github.com/ChrisTitusTech/winutil/releases/latest/download/winutil.ps1 | iex\n</code></pre> <p>If you are seeing errors referencing TLS or security, you may be running an older version of Windows where TLS 1.2 is not the default security protocol used for network connections. The following commands will force .NET to use TLS 1.2, and download the script directly using .NET instead of PowerShell:</p> <pre><code>[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\niex (New-Object Net.WebClient).DownloadString('https://github.com/ChrisTitusTech/winutil/releases/latest/download/winutil.ps1')\n</code></pre> <p>If it still isn't working and you live in India, it might be due to India blocking GitHub's content domain and preventing downloads. See more on Times of India.</p> <p>If you are still having issues, try using a VPN, or changing your DNS provider to one of following two providers:</p> Provider Primary DNS Secondary DNS Cloudflare <code>1.1.1.1</code> <code>1.0.0.1</code> Google <code>8.8.8.8</code> <code>8.8.4.4</code>"},{"location":"KnownIssues/#script-blocked-by-execution-policy","title":"Script blocked by Execution Policy","text":"<ol> <li>Ensure you are running PowerShell as admin: Press <code>Windows Key</code>+<code>X</code> and select PowerShell (Admin) in Windows 10, or <code>Windows Terminal (Admin)</code> in Windows 11.</li> <li>In the PowerShell window, type this to allow unsigned code to execute and run the installation script:     <pre><code>Set-ExecutionPolicy Unrestricted -Scope Process -Force\nirm https://christitus.com/win | iex\n</code></pre></li> </ol>"},{"location":"KnownIssues/#runtime-issues","title":"Runtime Issues","text":""},{"location":"KnownIssues/#winget-configuration","title":"WinGet configuration","text":"<p>If you have not installed anything using PowerShell before, you may be prompted to configure WinGet. This requires user interaction on first run. You will need to manually type <code>y</code> into the PowerShell console and press enter to continue. Once you do it the first time, you will not be prompted again.</p>"},{"location":"KnownIssues/#microwin-error-0x80041031","title":"MicroWin: Error <code>0x80041031</code>","text":"<p>This error code typically indicates an issue related to Windows Management Instrumentation (WMI). Here are a few steps you can try to resolve the issue:</p> <ol> <li> <p>Reboot Your Computer:</p> <p>Sometimes, a simple reboot can resolve temporary issues. Restart your computer and try mounting the ISO again.</p> </li> <li> <p>Check for System Corruption:</p> <p>Run the System File Checker (SFC) utility to scan and repair system files that may be corrupted. <pre><code>sfc /scannow\n</code></pre></p> </li> <li> <p>Update Your System:</p> <p>Make sure your operating system is up-to-date. Check for Windows updates and install any pending updates.</p> </li> <li> <p>Check WMI Service:</p> <p>Ensure that the Windows Management Instrumentation (WMI) service is running. You can do this through the Services application: - Press <code>Win</code>+<code>R</code> to open the Run dialog. - Type <code>services.msc</code> and press Enter. - Locate Windows Management Instrumentation in the list. - Make sure to set its status to \"Running\" and the startup type to \"Automatic\".</p> </li> <li> <p>Check for Security Software Interference:</p> <p>Security software can sometimes interfere with WMI operations. Temporarily disable your anti-virus or security software and check if the issue persists. WMI is a common attack/infection vector, so many anti-virus programs will limit its usage.</p> </li> <li> <p>Event Viewer:</p> <p>Check the Event Viewer for more detailed error information. Look for entries related to the <code>80041031</code> error and check if there are any additional details that can help identify the cause.</p> <ul> <li>Press <code>Win</code>+<code>X</code> and select Event Viewer.</li> <li>Navigate to Windows Logs &gt; Application or System.</li> <li>Look for entries with the source related to WMI or the application use to mount the ISO.</li> </ul> </li> <li> <p>ISO File Integrity:</p> <p>Ensure that the ISO file you are trying to mount is uncorrupted. Try mounting a different ISO file to see if the issue persists.</p> </li> </ol> <p>If the problem persists after trying these steps, additional troubleshooting is required. Consider seeking assistance from Microsoft support or community forums for more specific guidance based on your system configuration and the software you use to mount the ISO.</p>"},{"location":"KnownIssues/#windows-issues","title":"Windows Issues","text":""},{"location":"KnownIssues/#windows-takes-longer-to-shut-down","title":"Windows takes longer to shut down","text":"<p>This could be for a number of reasons: - Turn on fast startup: Press <code>Windows key</code>+<code>R</code>, then type:     <pre><code>control /name Microsoft.PowerOptions /page pageGlobalSettings\n</code></pre> - If that doesn't work, disable Hibernation:     - Press <code>Windows Key</code>+<code>X</code> and select PowerShell (Admin) in Windows 10, or <code>Windows Terminal (Admin)</code> in Windows 11.     - In the PowerShell window, type:         <pre><code>powercfg /H off\n</code></pre> Related issue: #69</p>"},{"location":"KnownIssues/#windows-search-does-not-work","title":"Windows Search does not work","text":"<p>Enable Background Apps. Related issues: #69 95 #232</p>"},{"location":"KnownIssues/#xbox-game-bar-activation-broken","title":"Xbox Game Bar Activation Broken","text":"<p>Set the Xbox Accessory Management Service to Automatic:</p> <pre><code>Get-Service -Name \"XboxGipSvc\" | Set-Service -StartupType Automatic\n</code></pre> <p>Related issue: #198</p>"},{"location":"KnownIssues/#windows-11-quick-settings-no-longer-works","title":"Windows 11: Quick Settings no longer works","text":"<p>Launch the Script and click Enable Action Center.</p>"},{"location":"KnownIssues/#explorer-file-browser-no-longer-launches","title":"Explorer (file browser) no longer launches","text":"<ul> <li>Press <code>Windows key</code>+<code>R</code> then type:     <pre><code>control /name Microsoft.FolderOptions\n</code></pre></li> <li>Change the Open File Explorer to option to This PC.</li> </ul>"},{"location":"KnownIssues/#battery-drains-too-fast","title":"Battery drains too fast","text":"<p>If you're using a laptop or tablet and find your battery drains too fast, please try the below troubleshooting steps, and report the results back to the Winutil community.</p> <ol> <li> <p>Check Battery Health:</p> <ul> <li>Press <code>Windows Key</code>+<code>X</code> and select PowerShell (Admin) in Windows 10, or <code>Windows Terminal (Admin)</code> in Windows 11.</li> <li>Run the following command to generate a battery report:     <pre><code>powercfg /batteryreport /output \"C:\\battery_report.html\"\n</code></pre></li> <li>Open the generated HTML report to review information about battery health and usage. A battery with poor health may hold less charge, discharge faster, or cause other issues.</li> </ul> </li> <li> <p>Review Power Settings:</p> <ul> <li>Open the Settings app, and go to System &gt; Power &amp; sleep.</li> <li>Adjust power plan settings based on your preferences and usage patterns.</li> <li>Click on Additional power settings to access advanced power settings that may help.</li> </ul> </li> <li> <p>Identify Power-Hungry Apps:</p> <ul> <li>Right-click on the taskbar and select Task Manager.</li> <li>Navigate to the Processes tab to identify applications with high CPU or memory usage.</li> <li>Consider reconfiguring, closing, disabling, or uninstalling applications that use a lot of resources.</li> </ul> </li> <li> <p>Update Drivers:</p> <ul> <li>Visit your device manufacturer's website or use Windows Update to check for driver updates.</li> <li>Ensure graphics, chipset, and other essential drivers are up to date.</li> </ul> </li> <li> <p>Check for Windows Updates:</p> <ul> <li>Open the Settings app, and go to Update &amp; Security &gt; Windows Update.</li> <li>Check for and install any available updates for your operating system.</li> </ul> </li> <li> <p>Reduce Screen Brightness:</p> <ul> <li>Open the Settings app, and go to System &gt; Display.</li> <li>Adjust screen brightness based on your preferences and lighting conditions.</li> </ul> </li> <li> <p>Enable Battery Saver:</p> <ul> <li>Open the Settings app, and go to System &gt; Battery.</li> <li>Turn on Battery saver to limit background activity and conserve power.</li> </ul> </li> <li> <p>Check Power Usage in Settings:</p> <ul> <li>Open the Settings app, and go to System &gt; Battery &gt; Battery usage by app.</li> <li>Review the list of apps and their power usage. Disable or uninstall any you don't need.</li> </ul> </li> <li> <p>Check Background Apps:</p> <ul> <li>Open the Settings app, and go to Privacy &gt; Background apps.</li> <li>Disable or uninstall unnecessary apps running in the background.</li> </ul> </li> <li> <p>Use <code>powercfg</code> for Analysis:</p> <ul> <li>Press <code>Windows Key</code>+<code>X</code> and select PowerShell (Admin) in Windows 10, or <code>Windows Terminal (Admin)</code> in Windows 11.</li> <li>Run the following command to analyze energy usage and generate a report:     <pre><code>powercfg /energy /output \"C:\\energy_report.html\"\n</code></pre></li> <li>Open the generated HTML report to identify energy consumption patterns.</li> </ul> </li> <li> <p>Review Event Logs:</p> <ul> <li>Open Event Viewer by searching for it in the Start menu.</li> <li>Navigate to Windows Logs &gt; System.</li> <li>Look for events with the source Power-Troubleshooter to identify power-related events. These may highlight battery, input power, and other issues.</li> </ul> </li> <li> <p>Check Wake-up Sources:</p> <ul> <li>Press <code>Windows Key</code>+<code>X</code> and select PowerShell (Admin) in Windows 10, or <code>Windows Terminal (Admin)</code> in Windows 11.</li> <li>Use the command <code>powercfg /requests</code> to identify processes preventing sleep.</li> <li>Use the command <code>powercfg /waketimers</code> to view active wake timers.</li> <li>Check Task Scheduler to see if any of the discovered processes are scheduled to start on boot or at regular intervals.</li> </ul> </li> <li> <p>Advanced Identification of Power-Hungry Apps:</p> <ul> <li>Open Resource Monitor from the Start menu.</li> <li>Navigate to the CPU, Memory, Network, and other tabs to identify processes with high resource usage.</li> <li>Consider reconfiguring, closing, disabling, or uninstalling applications that use a lot of resources.</li> </ul> </li> <li> <p>Disable Activity History:</p> <ul> <li>Open the Settings app, and go to Privacy &gt; Activity history.</li> <li>Turn off Let Windows collect my activities from this PC.</li> </ul> </li> <li> <p>Prevent Network Adapters From Waking PC:</p> <ul> <li>Open Device Manager by searching for it in the Start menu.</li> <li>Locate your network adapter, right-click, and go to Properties.</li> <li>Under the Power Management tab, uncheck the option that allows the device to wake the computer.</li> </ul> </li> <li> <p>Review Installed Applications:</p> <ul> <li>Manually review installed applications by searching for Add or remove programs in the Start menu.</li> <li>Check settings/preferences of individual applications for power-related options.</li> <li>Uninstall unnecessary or problematic software.</li> </ul> </li> </ol> <p>These troubleshooting steps are generic, but should help in most situations. You should have these key takeaways: - Battery health is the most significant limiter on your device's runtime. A battery in poor health usually cannot be made to last like it used to, simply by closing some applications. Consider replacing your battery. - Background applications that use CPU and memory, make lots of or large network requests, read/write to disk frequently, or that keep your PC awake when it could be conserving energy are the next major concern. Avoid installing programs you don't need, only use programs you trust, and configure applications to use as little power and run as infrequently as possible. - Windows performs a lot of tasks that may affect battery life by default. Changing settings, stopping scheduled tasks, and disabling features can help the system stay in lower power states to conserve battery. - Bad chargers, inconsistent power input, and high temperatures will cause batteries to degrade and discharge faster. Use trusted high-quality chargers, ensure input power is steady, clean any fans or airflow ports, and keep the battery/PC cool.</p>"},{"location":"devdocs/","title":"Table of Contents","text":""},{"location":"devdocs/#tweaks","title":"Tweaks","text":""},{"location":"devdocs/#essential-tweaks","title":"Essential-Tweaks","text":"<ul> <li>Change Windows Terminal default: PowerShell 5 -&gt; PowerShell 7</li> <li>Create Restore Point</li> <li>Debloat Edge</li> <li>Delete Temporary Files</li> <li>Disable Activity History</li> <li>Disable ConsumerFeatures</li> <li>Disable GameDVR</li> <li>Disable Hibernation</li> <li>Disable Homegroup</li> <li>Disable Location Tracking</li> <li>Disable Powershell 7 Telemetry</li> <li>Disable Storage Sense</li> <li>Disable Telemetry</li> <li>Disable Wifi-Sense</li> <li>Enable End Task With Right Click</li> <li>Prefer IPv4 over IPv6</li> <li>Run Disk Cleanup</li> <li>Set Hibernation as default (good for laptops)</li> <li>Set Services to Manual</li> </ul>"},{"location":"devdocs/#shortcuts","title":"Shortcuts","text":"<ul> <li>Create WinUtil Shortcut</li> </ul>"},{"location":"devdocs/#z-advanced-tweaks-caution","title":"z--Advanced-Tweaks---CAUTION","text":"<ul> <li>Adobe Debloat</li> <li>Adobe Network Block</li> <li>Disable Background Apps</li> <li>Disable Fullscreen Optimizations</li> <li>Disable Intel MM (vPro LMS)</li> <li>Disable IPv6</li> <li>Disable Microsoft Copilot</li> <li>Disable Notification Tray/Calendar</li> <li>Disable Teredo</li> <li>DNS</li> <li>Remove ALL MS Store Apps - NOT RECOMMENDED</li> <li>Remove Home and Gallery from explorer</li> <li>Remove Microsoft Edge</li> <li>Remove OneDrive</li> <li>Run OO Shutup 10</li> <li>Set Classic Right-Click Menu </li> <li>Set Display for Performance</li> <li>Set Time to UTC (Dual Boot)</li> </ul>"},{"location":"devdocs/#customize-preferences","title":"Customize-Preferences","text":"<ul> <li>Bing Search in Start Menu</li> <li>Center Taskbar Items</li> <li>Dark Theme for Windows</li> <li>Detailed BSoD</li> <li>Mouse Acceleration</li> <li>NumLock on Startup</li> <li>Search Button in Taskbar</li> <li>Show File Extensions</li> <li>Show Hidden Files</li> <li>Snap Assist Flyout</li> <li>Snap Assist Suggestion</li> <li>Snap Window</li> <li>Sticky Keys</li> <li>Task View Button in Taskbar</li> <li>Verbose Messages During Logon</li> <li>Widgets Button in Taskbar</li> </ul>"},{"location":"devdocs/#performance-plans","title":"Performance-Plans","text":"<ul> <li>Add and Activate Ultimate Performance Profile</li> <li>Remove Ultimate Performance Profile</li> </ul>"},{"location":"devdocs/#features","title":"Features","text":""},{"location":"devdocs/#fixes","title":"Fixes","text":"<ul> <li>Remove Adobe Creative Cloud</li> <li>Reset Network</li> <li>Reset Windows Update</li> <li>Set Up Autologin</li> <li>System Corruption Scan</li> <li>WinGet Reinstall</li> </ul>"},{"location":"devdocs/#legacy-windows-panels","title":"Legacy-Windows-Panels","text":"<ul> <li>Control Panel</li> <li>Network Connections</li> <li>Power Panel</li> <li>Printer Settings</li> <li>Region</li> <li>Sound Settings</li> <li>System Properties</li> <li>User Accounts</li> </ul>"},{"location":"devdocs/#features_1","title":"Features","text":"<ul> <li>All .Net Framework (2,3,4)</li> <li>Disable Legacy F8 Boot Recovery</li> <li>Disable Search Box Web Suggestions in Registry(explorer restart)</li> <li>Enable Daily Registry Backup Task 12.30am</li> <li>Enable Legacy F8 Boot Recovery</li> <li>Enable Search Box Web Suggestions in Registry(explorer restart)</li> <li>HyperV Virtualization</li> <li>Install Features</li> <li>Legacy Media (WMP, DirectPlay)</li> <li>NFS - Network File System</li> <li>Windows Sandbox</li> <li>Windows Subsystem for Linux</li> </ul>"},{"location":"faq/","title":"FAQ's","text":""},{"location":"faq/#how-do-i-uninstall-winutil","title":"How do I uninstall WinUtil?","text":"<ul> <li>You do not have to uninstall WinUtil. As it is a script you run from Powershell it only loads into your RAM. This means as soon as you close WinUtil it will be deleted off your system.</li> </ul>"},{"location":"faq/#i-applied-a-tweak-and-now-something-doesnt-work-what-do-i-do","title":"I applied a tweak and now something doesn't work, what do I do?","text":"<ul> <li>If you applied a tweak and it breaks something, you can always revert the tweak by selecting the tweak and clicking \"Undo Selected Tweaks\".</li> </ul>"},{"location":"userguide/","title":"Walkthrough","text":""},{"location":"userguide/#install","title":"Install","text":"Installation &amp; UpdatesUpgrade AllUninstallGet InstalledClear Selectionprefer Chocolatey <ul> <li>Choose the programs you want to install or upgrade.<ul> <li>For programs not currently installed, this action will install them.</li> <li>For programs already installed, this action will update them to the latest version.</li> </ul> </li> <li>Click the <code>Install/Upgrade Selected</code> button to start the installation or upgrade process.</li> </ul> <ul> <li>Simply press the <code>Upgrade All</code> button.</li> <li>This will upgrade all applicable programs that are installed without the need for individual selection.</li> </ul> <ul> <li>Select the programs you wish to uninstall.</li> <li>Click the <code>Uninstall Selected</code> button to remove the selected programs.</li> </ul> <ul> <li>Click the <code>Get Installed</code> button.</li> <li>This will scan for and select all installed programs in WinUtil that WinGet supports.</li> </ul> <ul> <li>Click the <code>Clear Selection</code> button.</li> <li>This will unselect all checked programs.</li> </ul> <ul> <li>Check the <code>prefer Chocolatey</code> checkbox</li> <li>By default Winutil will use winget to install/upgrade/remove packages and fallback to Chocolatey. This option reverses the preference.</li> <li>This preference will be used for all Buttons on the Install page and persist across Winutil restarts</li> </ul> <p>Tip</p> <p>If you have trouble finding an application, press <code>ctrl + f</code> and search the name of it. Applications will filter depending on your input.</p>"},{"location":"userguide/#tweaks","title":"Tweaks","text":""},{"location":"userguide/#run-tweaks","title":"Run Tweaks","text":"<ul> <li>Open Tweaks Tab: Navigate to the 'Tweaks' tab in the application.</li> <li>Select Tweaks: Choose the tweaks you want to apply. You can use the presets available at the top for convenience.</li> <li>Run Tweaks: After selecting the desired tweaks, click the 'Run Tweaks' button at the bottom of the screen.</li> </ul>"},{"location":"userguide/#undo-tweaks","title":"Undo Tweaks","text":"<ul> <li>Open Tweaks Tab: Go to the 'Tweaks' tab located next to 'Install'.</li> <li>Select Tweaks to Remove: Choose the tweaks you want to disable or remove.</li> <li>Undo Tweaks: Click the 'Undo Selected Tweaks' button at the bottom of the screen to apply the changes.</li> </ul>"},{"location":"userguide/#essential-tweaks","title":"Essential Tweaks","text":"<p>Essential Tweaks are modifications and optimizations that are generally safe for most users to implement. These tweaks are designed to enhance system performance, improve privacy, and reduce unnecessary system activities. They are considered low-risk and are recommended for users who want to ensure their system runs smoothly and efficiently without delving too deeply into complex configurations. The goal of Essential Tweaks is to provide noticeable improvements with minimal risk, making them suitable for a wide range of users, including those who may not have advanced technical knowledge.</p>"},{"location":"userguide/#advanced-tweaks-caution","title":"Advanced Tweaks - CAUTION","text":"<p>Advanced Tweaks are intended for experienced users who have a solid understanding of their system and the potential implications of making deep-level changes. These tweaks involve more significant alterations to the operating system and can provide substantial customization. However, they also carry a higher risk of causing system instability or unintended side effects if not implemented correctly. Users who choose to apply Advanced Tweaks should proceed with caution, ensuring they have adequate knowledge and backups in place to recover if something goes wrong. These tweaks are not recommended for novice users or those unfamiliar with the inner workings of their operating system.</p>"},{"location":"userguide/#oo-shutup","title":"O&amp;O Shutup","text":"<p>O&amp;O ShutUp10++ can be launched from WinUtil with only one button click. It is a free privacy tool for Windows that lets users easily manage their privacy settings. It disables telemetry, controls updates, and manages app permissions to enhance security and privacy. The tool offers recommended settings for optimal privacy with just a few clicks.</p>"},{"location":"userguide/#dns","title":"DNS","text":"<p>The utility provides a convenient DNS selection feature, allowing users to choose between various DNS providers for both IPv4 and IPv6. This enables users to optimize their internet connection for speed, security, and privacy according to their specific needs. Here are the available options:</p> <ul> <li>Default: Uses the default DNS settings configured by your ISP or network.</li> <li>DHCP: Automatically acquires DNS settings from the DHCP server.</li> <li>Google: A reliable and fast DNS service provided by Google.</li> <li>Cloudflare: Known for speed and privacy, Cloudflare DNS is a popular choice for enhancing internet performance.</li> <li>Cloudflare_Malware: Provides additional protection by blocking malware sites.</li> <li>Cloudflare_Malware_Adult: Blocks both malware and adult content, offering more comprehensive filtering.</li> <li>Open_DNS: Offers customizable filtering and enhanced security features.</li> <li>Quad9: Focuses on security by blocking known malicious domains.</li> <li>AdGuard_Ads_Trackers AdGuard DNS will block ads, trackers, or any other DNS requests. Visit website and login for a dashboard, statistics and customize your experience in the server settings.</li> <li>AdGuard_Ads_Trackers_Malware_Adult AdGuard DNS will block ads, trackers, adult content, and enable Safe Search and Safe Mode, where possible.</li> <li>dns0.eu_Open The European public DNS that makes your Internet safer. Offers general-purpose filtering to block malware, phishing, and tracking domains for enhanced privacy and security.</li> <li>dns0.eu_ZERO Provides advanced security with robust filters for highly sensitive environments, blocking high-risk domains using threat intelligence and sophisticated heuristics like Newly Registered Domains (NRD) and Domain Generation Algorithms (DGA).</li> <li>dns0.eu_KIDS A child-safe DNS that blocks adult content, explicit search results, mature videos, dating sites, piracy, and ads, creating a secure internet experience for children on any device or network.</li> </ul>"},{"location":"userguide/#customize-preferences","title":"Customize Preferences","text":"<p>The Customize Preferences section allows users to personalize their Windows experience by toggling various visual and functional features. These preferences are designed to enhance usability and tailor the system to the user\u2019s specific needs and preferences.</p>"},{"location":"userguide/#performance-plans","title":"Performance Plans","text":"<p>The Performance Plans section allows users to manage the Ultimate Performance Profile on their system. This feature is designed to optimize the system for maximum performance.</p>"},{"location":"userguide/#add-and-activate-the-ultimate-performance-profile","title":"Add and activate the Ultimate Performance Profile:","text":"<ul> <li>Enables and activates the Ultimate Performance Profile to enhance system performance by minimizing latency and increasing efficiency.</li> </ul>"},{"location":"userguide/#remove-ultimate-performance-profile","title":"Remove Ultimate Performance Profile:","text":"<ul> <li>Deactivates the Ultimate Performance Profile, changing the system to the Balanced Profile.</li> </ul>"},{"location":"userguide/#shortcuts","title":"Shortcuts","text":"<p>The utility includes a feature to easily create a desktop shortcut, providing quick access to the script.</p>"},{"location":"userguide/#config","title":"Config","text":""},{"location":"userguide/#features","title":"Features","text":"<ul> <li> <p>Install the most used Windows Features by checking the checkbox and clicking \"Install Features\" to install them.</p> </li> <li> <p>All .Net Frameworks (2, 3, 4)</p> </li> <li>HyperV Virtualization</li> <li>Legacy Media (WMP, DirectPlay)</li> <li>NFS - Network File System</li> <li>Enable Search Box Web Suggestions in Registry (explorer restart)</li> <li>Disables Search Box Web Suggestions in Registry (explorer restart)</li> <li>Enable Daily Registry Backup Task 12:30am</li> <li>Enable Legacy F8 Boot Recovery</li> <li>Disable Legacy F8 Boot Recovery</li> <li>Windows Subsystem for Linux</li> <li>Windows Sandbox</li> </ul>"},{"location":"userguide/#fixes","title":"Fixes","text":"<ul> <li> <p>Quick fixes for your system if you are having issues.</p> </li> <li> <p>Set Up Autologin</p> </li> <li>Reset Windows Update</li> <li>Reset Network</li> <li>System Corruption Scan</li> <li>WinGet Reinstall</li> <li>Remove Adobe Creative Cloud</li> </ul>"},{"location":"userguide/#legacy-windows-panels","title":"Legacy Windows Panels","text":"<p>Open old-school Windows panels directly from WinUtil. Following Panels are available:</p> <ul> <li>Control Panel</li> <li>Network Connections</li> <li>Power Panel</li> <li>Region</li> <li>Sound Settings</li> <li>System Properties</li> <li>User Accounts</li> </ul>"},{"location":"userguide/#remote-access","title":"Remote Access","text":"<p>Enables OpenSSH server on your windows machine.</p>"},{"location":"userguide/#updates","title":"Updates","text":"<p>The utility provides three distinct settings for managing Windows updates: Default (Out of Box) Settings, Security (Recommended) Settings, and Disable ALL Updates (NOT RECOMMENDED!). Each setting offers a different approach to handling updates, catering to various user needs and preferences.</p>"},{"location":"userguide/#default-out-of-box-settings","title":"Default (Out of Box) Settings","text":"<ul> <li>Description: This setting retains the default configurations that come with Windows, ensuring no modifications are made.</li> <li>Functionality: It will remove any custom Windows update settings previously applied.</li> <li>Note: If update errors persist, reset all updates in the configuration tab to restore all Microsoft Update Services to their default settings, reinstalling them from their servers.</li> </ul>"},{"location":"userguide/#security-recommended-settings","title":"Security (Recommended) Settings","text":"<ul> <li>Description: This is the recommended setting for all computers.</li> <li>Update Schedule:<ul> <li>Feature Updates: Delays feature updates by 2 years to avoid potential bugs and instability.</li> <li>Security Updates: Installs security updates 4 days after their release to ensure system protection against pressing security flaws.</li> </ul> </li> <li>Rationale:<ul> <li>Feature Updates: Often introduce new features and bugs; delaying these updates minimizes the risk of system disruptions.</li> <li>Security Updates: Essential for patching critical security vulnerabilities. Delaying them by a few days allows for verification of stability and compatibility without leaving the system exposed for extended periods.</li> </ul> </li> </ul>"},{"location":"userguide/#disable-all-updates-not-recommended","title":"Disable ALL Updates (NOT RECOMMENDED!)","text":"<ul> <li>Description: This setting completely disables all Windows updates.</li> <li>Suitability: May be appropriate for systems used for specific purposes that do not require active internet browsing.</li> <li>Warning: Disabling updates significantly increases the risk of the system being hacked or infected due to the lack of security patches.</li> <li>Note: It is strongly advised against using this setting due to the heightened security risks.</li> </ul> <p>Bug</p> <p>The Updates tab is currently non-functional. We are actively working on a resolution to restore its functionality.</p>"},{"location":"userguide/#microwin","title":"MicroWin","text":"<ul> <li>MicroWin lets you customize your Windows 10 and 11 installation images by debloating them however you want.</li> </ul>"},{"location":"userguide/#basic-usage","title":"Basic usage","text":"<ol> <li> <p>Specify the source Windows ISO to customize.</p> <ul> <li>If you don't have a Windows ISO file prepared, you can download it using the Media Creation Tool for the respective Windows version. Here is the Windows 11 version, and here is the Windows 10 version</li> </ul> </li> <li> <p>Configure the debloat process.</p> </li> <li>Specify the target location for the new ISO file.</li> <li>Let the magic happen!</li> </ol> <p>Heads-up</p> <p>This feature is still in development, and you may encounter some issues with the generated images. If that happens, don't hesitate to report an issue!</p>"},{"location":"userguide/#options","title":"Options","text":"<ul> <li>Download oscdimg.exe from the CTT GitHub repo will grab an OSCDIMG executable from the GitHub repository instead of a Chocolatey package.</li> </ul> <p>Info</p> <p>OSCDIMG is the tool that lets the program create ISO images. Typically, you would find this in the Windows Assessment and Deployment Kit</p> <ul> <li>Selecting a scratch directory will copy the contents of the ISO file to the directory you specify instead of an automatically generated folder in the <code>%TEMP%</code> directory.</li> <li>You can select an edition of Windows to debloat (SKU) using the convenient drop-down menu.</li> </ul> <p>By default, MicroWin will debloat the Pro edition, but you can choose any edition you want.</p>"},{"location":"userguide/#driver-integration-options","title":"Driver integration options","text":"<ul> <li>Inject drivers will add the drivers in the folder that you specify to the target Windows image.</li> <li>Import drivers from the current system will add every third-party driver that is present in your active installation.</li> </ul> <p>This makes the target image have the same hardware compatibility as the active installation. However, this means that you will only be able to install the target Windows image and take full advantage of it on computers with the same hardware. To avoid this, you'll need to customize the <code>install.wim</code> file of the target ISO in the 'sources` folder.</p>"},{"location":"userguide/#custom-user-settings","title":"Custom user settings","text":"<p>With MicroWin, you can also configure your user before proceeding if you don't want to use the default <code>User</code> account. To do this, simply type the account name (20 characters maximum), and a password. Then, let MicroWin do the rest.</p> <p>Info</p> <p>Please make sure that you remember your password. MicroWin will configure auto-login settings, so you won't have to enter your password. However, if you are required to enter your password, it's best that you don't forget it.</p>"},{"location":"userguide/#ventoy-options","title":"Ventoy options","text":"<ul> <li>Copy to Ventoy will copy the target ISO file to any USB drive with Ventoy installed</li> </ul> <p>Info</p> <p>Ventoy is a solution that lets you boot to any ISO file stored on a drive. Think of it as having multiple bootable USBs in one. Do note, though, that your drive needs to have enough free space for the target ISO file.</p>"},{"location":"userguide/#automation","title":"Automation","text":"<ul> <li> <p>Some features are available through automation. This allows you to save your config file, pass it to WinUtil, walk away and come back to a finished system. Here is how you can set it up currently with Winutil &gt;24.01.15</p> </li> <li> <p>On the Install Tab, click \"Get Installed\", this will get all installed apps supported by Winutil on the system.  </p> </li> <li> <p>Click on the Settings cog in the upper right corner and choose Export. Choose file file and location; this will export the setting file.  </p> </li> <li> <p>Copy this file to a USB or somewhere you can use it after Windows installation.</p> </li> </ul> <p>Tip</p> <p>Use the Microwin tab to create a custom Windows image &amp; install the Windows image.</p> <ul> <li>On any supported Windows machine, open PowerShell as Admin and run the following command to automatically apply tweaks and install apps from the config file.     <pre><code>iex \"&amp; { $(irm https://christitus.com/win) } -Config [path-to-your-config] -Run\"\n</code></pre></li> <li>Have a cup of coffee! Come back when it's done.</li> </ul>"},{"location":"dev/features/Features/DisableLegacyRecovery/","title":"Disable Legacy F8 Boot Recovery","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/DisableLegacyRecovery/#description","title":"Description","text":"<p>Disables Advanced Boot Options screen that lets you start Windows in advanced troubleshooting modes.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Legacy F8 Boot Recovery\",\n  \"Description\": \"Disables Advanced Boot Options screen that lets you start Windows in advanced troubleshooting modes.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a019_\",\n  \"feature\": [],\n  \"InvokeScript\": [\n    \"\n      If (!(Test-Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Configuration Manager\\\\LastKnownGood')) {\n            New-Item -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Configuration Manager\\\\LastKnownGood' -Force | Out-Null\n      }\n      New-ItemProperty -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Configuration Manager\\\\LastKnownGood' -Name 'Enabled' -Type DWord -Value 0 -Force\n      Start-Process -FilePath cmd.exe -ArgumentList '/c bcdedit /Set {Current} BootMenuPolicy Standard' -Wait\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/DisableLegacyRecovery\"\n}\n</code></pre>"},{"location":"dev/features/Features/DisableLegacyRecovery/#invoke-script","title":"Invoke Script","text":"<pre><code>      If (!(Test-Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Configuration Manager\\LastKnownGood')) {\n            New-Item -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Configuration Manager\\LastKnownGood' -Force | Out-Null\n      }\n      New-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Configuration Manager\\LastKnownGood' -Name 'Enabled' -Type DWord -Value 0 -Force\n      Start-Process -FilePath cmd.exe -ArgumentList '/c bcdedit /Set {Current} BootMenuPolicy Standard' -Wait\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/DisableSearchSuggestions/","title":"Disable Search Box Web Suggestions in Registry(explorer restart)","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/DisableSearchSuggestions/#description","title":"Description","text":"<p>Disables web suggestions when searching using Windows Search.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Search Box Web Suggestions in Registry(explorer restart)\",\n  \"Description\": \"Disables web suggestions when searching using Windows Search.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a016_\",\n  \"feature\": [],\n  \"InvokeScript\": [\n    \"\n      If (!(Test-Path 'HKCU:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\Explorer')) {\n            New-Item -Path 'HKCU:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\Explorer' -Force | Out-Null\n      }\n      New-ItemProperty -Path 'HKCU:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\Explorer' -Name 'DisableSearchBoxSuggestions' -Type DWord -Value 1 -Force\n      Stop-Process -name explorer -force\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/DisableSearchSuggestions\"\n}\n</code></pre>"},{"location":"dev/features/Features/DisableSearchSuggestions/#invoke-script","title":"Invoke Script","text":"<pre><code>      If (!(Test-Path 'HKCU:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer')) {\n            New-Item -Path 'HKCU:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer' -Force | Out-Null\n      }\n      New-ItemProperty -Path 'HKCU:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer' -Name 'DisableSearchBoxSuggestions' -Type DWord -Value 1 -Force\n      Stop-Process -name explorer -force\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/EnableLegacyRecovery/","title":"Enable Legacy F8 Boot Recovery","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/EnableLegacyRecovery/#description","title":"Description","text":"<p>Enables Advanced Boot Options screen that lets you start Windows in advanced troubleshooting modes.</p> Preview Code <pre><code>{\n  \"Content\": \"Enable Legacy F8 Boot Recovery\",\n  \"Description\": \"Enables Advanced Boot Options screen that lets you start Windows in advanced troubleshooting modes.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a018_\",\n  \"feature\": [],\n  \"InvokeScript\": [\n    \"\n      If (!(Test-Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Configuration Manager\\\\LastKnownGood')) {\n            New-Item -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Configuration Manager\\\\LastKnownGood' -Force | Out-Null\n      }\n      New-ItemProperty -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Configuration Manager\\\\LastKnownGood' -Name 'Enabled' -Type DWord -Value 1 -Force\n      Start-Process -FilePath cmd.exe -ArgumentList '/c bcdedit /Set {Current} BootMenuPolicy Legacy' -Wait\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/EnableLegacyRecovery\"\n}\n</code></pre>"},{"location":"dev/features/Features/EnableLegacyRecovery/#invoke-script","title":"Invoke Script","text":"<pre><code>      If (!(Test-Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Configuration Manager\\LastKnownGood')) {\n            New-Item -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Configuration Manager\\LastKnownGood' -Force | Out-Null\n      }\n      New-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Configuration Manager\\LastKnownGood' -Name 'Enabled' -Type DWord -Value 1 -Force\n      Start-Process -FilePath cmd.exe -ArgumentList '/c bcdedit /Set {Current} BootMenuPolicy Legacy' -Wait\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/EnableSearchSuggestions/","title":"Enable Search Box Web Suggestions in Registry(explorer restart)","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/EnableSearchSuggestions/#description","title":"Description","text":"<p>Enables web suggestions when searching using Windows Search.</p> Preview Code <pre><code>{\n  \"Content\": \"Enable Search Box Web Suggestions in Registry(explorer restart)\",\n  \"Description\": \"Enables web suggestions when searching using Windows Search.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a015_\",\n  \"feature\": [],\n  \"InvokeScript\": [\n    \"\n      If (!(Test-Path 'HKCU:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\Explorer')) {\n            New-Item -Path 'HKCU:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\Explorer' -Force | Out-Null\n      }\n      New-ItemProperty -Path 'HKCU:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\Explorer' -Name 'DisableSearchBoxSuggestions' -Type DWord -Value 0 -Force\n      Stop-Process -name explorer -force\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/EnableSearchSuggestions\"\n}\n</code></pre>"},{"location":"dev/features/Features/EnableSearchSuggestions/#invoke-script","title":"Invoke Script","text":"<pre><code>      If (!(Test-Path 'HKCU:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer')) {\n            New-Item -Path 'HKCU:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer' -Force | Out-Null\n      }\n      New-ItemProperty -Path 'HKCU:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer' -Name 'DisableSearchBoxSuggestions' -Type DWord -Value 0 -Force\n      Stop-Process -name explorer -force\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/Install/","title":"Install Features","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Install Features\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a060_\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/Install\"\n}\n</code></pre>"},{"location":"dev/features/Features/Install/#function-invoke-wpffeatureinstall","title":"Function: Invoke-WPFFeatureInstall","text":"<pre><code>function Invoke-WPFFeatureInstall {\n    &lt;#\n\n    .SYNOPSIS\n        Installs selected Windows Features\n\n    #&gt;\n\n    if($sync.ProcessRunning) {\n        $msg = \"[Invoke-WPFFeatureInstall] Install process is currently running.\"\n        [System.Windows.MessageBox]::Show($msg, \"Winutil\", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)\n        return\n    }\n\n    $Features = (Get-WinUtilCheckBoxes)[\"WPFFeature\"]\n\n    Invoke-WPFRunspace -ArgumentList $Features -DebugPreference $DebugPreference -ScriptBlock {\n        param($Features, $DebugPreference)\n        $sync.ProcessRunning = $true\n        if ($Features.count -eq 1) {\n            $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"Indeterminate\" -value 0.01 -overlay \"logo\" })\n        } else {\n            $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"Normal\" -value 0.01 -overlay \"logo\" })\n        }\n\n        Invoke-WinUtilFeatureInstall $Features\n\n        $sync.ProcessRunning = $false\n        $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"None\" -overlay \"checkmark\" })\n\n        Write-Host \"===================================\"\n        Write-Host \"---   Features are Installed    ---\"\n        Write-Host \"---  A Reboot may be required   ---\"\n        Write-Host \"===================================\"\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/RegBackup/","title":"Enable Daily Registry Backup Task 12.30am","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/RegBackup/#description","title":"Description","text":"<p>Enables daily registry backup, previously disabled by Microsoft in Windows 10 1803.</p> Preview Code <pre><code>{\n  \"Content\": \"Enable Daily Registry Backup Task 12.30am\",\n  \"Description\": \"Enables daily registry backup, previously disabled by Microsoft in Windows 10 1803.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a017_\",\n  \"feature\": [],\n  \"InvokeScript\": [\n    \"\n      New-ItemProperty -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Configuration Manager' -Name 'EnablePeriodicBackup' -Type DWord -Value 1 -Force\n      New-ItemProperty -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Configuration Manager' -Name 'BackupCount' -Type DWord -Value 2 -Force\n      $action = New-ScheduledTaskAction -Execute 'schtasks' -Argument '/run /i /tn \\\"\\\\Microsoft\\\\Windows\\\\Registry\\\\RegIdleBackup\\\"'\n      $trigger = New-ScheduledTaskTrigger -Daily -At 00:30\n      Register-ScheduledTask -Action $action -Trigger $trigger -TaskName 'AutoRegBackup' -Description 'Create System Registry Backups' -User 'System'\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/RegBackup\"\n}\n</code></pre>"},{"location":"dev/features/Features/RegBackup/#invoke-script","title":"Invoke Script","text":"<pre><code>      New-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Configuration Manager' -Name 'EnablePeriodicBackup' -Type DWord -Value 1 -Force\n      New-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Configuration Manager' -Name 'BackupCount' -Type DWord -Value 2 -Force\n      $action = New-ScheduledTaskAction -Execute 'schtasks' -Argument '/run /i /tn \"\\Microsoft\\Windows\\Registry\\RegIdleBackup\"'\n      $trigger = New-ScheduledTaskTrigger -Daily -At 00:30\n      Register-ScheduledTask -Action $action -Trigger $trigger -TaskName 'AutoRegBackup' -Description 'Create System Registry Backups' -User 'System'\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/Sandbox/","title":"Windows Sandbox","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/Sandbox/#description","title":"Description","text":"<p>Windows Sandbox is a lightweight virtual machine that provides a temporary desktop environment to safely run applications and programs in isolation.</p> Preview Code <pre><code>{\n  \"Content\": \"Windows Sandbox\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a021_\",\n  \"Description\": \"Windows Sandbox is a lightweight virtual machine that provides a temporary desktop environment to safely run applications and programs in isolation.\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/Sandbox\"\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/dotnet/","title":"All .Net Framework (2,3,4)","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/dotnet/#description","title":"Description","text":"<p>.NET and .NET Framework is a developer platform made up of tools, programming languages, and libraries for building many different types of applications.</p> Preview Code <pre><code>{\n  \"Content\": \"All .Net Framework (2,3,4)\",\n  \"Description\": \".NET and .NET Framework is a developer platform made up of tools, programming languages, and libraries for building many different types of applications.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a010_\",\n  \"feature\": [\n    \"NetFx4-AdvSrvs\",\n    \"NetFx3\"\n  ],\n  \"InvokeScript\": [],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/dotnet\"\n}\n</code></pre>"},{"location":"dev/features/Features/dotnet/#features","title":"Features","text":"<p>Optional Windows Features are additional functionalities or components in the Windows operating system that users can choose to enable or disable based on their specific needs and preferences.</p> <p>You can find information about Optional Windows Features on Microsoft's Website for Optional Features.</p>"},{"location":"dev/features/Features/dotnet/#features-to-install","title":"Features to install","text":"<ul> <li>NetFx4-AdvSrvs</li> <li>NetFx3</li> </ul> <p>View the JSON file</p>"},{"location":"dev/features/Features/hyperv/","title":"HyperV Virtualization","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/hyperv/#description","title":"Description","text":"<p>Hyper-V is a hardware virtualization product developed by Microsoft that allows users to create and manage virtual machines.</p> Preview Code <pre><code>{\n  \"Content\": \"HyperV Virtualization\",\n  \"Description\": \"Hyper-V is a hardware virtualization product developed by Microsoft that allows users to create and manage virtual machines.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a011_\",\n  \"feature\": [\n    \"HypervisorPlatform\",\n    \"Microsoft-Hyper-V-All\",\n    \"Microsoft-Hyper-V\",\n    \"Microsoft-Hyper-V-Tools-All\",\n    \"Microsoft-Hyper-V-Management-PowerShell\",\n    \"Microsoft-Hyper-V-Hypervisor\",\n    \"Microsoft-Hyper-V-Services\",\n    \"Microsoft-Hyper-V-Management-Clients\"\n  ],\n  \"InvokeScript\": [\n    \"Start-Process -FilePath cmd.exe -ArgumentList '/c bcdedit /set hypervisorschedulertype classic' -Wait\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/hyperv\"\n}\n</code></pre>"},{"location":"dev/features/Features/hyperv/#features","title":"Features","text":"<p>Optional Windows Features are additional functionalities or components in the Windows operating system that users can choose to enable or disable based on their specific needs and preferences.</p> <p>You can find information about Optional Windows Features on Microsoft's Website for Optional Features.</p>"},{"location":"dev/features/Features/hyperv/#features-to-install","title":"Features to install","text":"<ul> <li>HypervisorPlatform</li> <li>Microsoft-Hyper-V-All</li> <li>Microsoft-Hyper-V</li> <li>Microsoft-Hyper-V-Tools-All</li> <li>Microsoft-Hyper-V-Management-PowerShell</li> <li>Microsoft-Hyper-V-Hypervisor</li> <li>Microsoft-Hyper-V-Services</li> <li>Microsoft-Hyper-V-Management-Clients</li> </ul>"},{"location":"dev/features/Features/hyperv/#invoke-script","title":"Invoke Script","text":"<pre><code>Start-Process -FilePath cmd.exe -ArgumentList '/c bcdedit /set hypervisorschedulertype classic' -Wait\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/legacymedia/","title":"Legacy Media (WMP, DirectPlay)","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/legacymedia/#description","title":"Description","text":"<p>Enables legacy programs from previous versions of windows</p> Preview Code <pre><code>{\n  \"Content\": \"Legacy Media (WMP, DirectPlay)\",\n  \"Description\": \"Enables legacy programs from previous versions of windows\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a012_\",\n  \"feature\": [\n    \"WindowsMediaPlayer\",\n    \"MediaPlayback\",\n    \"DirectPlay\",\n    \"LegacyComponents\"\n  ],\n  \"InvokeScript\": [],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/legacymedia\"\n}\n</code></pre>"},{"location":"dev/features/Features/legacymedia/#features","title":"Features","text":"<p>Optional Windows Features are additional functionalities or components in the Windows operating system that users can choose to enable or disable based on their specific needs and preferences.</p> <p>You can find information about Optional Windows Features on Microsoft's Website for Optional Features.</p>"},{"location":"dev/features/Features/legacymedia/#features-to-install","title":"Features to install","text":"<ul> <li>WindowsMediaPlayer</li> <li>MediaPlayback</li> <li>DirectPlay</li> <li>LegacyComponents</li> </ul> <p>View the JSON file</p>"},{"location":"dev/features/Features/nfs/","title":"NFS - Network File System","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/nfs/#description","title":"Description","text":"<p>Network File System (NFS) is a mechanism for storing files on a network.</p> Preview Code <pre><code>{\n  \"Content\": \"NFS - Network File System\",\n  \"Description\": \"Network File System (NFS) is a mechanism for storing files on a network.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a014_\",\n  \"feature\": [\n    \"ServicesForNFS-ClientOnly\",\n    \"ClientForNFS-Infrastructure\",\n    \"NFS-Administration\"\n  ],\n  \"InvokeScript\": [\n    \"nfsadmin client stop\",\n    \"Set-ItemProperty -Path 'HKLM:\\\\SOFTWARE\\\\Microsoft\\\\ClientForNFS\\\\CurrentVersion\\\\Default' -Name 'AnonymousUID' -Type DWord -Value 0\",\n    \"Set-ItemProperty -Path 'HKLM:\\\\SOFTWARE\\\\Microsoft\\\\ClientForNFS\\\\CurrentVersion\\\\Default' -Name 'AnonymousGID' -Type DWord -Value 0\",\n    \"nfsadmin client start\",\n    \"nfsadmin client localhost config fileaccess=755 SecFlavors=+sys -krb5 -krb5i\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/nfs\"\n}\n</code></pre>"},{"location":"dev/features/Features/nfs/#features","title":"Features","text":"<p>Optional Windows Features are additional functionalities or components in the Windows operating system that users can choose to enable or disable based on their specific needs and preferences.</p> <p>You can find information about Optional Windows Features on Microsoft's Website for Optional Features.</p>"},{"location":"dev/features/Features/nfs/#features-to-install","title":"Features to install","text":"<ul> <li>ServicesForNFS-ClientOnly</li> <li>ClientForNFS-Infrastructure</li> <li>NFS-Administration</li> </ul>"},{"location":"dev/features/Features/nfs/#invoke-script","title":"Invoke Script","text":"<pre><code>nfsadmin client stop\nSet-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\ClientForNFS\\CurrentVersion\\Default' -Name 'AnonymousUID' -Type DWord -Value 0\nSet-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\ClientForNFS\\CurrentVersion\\Default' -Name 'AnonymousGID' -Type DWord -Value 0\nnfsadmin client start\nnfsadmin client localhost config fileaccess=755 SecFlavors=+sys -krb5 -krb5i\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Features/wsl/","title":"Windows Subsystem for Linux","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/features/Features/wsl/#description","title":"Description","text":"<p>Windows Subsystem for Linux is an optional feature of Windows that allows Linux programs to run natively on Windows without the need for a separate virtual machine or dual booting.</p> Preview Code <pre><code>{\n  \"Content\": \"Windows Subsystem for Linux\",\n  \"Description\": \"Windows Subsystem for Linux is an optional feature of Windows that allows Linux programs to run natively on Windows without the need for a separate virtual machine or dual booting.\",\n  \"category\": \"Features\",\n  \"panel\": \"1\",\n  \"Order\": \"a020_\",\n  \"feature\": [\n    \"VirtualMachinePlatform\",\n    \"Microsoft-Windows-Subsystem-Linux\"\n  ],\n  \"InvokeScript\": [],\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Features/wsl\"\n}\n</code></pre>"},{"location":"dev/features/Features/wsl/#features","title":"Features","text":"<p>Optional Windows Features are additional functionalities or components in the Windows operating system that users can choose to enable or disable based on their specific needs and preferences.</p> <p>You can find information about Optional Windows Features on Microsoft's Website for Optional Features.</p>"},{"location":"dev/features/Features/wsl/#features-to-install","title":"Features to install","text":"<ul> <li>VirtualMachinePlatform</li> <li>Microsoft-Windows-Subsystem-Linux</li> </ul> <p>View the JSON file</p>"},{"location":"dev/features/Fixes/Autologin/","title":"Set Up Autologin","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Set Up Autologin\",\n  \"category\": \"Fixes\",\n  \"Order\": \"a040_\",\n  \"panel\": \"1\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Fixes/Autologin\"\n}\n</code></pre>"},{"location":"dev/features/Fixes/Autologin/#function-invoke-wpfpanelautologin","title":"Function: Invoke-WPFPanelAutologin","text":"<pre><code>function Invoke-WPFPanelAutologin {\n    &lt;#\n\n    .SYNOPSIS\n        Enables autologin using Sysinternals Autologon.exe\n\n    #&gt;\n\n    # Official Microsoft recommendation: https://learn.microsoft.com/en-us/sysinternals/downloads/autologon\n    Invoke-WebRequest -Uri \"https://live.sysinternals.com/Autologon.exe\" -OutFile \"$env:temp\\autologin.exe\"\n    cmd /c \"$env:temp\\autologin.exe\" /accepteula\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Fixes/DISM/","title":"System Corruption Scan","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"System Corruption Scan\",\n  \"category\": \"Fixes\",\n  \"panel\": \"1\",\n  \"Order\": \"a043_\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Fixes/DISM\"\n}\n</code></pre>"},{"location":"dev/features/Fixes/DISM/#function-invoke-wpfpaneldism","title":"Function: Invoke-WPFPanelDISM","text":"<pre><code>function Invoke-WPFPanelDISM {\n    &lt;#\n\n    .SYNOPSIS\n        Checks for system corruption using Chkdsk, SFC, and DISM\n\n    .DESCRIPTION\n        1. Chkdsk    - Fixes disk and filesystem corruption\n        2. SFC Run 1 - Fixes system file corruption, and fixes DISM if it was corrupted\n        3. DISM      - Fixes system image corruption, and fixes SFC's system image if it was corrupted\n        4. SFC Run 2 - Fixes system file corruption, this time with an almost guaranteed uncorrupted system image\n\n    .NOTES\n        Command Arguments:\n            1. Chkdsk\n                /Scan - Runs an online scan on the system drive, attempts to fix any corruption, and queues other corruption for fixing on reboot\n            2. SFC\n                /ScanNow - Performs a scan of the system files and fixes any corruption\n            3. DISM      - Fixes system image corruption, and fixes SFC's system image if it was corrupted\n                /Online - Fixes the currently running system image\n                /Cleanup-Image - Performs cleanup operations on the image, could remove some unneeded temporary files\n                /Restorehealth - Performs a scan of the image and fixes any corruption\n\n    #&gt;\n    Start-Process PowerShell -ArgumentList \"Write-Host '(1/4) Chkdsk' -ForegroundColor Green; Chkdsk /scan;\n    Write-Host '`n(2/4) SFC - 1st scan' -ForegroundColor Green; sfc /scannow;\n    Write-Host '`n(3/4) DISM' -ForegroundColor Green; DISM /Online /Cleanup-Image /Restorehealth;\n    Write-Host '`n(4/4) SFC - 2nd scan' -ForegroundColor Green; sfc /scannow;\n    Read-Host '`nPress Enter to Continue'\" -verb runas\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Fixes/Network/","title":"Reset Network","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Reset Network\",\n  \"category\": \"Fixes\",\n  \"Order\": \"a042_\",\n  \"panel\": \"1\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Fixes/Network\"\n}\n</code></pre>"},{"location":"dev/features/Fixes/Network/#function-invoke-wpffixesnetwork","title":"Function: Invoke-WPFFixesNetwork","text":"<pre><code>function Invoke-WPFFixesNetwork {\n    &lt;#\n\n    .SYNOPSIS\n        Resets various network configurations\n\n    #&gt;\n\n    Write-Host \"Resetting Network with netsh\"\n\n    # Reset WinSock catalog to a clean state\n    Start-Process -NoNewWindow -FilePath \"netsh\" -ArgumentList \"winsock\", \"reset\"\n    # Resets WinHTTP proxy setting to DIRECT\n    Start-Process -NoNewWindow -FilePath \"netsh\" -ArgumentList \"winhttp\", \"reset\", \"proxy\"\n    # Removes all user configured IP settings\n    Start-Process -NoNewWindow -FilePath \"netsh\" -ArgumentList \"int\", \"ip\", \"reset\"\n\n    Write-Host \"Process complete. Please reboot your computer.\"\n\n    $ButtonType = [System.Windows.MessageBoxButton]::OK\n    $MessageboxTitle = \"Network Reset \"\n    $Messageboxbody = (\"Stock settings loaded.`n Please reboot your computer\")\n    $MessageIcon = [System.Windows.MessageBoxImage]::Information\n\n    [System.Windows.MessageBox]::Show($Messageboxbody, $MessageboxTitle, $ButtonType, $MessageIcon)\n    Write-Host \"==========================================\"\n    Write-Host \"-- Network Configuration has been Reset --\"\n    Write-Host \"==========================================\"\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Fixes/RunAdobeCCCleanerTool/","title":"Remove Adobe Creative Cloud","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Remove Adobe Creative Cloud\",\n  \"category\": \"Fixes\",\n  \"panel\": \"1\",\n  \"Order\": \"a045_\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Fixes/RunAdobeCCCleanerTool\"\n}\n</code></pre>"},{"location":"dev/features/Fixes/RunAdobeCCCleanerTool/#function-invoke-wpfrunadobecccleanertool","title":"Function: Invoke-WPFRunAdobeCCCleanerTool","text":"<pre><code>function Invoke-WPFRunAdobeCCCleanerTool {\n    &lt;#\n    .SYNOPSIS\n        It removes or fixes problem files and resolves permission issues in registry keys.\n    .DESCRIPTION\n        The Creative Cloud Cleaner tool is a utility for experienced users to clean up corrupted installations.\n    #&gt;\n\n    [string]$url=\"https://swupmf.adobe.com/webfeed/CleanerTool/win/AdobeCreativeCloudCleanerTool.exe\"\n\n    Write-Host \"The Adobe Creative Cloud Cleaner tool is hosted at\"\n    Write-Host \"$url\"\n\n    try {\n        # Don't show the progress because it will slow down the download speed\n        $ProgressPreference='SilentlyContinue'\n\n        Invoke-WebRequest -Uri $url -OutFile \"$env:TEMP\\AdobeCreativeCloudCleanerTool.exe\" -UseBasicParsing -ErrorAction SilentlyContinue -Verbose\n\n        # Revert back the ProgressPreference variable to the default value since we got the file desired\n        $ProgressPreference='Continue'\n\n        Start-Process -FilePath \"$env:TEMP\\AdobeCreativeCloudCleanerTool.exe\" -Wait -ErrorAction SilentlyContinue -Verbose\n    } catch {\n        Write-Error $_.Exception.Message\n    } finally {\n        if (Test-Path -Path \"$env:TEMP\\AdobeCreativeCloudCleanerTool.exe\") {\n            Write-Host \"Cleaning up...\"\n            Remove-Item -Path \"$env:TEMP\\AdobeCreativeCloudCleanerTool.exe\" -Verbose\n        }\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Fixes/Update/","title":"Reset Windows Update","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Reset Windows Update\",\n  \"category\": \"Fixes\",\n  \"panel\": \"1\",\n  \"Order\": \"a041_\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Fixes/Update\"\n}\n</code></pre>"},{"location":"dev/features/Fixes/Update/#function-invoke-wpffixesupdate","title":"Function: Invoke-WPFFixesUpdate","text":"<pre><code>function Invoke-WPFFixesUpdate {\n\n    &lt;#\n\n    .SYNOPSIS\n        Performs various tasks in an attempt to repair Windows Update\n\n    .DESCRIPTION\n        1. (Aggressive Only) Scans the system for corruption using chkdsk, SFC, and DISM\n            Steps:\n                1. Runs chkdsk /scan /perf\n                    /scan - Runs an online scan on the volume\n                    /perf - Uses more system resources to complete a scan as fast as possible\n                2. Runs SFC /scannow\n                    /scannow - Scans integrity of all protected system files and repairs files with problems when possible\n                3. Runs DISM /Online /Cleanup-Image /RestoreHealth\n                    /Online - Targets the running operating system\n                    /Cleanup-Image - Performs cleanup and recovery operations on the image\n                    /RestoreHealth - Scans the image for component store corruption and attempts to repair the corruption using Windows Update\n                4. Runs SFC /scannow\n                    Ran twice in case DISM repaired SFC\n        2. Stops Windows Update Services\n        3. Remove the QMGR Data file, which stores BITS jobs\n        4. (Aggressive Only) Renames the DataStore and CatRoot2 folders\n            DataStore - Contains the Windows Update History and Log Files\n            CatRoot2 - Contains the Signatures for Windows Update Packages\n        5. Renames the Windows Update Download Folder\n        6. Deletes the Windows Update Log\n        7. (Aggressive Only) Resets the Security Descriptors on the Windows Update Services\n        8. Reregisters the BITS and Windows Update DLLs\n        9. Removes the WSUS client settings\n        10. Resets WinSock\n        11. Gets and deletes all BITS jobs\n        12. Sets the startup type of the Windows Update Services then starts them\n        13. Forces Windows Update to check for updates\n\n    .PARAMETER Aggressive\n        If specified, the script will take additional steps to repair Windows Update that are more dangerous, take a significant amount of time, or are generally unnecessary\n\n    #&gt;\n\n    param($Aggressive = $false)\n\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -PercentComplete 0\n    # Wait for the first progress bar to show, otherwise the second one won't show\n    Start-Sleep -Milliseconds 200\n\n    if ($Aggressive) {\n        # Scan system for corruption\n        Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Scanning for corruption...\" -PercentComplete 0\n        Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Running chkdsk...\" -PercentComplete 0\n        # 2&gt;&amp;1 redirects stdout, alowing iteration over the output\n        chkdsk.exe /scan /perf 2&gt;&amp;1 | ForEach-Object {\n            # Write stdout to the Verbose stream\n            Write-Verbose $_\n\n            # Get the index of the total percentage\n            $index = $_.IndexOf(\"Total:\")\n            if (\n                # If the percent is found\n                ($percent = try {(\n                    $_.Substring(\n                        $index + 6,\n                        $_.IndexOf(\"%\", $index) - $index - 6\n                    )\n                ).Trim()} catch {0}) `\n                &lt;# And the current percentage is greater than the previous one #&gt;`\n                -and $percent -gt $oldpercent\n            ) {\n                # Update the progress bar\n                $oldpercent = $percent\n                Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Running chkdsk... ($percent%)\" -PercentComplete $percent\n            }\n        }\n\n        Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Running SFC...\" -PercentComplete 0\n        $oldpercent = 0\n        # SFC has a bug when redirected which causes it to output only when the stdout buffer is full, causing the progress bar to move in chunks\n        sfc /scannow 2&gt;&amp;1 | ForEach-Object {\n            # Write stdout to the Verbose stream\n            Write-Verbose $_\n\n            # Filter for lines that contain a percentage that is greater than the previous one\n            if (\n                (\n                    # Use a different method to get the percentage that accounts for SFC's Unicode output\n                    [int]$percent = try {(\n                        (\n                            $_.Substring(\n                                $_.IndexOf(\"n\") + 2,\n                                $_.IndexOf(\"%\") - $_.IndexOf(\"n\") - 2\n                            ).ToCharArray() | Where-Object {$_}\n                        ) -join ''\n                    ).TrimStart()} catch {0}\n                ) -and $percent -gt $oldpercent\n            ) {\n                # Update the progress bar\n                $oldpercent = $percent\n                Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Running SFC... ($percent%)\" -PercentComplete $percent\n            }\n        }\n\n        Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Running DISM...\" -PercentComplete 0\n        $oldpercent = 0\n        DISM /Online /Cleanup-Image /RestoreHealth | ForEach-Object {\n            # Write stdout to the Verbose stream\n            Write-Verbose $_\n\n            # Filter for lines that contain a percentage that is greater than the previous one\n            if (\n                ($percent = try {\n                    [int]($_ -replace \"\\[\" -replace \"=\" -replace \" \" -replace \"%\" -replace \"\\]\")\n                } catch {0}) `\n                -and $percent -gt $oldpercent\n            ) {\n                # Update the progress bar\n                $oldpercent = $percent\n                Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Running DISM... ($percent%)\" -PercentComplete $percent\n            }\n        }\n\n        Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Running SFC again...\" -PercentComplete 0\n        $oldpercent = 0\n        sfc /scannow 2&gt;&amp;1 | ForEach-Object {\n            # Write stdout to the Verbose stream\n            Write-Verbose $_\n\n            # Filter for lines that contain a percentage that is greater than the previous one\n            if (\n                (\n                    [int]$percent = try {(\n                        (\n                            $_.Substring(\n                                $_.IndexOf(\"n\") + 2,\n                                $_.IndexOf(\"%\") - $_.IndexOf(\"n\") - 2\n                            ).ToCharArray() | Where-Object {$_}\n                        ) -join ''\n                    ).TrimStart()} catch {0}\n                ) -and $percent -gt $oldpercent\n            ) {\n                # Update the progress bar\n                $oldpercent = $percent\n                Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Running SFC... ($percent%)\" -PercentComplete $percent\n            }\n        }\n        Write-Progress -Id 1 -ParentId 0 -Activity \"Scanning for corruption\" -Status \"Completed\" -PercentComplete 100\n    }\n\n\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Stopping Windows Update Services...\" -PercentComplete 10\n    # Stop the Windows Update Services\n    Write-Progress -Id 2 -ParentId 0 -Activity \"Stopping Services\" -Status \"Stopping BITS...\" -PercentComplete 0\n    Stop-Service -Name BITS -Force\n    Write-Progress -Id 2 -ParentId 0 -Activity \"Stopping Services\" -Status \"Stopping wuauserv...\" -PercentComplete 20\n    Stop-Service -Name wuauserv -Force\n    Write-Progress -Id 2 -ParentId 0 -Activity \"Stopping Services\" -Status \"Stopping appidsvc...\" -PercentComplete 40\n    Stop-Service -Name appidsvc -Force\n    Write-Progress -Id 2 -ParentId 0 -Activity \"Stopping Services\" -Status \"Stopping cryptsvc...\" -PercentComplete 60\n    Stop-Service -Name cryptsvc -Force\n    Write-Progress -Id 2 -ParentId 0 -Activity \"Stopping Services\" -Status \"Completed\" -PercentComplete 100\n\n\n    # Remove the QMGR Data file\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Renaming/Removing Files...\" -PercentComplete 20\n    Write-Progress -Id 3 -ParentId 0 -Activity \"Renaming/Removing Files\" -Status \"Removing QMGR Data files...\" -PercentComplete 0\n    Remove-Item \"$env:allusersprofile\\Application Data\\Microsoft\\Network\\Downloader\\qmgr*.dat\" -ErrorAction SilentlyContinue\n\n\n    if ($Aggressive) {\n        # Rename the Windows Update Log and Signature Folders\n        Write-Progress -Id 3 -ParentId 0 -Activity \"Renaming/Removing Files\" -Status \"Renaming the Windows Update Log, Download, and Signature Folder...\" -PercentComplete 20\n        Rename-Item $env:systemroot\\SoftwareDistribution\\DataStore DataStore.bak -ErrorAction SilentlyContinue\n        Rename-Item $env:systemroot\\System32\\Catroot2 catroot2.bak -ErrorAction SilentlyContinue\n    }\n\n    # Rename the Windows Update Download Folder\n    Write-Progress -Id 3 -ParentId 0 -Activity \"Renaming/Removing Files\" -Status \"Renaming the Windows Update Download Folder...\" -PercentComplete 20\n    Rename-Item $env:systemroot\\SoftwareDistribution\\Download Download.bak -ErrorAction SilentlyContinue\n\n    # Delete the legacy Windows Update Log\n    Write-Progress -Id 3 -ParentId 0 -Activity \"Renaming/Removing Files\" -Status \"Removing the old Windows Update log...\" -PercentComplete 80\n    Remove-Item $env:systemroot\\WindowsUpdate.log -ErrorAction SilentlyContinue\n    Write-Progress -Id 3 -ParentId 0 -Activity \"Renaming/Removing Files\" -Status \"Completed\" -PercentComplete 100\n\n\n    if ($Aggressive) {\n        # Reset the Security Descriptors on the Windows Update Services\n        Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Resetting the WU Service Security Descriptors...\" -PercentComplete 25\n        Write-Progress -Id 4 -ParentId 0 -Activity \"Resetting the WU Service Security Descriptors\" -Status \"Resetting the BITS Security Descriptor...\" -PercentComplete 0\n        Start-Process -NoNewWindow -FilePath \"sc.exe\" -ArgumentList \"sdset\", \"bits\", \"D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)\"\n        Write-Progress -Id 4 -ParentId 0 -Activity \"Resetting the WU Service Security Descriptors\" -Status \"Resetting the wuauserv Security Descriptor...\" -PercentComplete 50\n        Start-Process -NoNewWindow -FilePath \"sc.exe\" -ArgumentList \"sdset\", \"wuauserv\", \"D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)\"\n        Write-Progress -Id 4 -ParentId 0 -Activity \"Resetting the WU Service Security Descriptors\" -Status \"Completed\" -PercentComplete 100\n    }\n\n\n    # Reregister the BITS and Windows Update DLLs\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Reregistering DLLs...\" -PercentComplete 40\n    $oldLocation = Get-Location\n    Set-Location $env:systemroot\\system32\n    $i = 0\n    $DLLs = @(\n        \"atl.dll\", \"urlmon.dll\", \"mshtml.dll\", \"shdocvw.dll\", \"browseui.dll\",\n        \"jscript.dll\", \"vbscript.dll\", \"scrrun.dll\", \"msxml.dll\", \"msxml3.dll\",\n        \"msxml6.dll\", \"actxprxy.dll\", \"softpub.dll\", \"wintrust.dll\", \"dssenh.dll\",\n        \"rsaenh.dll\", \"gpkcsp.dll\", \"sccbase.dll\", \"slbcsp.dll\", \"cryptdlg.dll\",\n        \"oleaut32.dll\", \"ole32.dll\", \"shell32.dll\", \"initpki.dll\", \"wuapi.dll\",\n        \"wuaueng.dll\", \"wuaueng1.dll\", \"wucltui.dll\", \"wups.dll\", \"wups2.dll\",\n        \"wuweb.dll\", \"qmgr.dll\", \"qmgrprxy.dll\", \"wucltux.dll\", \"muweb.dll\", \"wuwebv.dll\"\n    )\n    foreach ($dll in $DLLs) {\n        Write-Progress -Id 5 -ParentId 0 -Activity \"Reregistering DLLs\" -Status \"Registering $dll...\" -PercentComplete ($i / $DLLs.Count * 100)\n        $i++\n        Start-Process -NoNewWindow -FilePath \"regsvr32.exe\" -ArgumentList \"/s\", $dll\n    }\n    Set-Location $oldLocation\n    Write-Progress -Id 5 -ParentId 0 -Activity \"Reregistering DLLs\" -Status \"Completed\" -PercentComplete 100\n\n\n    # Remove the WSUS client settings\n    if (Test-Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\") {\n        Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Removing WSUS client settings...\" -PercentComplete 60\n        Write-Progress -Id 6 -ParentId 0 -Activity \"Removing WSUS client settings\" -PercentComplete 0\n        Start-Process -NoNewWindow -FilePath \"REG\" -ArgumentList \"DELETE\", \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\", \"/v\", \"AccountDomainSid\", \"/f\" -RedirectStandardError $true\n        Start-Process -NoNewWindow -FilePath \"REG\" -ArgumentList \"DELETE\", \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\", \"/v\", \"PingID\", \"/f\" -RedirectStandardError $true\n        Start-Process -NoNewWindow -FilePath \"REG\" -ArgumentList \"DELETE\", \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\", \"/v\", \"SusClientId\", \"/f\" -RedirectStandardError $true\n        Write-Progress -Id 6 -ParentId 0 -Activity \"Removing WSUS client settings\" -Status \"Completed\" -PercentComplete 100\n    }\n\n\n    # Reset WinSock\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Resetting WinSock...\" -PercentComplete 65\n    Write-Progress -Id 7 -ParentId 0 -Activity \"Resetting WinSock\" -Status \"Resetting WinSock...\" -PercentComplete 0\n    Start-Process -NoNewWindow -FilePath \"netsh\" -ArgumentList \"winsock\", \"reset\" -RedirectStandardOutput $true\n    Start-Process -NoNewWindow -FilePath \"netsh\" -ArgumentList \"winhttp\", \"reset\", \"proxy\" -RedirectStandardOutput $true\n    Start-Process -NoNewWindow -FilePath \"netsh\" -ArgumentList \"int\", \"ip\", \"reset\" -RedirectStandardOutput $true\n    Write-Progress -Id 7 -ParentId 0 -Activity \"Resetting WinSock\" -Status \"Completed\" -PercentComplete 100\n\n\n    # Get and delete all BITS jobs\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Deleting BITS jobs...\" -PercentComplete 75\n    Write-Progress -Id 8 -ParentId 0 -Activity \"Deleting BITS jobs\" -Status \"Deleting BITS jobs...\" -PercentComplete 0\n    Get-BitsTransfer | Remove-BitsTransfer\n    Write-Progress -Id 8 -ParentId 0 -Activity \"Deleting BITS jobs\" -Status \"Completed\" -PercentComplete 100\n\n\n    # Change the startup type of the Windows Update Services and start them\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Starting Windows Update Services...\" -PercentComplete 90\n    Write-Progress -Id 9 -ParentId 0 -Activity \"Starting Windows Update Services\" -Status \"Starting BITS...\" -PercentComplete 0\n    Get-Service BITS | Set-Service -StartupType Manual -PassThru | Start-Service\n    Write-Progress -Id 9 -ParentId 0 -Activity \"Starting Windows Update Services\" -Status \"Starting wuauserv...\" -PercentComplete 25\n    Get-Service wuauserv | Set-Service -StartupType Manual -PassThru | Start-Service\n    Write-Progress -Id 9 -ParentId 0 -Activity \"Starting Windows Update Services\" -Status \"Starting AppIDSvc...\" -PercentComplete 50\n    # The AppIDSvc service is protected, so the startup type has to be changed in the registry\n    Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\AppIDSvc\" -Name \"Start\" -Value \"3\" # Manual\n    Start-Service AppIDSvc\n    Write-Progress -Id 9 -ParentId 0 -Activity \"Starting Windows Update Services\" -Status \"Starting CryptSvc...\" -PercentComplete 75\n    Get-Service CryptSvc | Set-Service -StartupType Manual -PassThru | Start-Service\n    Write-Progress -Id 9 -ParentId 0 -Activity \"Starting Windows Update Services\" -Status \"Completed\" -PercentComplete 100\n\n\n    # Force Windows Update to check for updates\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Forcing discovery...\" -PercentComplete 95\n    Write-Progress -Id 10 -ParentId 0 -Activity \"Forcing discovery\" -Status \"Forcing discovery...\" -PercentComplete 0\n    (New-Object -ComObject Microsoft.Update.AutoUpdate).DetectNow()\n    Start-Process -NoNewWindow -FilePath \"wuauclt\" -ArgumentList \"/resetauthorization\", \"/detectnow\"\n    Write-Progress -Id 10 -ParentId 0 -Activity \"Forcing discovery\" -Status \"Completed\" -PercentComplete 100\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Status \"Completed\" -PercentComplete 100\n\n    $ButtonType = [System.Windows.MessageBoxButton]::OK\n    $MessageboxTitle = \"Reset Windows Update \"\n    $Messageboxbody = (\"Stock settings loaded.`n Please reboot your computer\")\n    $MessageIcon = [System.Windows.MessageBoxImage]::Information\n\n    [System.Windows.MessageBox]::Show($Messageboxbody, $MessageboxTitle, $ButtonType, $MessageIcon)\n    Write-Host \"===============================================\"\n    Write-Host \"-- Reset All Windows Update Settings to Stock -\"\n    Write-Host \"===============================================\"\n\n    # Remove the progress bars\n    Write-Progress -Id 0 -Activity \"Repairing Windows Update\" -Completed\n    Write-Progress -Id 1 -Activity \"Scanning for corruption\" -Completed\n    Write-Progress -Id 2 -Activity \"Stopping Services\" -Completed\n    Write-Progress -Id 3 -Activity \"Renaming/Removing Files\" -Completed\n    Write-Progress -Id 4 -Activity \"Resetting the WU Service Security Descriptors\" -Completed\n    Write-Progress -Id 5 -Activity \"Reregistering DLLs\" -Completed\n    Write-Progress -Id 6 -Activity \"Removing WSUS client settings\" -Completed\n    Write-Progress -Id 7 -Activity \"Resetting WinSock\" -Completed\n    Write-Progress -Id 8 -Activity \"Deleting BITS jobs\" -Completed\n    Write-Progress -Id 9 -Activity \"Starting Windows Update Services\" -Completed\n    Write-Progress -Id 10 -Activity \"Forcing discovery\" -Completed\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Fixes/Winget/","title":"WinGet Reinstall","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"WinGet Reinstall\",\n  \"category\": \"Fixes\",\n  \"panel\": \"1\",\n  \"Order\": \"a044_\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Fixes/Winget\"\n}\n</code></pre>"},{"location":"dev/features/Fixes/Winget/#function-invoke-wpffixeswinget","title":"Function: Invoke-WPFFixesWinget","text":"<pre><code>function Invoke-WPFFixesWinget {\n\n    &lt;#\n\n    .SYNOPSIS\n        Fixes Winget by running choco install winget\n    .DESCRIPTION\n        BravoNorris for the fantastic idea of a button to reinstall winget\n    #&gt;\n    # Install Choco if not already present\n    Install-WinUtilChoco\n    Start-Process -FilePath \"choco\" -ArgumentList \"install winget -y --force\" -NoNewWindow -Wait\n\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Legacy-Windows-Panels/control/","title":"Control Panel","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Control Panel\",\n  \"category\": \"Legacy Windows Panels\",\n  \"panel\": \"2\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Legacy-Windows-Panels/control\"\n}\n</code></pre>"},{"location":"dev/features/Legacy-Windows-Panels/control/#function-invoke-wpfcontrolpanel","title":"Function: Invoke-WPFControlPanel","text":"<pre><code>function Invoke-WPFControlPanel {\n    &lt;#\n\n    .SYNOPSIS\n        Opens the requested legacy panel\n\n    .PARAMETER Panel\n        The panel to open\n\n    #&gt;\n    param($Panel)\n\n    switch ($Panel) {\n        \"WPFPanelcontrol\" {cmd /c control}\n        \"WPFPanelnetwork\" {cmd /c ncpa.cpl}\n        \"WPFPanelpower\"   {cmd /c powercfg.cpl}\n        \"WPFPanelregion\"  {cmd /c intl.cpl}\n        \"WPFPanelsound\"   {cmd /c mmsys.cpl}\n        \"WPFPanelsystem\"  {cmd /c sysdm.cpl}\n        \"WPFPaneluser\"    {cmd /c \"control userpasswords2\"}\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Legacy-Windows-Panels/network/","title":"Network Connections","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Network Connections\",\n  \"category\": \"Legacy Windows Panels\",\n  \"panel\": \"2\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Legacy-Windows-Panels/network\"\n}\n</code></pre>"},{"location":"dev/features/Legacy-Windows-Panels/network/#function-invoke-wpfcontrolpanel","title":"Function: Invoke-WPFControlPanel","text":"<pre><code>function Invoke-WPFControlPanel {\n    &lt;#\n\n    .SYNOPSIS\n        Opens the requested legacy panel\n\n    .PARAMETER Panel\n        The panel to open\n\n    #&gt;\n    param($Panel)\n\n    switch ($Panel) {\n        \"WPFPanelcontrol\" {cmd /c control}\n        \"WPFPanelnetwork\" {cmd /c ncpa.cpl}\n        \"WPFPanelpower\"   {cmd /c powercfg.cpl}\n        \"WPFPanelregion\"  {cmd /c intl.cpl}\n        \"WPFPanelsound\"   {cmd /c mmsys.cpl}\n        \"WPFPanelsystem\"  {cmd /c sysdm.cpl}\n        \"WPFPaneluser\"    {cmd /c \"control userpasswords2\"}\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Legacy-Windows-Panels/power/","title":"Power Panel","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Power Panel\",\n  \"category\": \"Legacy Windows Panels\",\n  \"panel\": \"2\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Legacy-Windows-Panels/power\"\n}\n</code></pre>"},{"location":"dev/features/Legacy-Windows-Panels/power/#function-invoke-wpfcontrolpanel","title":"Function: Invoke-WPFControlPanel","text":"<pre><code>function Invoke-WPFControlPanel {\n    &lt;#\n\n    .SYNOPSIS\n        Opens the requested legacy panel\n\n    .PARAMETER Panel\n        The panel to open\n\n    #&gt;\n    param($Panel)\n\n    switch ($Panel) {\n        \"WPFPanelcontrol\" {cmd /c control}\n        \"WPFPanelnetwork\" {cmd /c ncpa.cpl}\n        \"WPFPanelpower\"   {cmd /c powercfg.cpl}\n        \"WPFPanelregion\"  {cmd /c intl.cpl}\n        \"WPFPanelsound\"   {cmd /c mmsys.cpl}\n        \"WPFPanelsystem\"  {cmd /c sysdm.cpl}\n        \"WPFPaneluser\"    {cmd /c \"control userpasswords2\"}\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Legacy-Windows-Panels/printer/","title":"Printer Settings","text":"<p>Last Updated: 2024-08-31</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Printer Settings\",\n  \"category\": \"Legacy Windows Panels\",\n  \"panel\": \"2\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\"\n}\n</code></pre>"},{"location":"dev/features/Legacy-Windows-Panels/printer/#function-invoke-wpfcontrolpanel","title":"Function: Invoke-WPFControlPanel","text":"<pre><code>function Invoke-WPFControlPanel {\n    &lt;#\n\n    .SYNOPSIS\n        Opens the requested legacy panel\n\n    .PARAMETER Panel\n        The panel to open\n\n    #&gt;\n    param($Panel)\n\n    switch ($Panel) {\n        \"WPFPanelcontrol\" {cmd /c control}\n        \"WPFPanelnetwork\" {cmd /c ncpa.cpl}\n        \"WPFPanelpower\"   {cmd /c powercfg.cpl}\n        \"WPFPanelregion\"  {cmd /c intl.cpl}\n        \"WPFPanelsound\"   {cmd /c mmsys.cpl}\n        \"WPFPanelprinter\" {Start-Process \"shell:::{A8A91A66-3A7D-4424-8D24-04E180695C7A}\"}\n        \"WPFPanelsystem\"  {cmd /c sysdm.cpl}\n        \"WPFPaneluser\"    {cmd /c \"control userpasswords2\"}\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Legacy-Windows-Panels/region/","title":"Region","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Region\",\n  \"category\": \"Legacy Windows Panels\",\n  \"panel\": \"2\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Legacy-Windows-Panels/region\"\n}\n</code></pre>"},{"location":"dev/features/Legacy-Windows-Panels/region/#function-invoke-wpfcontrolpanel","title":"Function: Invoke-WPFControlPanel","text":"<pre><code>function Invoke-WPFControlPanel {\n    &lt;#\n\n    .SYNOPSIS\n        Opens the requested legacy panel\n\n    .PARAMETER Panel\n        The panel to open\n\n    #&gt;\n    param($Panel)\n\n    switch ($Panel) {\n        \"WPFPanelcontrol\" {cmd /c control}\n        \"WPFPanelnetwork\" {cmd /c ncpa.cpl}\n        \"WPFPanelpower\"   {cmd /c powercfg.cpl}\n        \"WPFPanelregion\"  {cmd /c intl.cpl}\n        \"WPFPanelsound\"   {cmd /c mmsys.cpl}\n        \"WPFPanelsystem\"  {cmd /c sysdm.cpl}\n        \"WPFPaneluser\"    {cmd /c \"control userpasswords2\"}\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Legacy-Windows-Panels/sound/","title":"Sound Settings","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Sound Settings\",\n  \"category\": \"Legacy Windows Panels\",\n  \"panel\": \"2\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Legacy-Windows-Panels/sound\"\n}\n</code></pre>"},{"location":"dev/features/Legacy-Windows-Panels/sound/#function-invoke-wpfcontrolpanel","title":"Function: Invoke-WPFControlPanel","text":"<pre><code>function Invoke-WPFControlPanel {\n    &lt;#\n\n    .SYNOPSIS\n        Opens the requested legacy panel\n\n    .PARAMETER Panel\n        The panel to open\n\n    #&gt;\n    param($Panel)\n\n    switch ($Panel) {\n        \"WPFPanelcontrol\" {cmd /c control}\n        \"WPFPanelnetwork\" {cmd /c ncpa.cpl}\n        \"WPFPanelpower\"   {cmd /c powercfg.cpl}\n        \"WPFPanelregion\"  {cmd /c intl.cpl}\n        \"WPFPanelsound\"   {cmd /c mmsys.cpl}\n        \"WPFPanelsystem\"  {cmd /c sysdm.cpl}\n        \"WPFPaneluser\"    {cmd /c \"control userpasswords2\"}\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Legacy-Windows-Panels/system/","title":"System Properties","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"System Properties\",\n  \"category\": \"Legacy Windows Panels\",\n  \"panel\": \"2\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Legacy-Windows-Panels/system\"\n}\n</code></pre>"},{"location":"dev/features/Legacy-Windows-Panels/system/#function-invoke-wpfcontrolpanel","title":"Function: Invoke-WPFControlPanel","text":"<pre><code>function Invoke-WPFControlPanel {\n    &lt;#\n\n    .SYNOPSIS\n        Opens the requested legacy panel\n\n    .PARAMETER Panel\n        The panel to open\n\n    #&gt;\n    param($Panel)\n\n    switch ($Panel) {\n        \"WPFPanelcontrol\" {cmd /c control}\n        \"WPFPanelnetwork\" {cmd /c ncpa.cpl}\n        \"WPFPanelpower\"   {cmd /c powercfg.cpl}\n        \"WPFPanelregion\"  {cmd /c intl.cpl}\n        \"WPFPanelsound\"   {cmd /c mmsys.cpl}\n        \"WPFPanelsystem\"  {cmd /c sysdm.cpl}\n        \"WPFPaneluser\"    {cmd /c \"control userpasswords2\"}\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/features/Legacy-Windows-Panels/user/","title":"User Accounts","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"User Accounts\",\n  \"category\": \"Legacy Windows Panels\",\n  \"panel\": \"2\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/features/Legacy-Windows-Panels/user\"\n}\n</code></pre>"},{"location":"dev/features/Legacy-Windows-Panels/user/#function-invoke-wpfcontrolpanel","title":"Function: Invoke-WPFControlPanel","text":"<pre><code>function Invoke-WPFControlPanel {\n    &lt;#\n\n    .SYNOPSIS\n        Opens the requested legacy panel\n\n    .PARAMETER Panel\n        The panel to open\n\n    #&gt;\n    param($Panel)\n\n    switch ($Panel) {\n        \"WPFPanelcontrol\" {cmd /c control}\n        \"WPFPanelnetwork\" {cmd /c ncpa.cpl}\n        \"WPFPanelpower\"   {cmd /c powercfg.cpl}\n        \"WPFPanelregion\"  {cmd /c intl.cpl}\n        \"WPFPanelsound\"   {cmd /c mmsys.cpl}\n        \"WPFPanelsystem\"  {cmd /c sysdm.cpl}\n        \"WPFPaneluser\"    {cmd /c \"control userpasswords2\"}\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/BingSearch/","title":"Bing Search in Start Menu","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/BingSearch/#description","title":"Description","text":"<p>If enable then includes web search results from Bing in your Start Menu search.</p> Preview Code <pre><code>{\n  \"Content\": \"Bing Search in Start Menu\",\n  \"Description\": \"If enable then includes web search results from Bing in your Start Menu search.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a101_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/BingSearch\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/BingSearch/#function-invoke-winutilbingsearch","title":"Function: Invoke-WinUtilBingSearch","text":"<pre><code>function Invoke-WinUtilBingSearch {\n    &lt;#\n\n    .SYNOPSIS\n        Disables/Enables Bing Search\n\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Bing Search\n\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Bing Search\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Bing Search\"\n            $value = 0\n        }\n        $Path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Search\"\n        Set-ItemProperty -Path $Path -Name BingSearchEnabled -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/DarkMode/","title":"Dark Theme for Windows","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/DarkMode/#description","title":"Description","text":"<p>Enable/Disable Dark Mode.</p> Preview Code <pre><code>{\n  \"Content\": \"Dark Theme for Windows\",\n  \"Description\": \"Enable/Disable Dark Mode.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a100_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/DarkMode\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/DarkMode/#function-invoke-winutildarkmode","title":"Function: Invoke-WinUtilDarkMode","text":"<pre><code>Function Invoke-WinUtilDarkMode {\n    &lt;#\n\n    .SYNOPSIS\n        Enables/Disables Dark Mode\n\n    .PARAMETER DarkMoveEnabled\n        Indicates the current dark mode state\n\n    #&gt;\n    Param($DarkMoveEnabled)\n    try {\n        if ($DarkMoveEnabled -eq $false) {\n            Write-Host \"Enabling Dark Mode\"\n            $DarkMoveValue = 0\n        } else {\n            Write-Host \"Disabling Dark Mode\"\n            $DarkMoveValue = 1\n        }\n\n        $Path = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize\"\n        Set-ItemProperty -Path $Path -Name AppsUseLightTheme -Value $DarkMoveValue\n        Set-ItemProperty -Path $Path -Name SystemUsesLightTheme -Value $DarkMoveValue\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/DetailedBSoD/","title":"Detailed BSoD","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/DetailedBSoD/#description","title":"Description","text":"<p>If Enabled then you will see a detailed Blue Screen of Death (BSOD) with more information.</p> Preview Code <pre><code>{\n  \"Content\": \"Detailed BSoD\",\n  \"Description\": \"If Enabled then you will see a detailed Blue Screen of Death (BSOD) with more information.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a205_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/DetailedBSoD\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/DetailedBSoD/#function-invoke-winutildetailedbsod","title":"Function: Invoke-WinUtilDetailedBSoD","text":"<pre><code>Function Invoke-WinUtilDetailedBSoD {\n    &lt;#\n\n    .SYNOPSIS\n        Enables/Disables Detailed BSoD\n        (Get-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\CrashControl' -Name 'DisplayParameters').DisplayParameters\n\n\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Detailed BSoD\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Detailed BSoD\"\n            $value =0\n        }\n\n        $Path = \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\CrashControl\"\n        Set-ItemProperty -Path $Path -Name DisplayParameters -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/HiddenFiles/","title":"Show Hidden Files","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/HiddenFiles/#description","title":"Description","text":"<p>If Enabled then Hidden Files will be shown.</p> Preview Code <pre><code>{\n  \"Content\": \"Show Hidden Files\",\n  \"Description\": \"If Enabled then Hidden Files will be shown.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a200_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/HiddenFiles\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/HiddenFiles/#function-invoke-winutilhiddenfiles","title":"Function: Invoke-WinUtilHiddenFiles","text":"<pre><code>function Invoke-WinUtilHiddenFiles {\n    &lt;#\n\n    .SYNOPSIS\n        Enable/Disable Hidden Files\n\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Hidden Files\n\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Hidden Files\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Hidden Files\"\n            $value = 0\n        }\n        $Path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\"\n        Set-ItemProperty -Path $Path -Name Hidden -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/MouseAcceleration/","title":"Mouse Acceleration","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/MouseAcceleration/#description","title":"Description","text":"<p>If Enabled then Cursor movement is affected by the speed of your physical mouse movements.</p> Preview Code <pre><code>{\n  \"Content\": \"Mouse Acceleration\",\n  \"Description\": \"If Enabled then Cursor movement is affected by the speed of your physical mouse movements.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a107_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/MouseAcceleration\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/MouseAcceleration/#function-invoke-winutilmouseacceleration","title":"Function: Invoke-WinUtilMouseAcceleration","text":"<pre><code>Function Invoke-WinUtilMouseAcceleration {\n    &lt;#\n\n    .SYNOPSIS\n        Enables/Disables Mouse Acceleration\n\n    .PARAMETER DarkMoveEnabled\n        Indicates the current Mouse Acceleration State\n\n    #&gt;\n    Param($MouseAccelerationEnabled)\n    try {\n        if ($MouseAccelerationEnabled -eq $false) {\n            Write-Host \"Enabling Mouse Acceleration\"\n            $MouseSpeed = 1\n            $MouseThreshold1 = 6\n            $MouseThreshold2 = 10\n        } else {\n            Write-Host \"Disabling Mouse Acceleration\"\n            $MouseSpeed = 0\n            $MouseThreshold1 = 0\n            $MouseThreshold2 = 0\n\n        }\n\n        $Path = \"HKCU:\\Control Panel\\Mouse\"\n        Set-ItemProperty -Path $Path -Name MouseSpeed -Value $MouseSpeed\n        Set-ItemProperty -Path $Path -Name MouseThreshold1 -Value $MouseThreshold1\n        Set-ItemProperty -Path $Path -Name MouseThreshold2 -Value $MouseThreshold2\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/NumLock/","title":"NumLock on Startup","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/NumLock/#description","title":"Description","text":"<p>Toggle the Num Lock key state when your computer starts.</p> Preview Code <pre><code>{\n  \"Content\": \"NumLock on Startup\",\n  \"Description\": \"Toggle the Num Lock key state when your computer starts.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a102_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/NumLock\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/NumLock/#function-invoke-winutilnumlock","title":"Function: Invoke-WinUtilNumLock","text":"<pre><code>function Invoke-WinUtilNumLock {\n    &lt;#\n    .SYNOPSIS\n        Disables/Enables NumLock on startup\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Numlock on startup\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Numlock on startup\"\n            $value = 2\n        } else {\n            Write-Host \"Disabling Numlock on startup\"\n            $value = 0\n        }\n        New-PSDrive -PSProvider Registry -Name HKU -Root HKEY_USERS\n        $HKUPath = \"HKU:\\.Default\\Control Panel\\Keyboard\"\n        $HKCUPath = \"HKCU:\\Control Panel\\Keyboard\"\n        Set-ItemProperty -Path $HKUPath -Name InitialKeyboardIndicators -Value $value\n        Set-ItemProperty -Path $HKCUPath -Name InitialKeyboardIndicators -Value $value\n    }\n    Catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/ShowExt/","title":"Show File Extensions","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/ShowExt/#description","title":"Description","text":"<p>If enabled then File extensions (e.g., .txt, .jpg) are visible.</p> Preview Code <pre><code>{\n  \"Content\": \"Show File Extensions\",\n  \"Description\": \"If enabled then File extensions (e.g., .txt, .jpg) are visible.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a201_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/ShowExt\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/ShowExt/#function-invoke-winutilshowext","title":"Function: Invoke-WinUtilShowExt","text":"<pre><code>function Invoke-WinUtilShowExt {\n    &lt;#\n    .SYNOPSIS\n        Disables/Enables Show file Extentions\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Show file extentions\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Showing file extentions\"\n            $value = 0\n        } else {\n            Write-Host \"hiding file extensions\"\n            $value = 1\n        }\n        $Path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\"\n        Set-ItemProperty -Path $Path -Name HideFileExt -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/SnapFlyout/","title":"Snap Assist Flyout","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/SnapFlyout/#description","title":"Description","text":"<p>If enabled then Snap preview is disabled when maximize button is hovered.</p> Preview Code <pre><code>{\n  \"Content\": \"Snap Assist Flyout\",\n  \"Description\": \"If enabled then Snap preview is disabled when maximize button is hovered.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a105_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/SnapFlyout\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/SnapFlyout/#function-invoke-winutilsnapflyout","title":"Function: Invoke-WinUtilSnapFlyout","text":"<pre><code>function Invoke-WinUtilSnapFlyout {\n    &lt;#\n    .SYNOPSIS\n        Disables/Enables Snap Assist Flyout on startup\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Snap Assist Flyout on startup\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Snap Assist Flyout On startup\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Snap Assist Flyout On startup\"\n            $value = 0\n        }\n        # taskkill.exe /F /IM \"explorer.exe\"\n        $Path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\"\n        taskkill.exe /F /IM \"explorer.exe\"\n        Set-ItemProperty -Path $Path -Name EnableSnapAssistFlyout -Value $value\n        Start-Process \"explorer.exe\"\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/SnapSuggestion/","title":"Snap Assist Suggestion","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/SnapSuggestion/#description","title":"Description","text":"<p>If enabled then you will get suggestions to snap other applications in the left over spaces.</p> Preview Code <pre><code>{\n  \"Content\": \"Snap Assist Suggestion\",\n  \"Description\": \"If enabled then you will get suggestions to snap other applications in the left over spaces.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a106_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/SnapSuggestion\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/SnapSuggestion/#function-invoke-winutilsnapsuggestion","title":"Function: Invoke-WinUtilSnapSuggestion","text":"<pre><code>function Invoke-WinUtilSnapSuggestion {\n    &lt;#\n    .SYNOPSIS\n        Disables/Enables Snap Assist Suggestions on startup\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Snap Assist Suggestions on startup\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Snap Assist Suggestion On startup\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Snap Assist Suggestion On startup\"\n            $value = 0\n        }\n        # taskkill.exe /F /IM \"explorer.exe\"\n        $Path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\"\n        taskkill.exe /F /IM \"explorer.exe\"\n        Set-ItemProperty -Path $Path -Name SnapAssist -Value $value\n        Start-Process \"explorer.exe\"\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/SnapWindow/","title":"Snap Window","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/SnapWindow/#description","title":"Description","text":"<p>If enabled you can align windows by dragging them. | Relogin Required</p> Preview Code <pre><code>{\n  \"Content\": \"Snap Window\",\n  \"Description\": \"If enabled you can align windows by dragging them. | Relogin Required\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a104_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/SnapWindow\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/SnapWindow/#function-invoke-winutilsnapwindow","title":"Function: Invoke-WinUtilSnapWindow","text":"<pre><code>function Invoke-WinUtilSnapWindow {\n    &lt;#\n    .SYNOPSIS\n        Disables/Enables Snapping Windows on startup\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Snapping Windows on startup\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Snap Windows On startup | Relogin Required\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Snap Windows On startup | Relogin Required\"\n            $value = 0\n        }\n        $Path = \"HKCU:\\Control Panel\\Desktop\"\n        Set-ItemProperty -Path $Path -Name WindowArrangementActive -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/StickyKeys/","title":"Sticky Keys","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/StickyKeys/#description","title":"Description","text":"<p>If Enabled then Sticky Keys is activated - Sticky keys is an accessibility feature of some graphical user interfaces which assists users who have physical disabilities or help users reduce repetitive strain injury.</p> Preview Code <pre><code>{\n  \"Content\": \"Sticky Keys\",\n  \"Description\": \"If Enabled then Sticky Keys is activated - Sticky keys is an accessibility feature of some graphical user interfaces which assists users who have physical disabilities or help users reduce repetitive strain injury.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a108_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/StickyKeys\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/StickyKeys/#function-invoke-winutilstickykeys","title":"Function: Invoke-WinUtilStickyKeys","text":"<pre><code>Function Invoke-WinUtilStickyKeys {\n    &lt;#\n    .SYNOPSIS\n        Disables/Enables Sticky Keyss on startup\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Sticky Keys on startup\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Sticky Keys On startup\"\n            $value = 510\n        } else {\n            Write-Host \"Disabling Sticky Keys On startup\"\n            $value = 58\n        }\n        $Path = \"HKCU:\\Control Panel\\Accessibility\\StickyKeys\"\n        Set-ItemProperty -Path $Path -Name Flags -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/TaskView/","title":"Task View Button in Taskbar","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/TaskView/#description","title":"Description","text":"<p>If Enabled then Task View Button in Taskbar will be shown.</p> Preview Code <pre><code>{\n  \"Content\": \"Task View Button in Taskbar\",\n  \"Description\": \"If Enabled then Task View Button in Taskbar will be shown.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a203_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/TaskView\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/TaskView/#function-invoke-winutiltaskview","title":"Function: Invoke-WinUtilTaskView","text":"<pre><code>function Invoke-WinUtilTaskView {\n    &lt;#\n\n    .SYNOPSIS\n        Enable/Disable Task View\n\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Task View\n\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Task View\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Task View\"\n            $value = 0\n        }\n        $Path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\"\n        Set-ItemProperty -Path $Path -Name ShowTaskViewButton -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarAlignment/","title":"Center Taskbar Items","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarAlignment/#description","title":"Description","text":"<p>[Windows 11] If Enabled then the Taskbar Items will be shown on the Center, otherwise the Taskbar Items will be shown on the Left.</p> Preview Code <pre><code>{\n  \"Content\": \"Center Taskbar Items\",\n  \"Description\": \"[Windows 11] If Enabled then the Taskbar Items will be shown on the Center, otherwise the Taskbar Items will be shown on the Left.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a204_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/TaskbarAlignment\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarAlignment/#function-invoke-winutiltaskbaralignment","title":"Function: Invoke-WinUtilTaskbarAlignment","text":"<pre><code>function Invoke-WinUtilTaskbarAlignment {\n    &lt;#\n\n    .SYNOPSIS\n        Switches between Center &amp; Left Taskbar Alignment\n\n    .PARAMETER Enabled\n        Indicates whether to make Taskbar Alignment Center or Left\n\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Making Taskbar Alignment to the Center\"\n            $value = 1\n        } else {\n            Write-Host \"Making Taskbar Alignment to the Left\"\n            $value = 0\n        }\n        $Path = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\"\n        Set-ItemProperty -Path $Path -Name \"TaskbarAl\" -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarSearch/","title":"Search Button in Taskbar","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarSearch/#description","title":"Description","text":"<p>If Enabled Search Button will be on the taskbar.</p> Preview Code <pre><code>{\n  \"Content\": \"Search Button in Taskbar\",\n  \"Description\": \"If Enabled Search Button will be on the taskbar.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a202_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/TaskbarSearch\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarSearch/#function-invoke-winutiltaskbarsearch","title":"Function: Invoke-WinUtilTaskbarSearch","text":"<pre><code>function Invoke-WinUtilTaskbarSearch {\n    &lt;#\n\n    .SYNOPSIS\n        Enable/Disable Taskbar Search Button.\n\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Taskbar Search Button.\n\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Search Button\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Search Button\"\n            $value = 0\n        }\n        $Path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Search\\\"\n        Set-ItemProperty -Path $Path -Name SearchboxTaskbarMode -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarWidgets/","title":"Widgets Button in Taskbar","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarWidgets/#description","title":"Description","text":"<p>If Enabled then Widgets Button in Taskbar will be shown.</p> Preview Code <pre><code>{\n  \"Content\": \"Widgets Button in Taskbar\",\n  \"Description\": \"If Enabled then Widgets Button in Taskbar will be shown.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a204_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/TaskbarWidgets\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/TaskbarWidgets/#function-invoke-winutiltaskbarwidgets","title":"Function: Invoke-WinUtilTaskbarWidgets","text":"<pre><code>function Invoke-WinUtilTaskbarWidgets {\n    &lt;#\n\n    .SYNOPSIS\n        Enable/Disable Taskbar Widgets\n\n    .PARAMETER Enabled\n        Indicates whether to enable or disable Taskbar Widgets\n\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Taskbar Widgets\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Taskbar Widgets\"\n            $value = 0\n        }\n        $Path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\"\n        Set-ItemProperty -Path $Path -Name TaskbarDa -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Customize-Preferences/VerboseLogon/","title":"Verbose Messages During Logon","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Customize-Preferences/VerboseLogon/#description","title":"Description","text":"<p>Show detailed messages during the login process for troubleshooting and diagnostics.</p> Preview Code <pre><code>{\n  \"Content\": \"Verbose Messages During Logon\",\n  \"Description\": \"Show detailed messages during the login process for troubleshooting and diagnostics.\",\n  \"category\": \"Customize Preferences\",\n  \"panel\": \"2\",\n  \"Order\": \"a103_\",\n  \"Type\": \"Toggle\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Customize-Preferences/VerboseLogon\"\n}\n</code></pre>"},{"location":"dev/tweaks/Customize-Preferences/VerboseLogon/#function-invoke-winutilverboselogon","title":"Function: Invoke-WinUtilVerboseLogon","text":"<pre><code>function Invoke-WinUtilVerboseLogon {\n    &lt;#\n    .SYNOPSIS\n        Disables/Enables VerboseLogon Messages\n    .PARAMETER Enabled\n        Indicates whether to enable or disable VerboseLogon messages\n    #&gt;\n    Param($Enabled)\n    try {\n        if ($Enabled -eq $false) {\n            Write-Host \"Enabling Verbose Logon Messages\"\n            $value = 1\n        } else {\n            Write-Host \"Disabling Verbose Logon Messages\"\n            $value = 0\n        }\n        $Path = \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\"\n        Set-ItemProperty -Path $Path -Name VerboseStatus -Value $value\n    } catch [System.Security.SecurityException] {\n        Write-Warning \"Unable to set $Path\\$Name to $Value due to a Security Exception\"\n    } catch [System.Management.Automation.ItemNotFoundException] {\n        Write-Warning $psitem.Exception.ErrorRecord\n    } catch {\n        Write-Warning \"Unable to set $Name due to unhandled exception\"\n        Write-Warning $psitem.Exception.StackTrace\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/AH/","title":"Disable Activity History","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/AH/#description","title":"Description","text":"<p>This erases recent docs, clipboard, and run history.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Activity History\",\n  \"Description\": \"This erases recent docs, clipboard, and run history.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a005_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\",\n      \"Name\": \"EnableActivityFeed\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\",\n      \"Name\": \"PublishUserActivities\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\",\n      \"Name\": \"UploadUserActivities\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/AH\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/AH/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/AH/#registry-key-enableactivityfeed","title":"Registry Key: EnableActivityFeed","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/AH/#registry-key-publishuseractivities","title":"Registry Key: PublishUserActivities","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/AH/#registry-key-uploaduseractivities","title":"Registry Key: UploadUserActivities","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/ConsumerFeatures/","title":"Disable ConsumerFeatures","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/ConsumerFeatures/#description","title":"Description","text":"<p>Windows 10 will not automatically install any games, third-party apps, or application links from the Windows Store for the signed-in user. Some default Apps will be inaccessible (eg. Phone Link)</p> Preview Code <pre><code>{\n  \"Content\": \"Disable ConsumerFeatures\",\n  \"Description\": \"Windows 10 will not automatically install any games, third-party apps, or application links from the Windows Store for the signed-in user. Some default Apps will be inaccessible (eg. Phone Link)\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a003_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\CloudContent\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"DisableWindowsConsumerFeatures\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/ConsumerFeatures\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/ConsumerFeatures/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/ConsumerFeatures/#registry-key-disablewindowsconsumerfeatures","title":"Registry Key: DisableWindowsConsumerFeatures","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/DVR/","title":"Disable GameDVR","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/DVR/#description","title":"Description","text":"<p>GameDVR is a Windows App that is a dependency for some Store Games. I've never met someone that likes it, but it's there for the XBOX crowd.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable GameDVR\",\n  \"Description\": \"GameDVR is a Windows App that is a dependency for some Store Games. I've never met someone that likes it, but it's there for the XBOX crowd.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a005_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKCU:\\\\System\\\\GameConfigStore\",\n      \"Name\": \"GameDVR_FSEBehavior\",\n      \"Value\": \"2\",\n      \"OriginalValue\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\System\\\\GameConfigStore\",\n      \"Name\": \"GameDVR_Enabled\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\System\\\\GameConfigStore\",\n      \"Name\": \"GameDVR_HonorUserFSEBehaviorMode\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\System\\\\GameConfigStore\",\n      \"Name\": \"GameDVR_EFSEFeatureFlags\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\GameDVR\",\n      \"Name\": \"AllowGameDVR\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/DVR\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/DVR/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/DVR/#registry-key-gamedvr_fsebehavior","title":"Registry Key: GameDVR_FSEBehavior","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 2</p>"},{"location":"dev/tweaks/Essential-Tweaks/DVR/#registry-key-gamedvr_enabled","title":"Registry Key: GameDVR_Enabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/DVR/#registry-key-gamedvr_honoruserfsebehaviormode","title":"Registry Key: GameDVR_HonorUserFSEBehaviorMode","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/DVR/#registry-key-gamedvr_efsefeatureflags","title":"Registry Key: GameDVR_EFSEFeatureFlags","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/DVR/#registry-key-allowgamedvr","title":"Registry Key: AllowGameDVR","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/DeleteTempFiles/","title":"Delete Temporary Files","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/DeleteTempFiles/#description","title":"Description","text":"<p>Erases TEMP Folders</p> Preview Code <pre><code>{\n  \"Content\": \"Delete Temporary Files\",\n  \"Description\": \"Erases TEMP Folders\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a002_\",\n  \"InvokeScript\": [\n    \"Get-ChildItem -Path \\\"C:\\\\Windows\\\\Temp\\\" *.* -Recurse | Remove-Item -Force -Recurse\n    Get-ChildItem -Path $env:TEMP *.* -Recurse | Remove-Item -Force -Recurse\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/DeleteTempFiles\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/DeleteTempFiles/#invoke-script","title":"Invoke Script","text":"<pre><code>Get-ChildItem -Path \"C:\\Windows\\Temp\" *.* -Recurse | Remove-Item -Force -Recurse\n    Get-ChildItem -Path $env:TEMP *.* -Recurse | Remove-Item -Force -Recurse\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/DisableRecall/","title":"Disable Microsoft Recall","text":"<p>Last Updated: 2024-10-24</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/DisableRecall/#description","title":"Description","text":"<p>Disables MS Recall built into Windows since 24H2.</p> Preview Code <pre><code>\"WPFTweaksRecallOff\": {\n    \"Content\": \"Disable Recall\",\n    \"Description\": \"Turn Recall off\",\n    \"category\": \"Essential Tweaks\",\n    \"panel\": \"1\",\n    \"Order\": \"a011_\",\n    \"registry\": [\n      {\n\n        \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\WindowsAI\",\n        \"Name\": \"DisableAIDataAnalysis\",\n        \"Type\": \"DWord\",\n        \"Value\": \"1\",\n        \"OriginalValue\": \"0\"\n      }\n    ],\n    \"InvokeScript\": [\n      \"\n      Write-Host \\\"Disable Recall\\\"\n      DISM /Online /Disable-Feature /FeatureName:Recall\n      \"\n    ],\n    \"UndoScript\": [\n      \"\n      Write-Host \\\"Enable Recall\\\"\n      DISM /Online /Enable-Feature /FeatureName:Recall\n      \"\n    ],\n    \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/DisableRecall\"\n  },\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/DisableRecall/#invoke-script","title":"Invoke Script","text":"<pre><code>      Write-Host \"Disable Recall\"\n      DISM /Online /Disable-Feature /FeatureName:Recall\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/DisableRecall/#undo-script","title":"Undo Script","text":"<pre><code>      Write-Host \"Enable Recall\"\n      DISM /Online /Enable-Feature /FeatureName:Recall\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/DisableRecall/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/DisableRecall/#registry-key-disableaidataanalysis","title":"Registry Key: DisableAIDataAnalysis","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/DiskCleanup/","title":"Run Disk Cleanup","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/DiskCleanup/#description","title":"Description","text":"<p>Runs Disk Cleanup on Drive C: and removes old Windows Updates.</p> Preview Code <pre><code>{\n  \"Content\": \"Run Disk Cleanup\",\n  \"Description\": \"Runs Disk Cleanup on Drive C: and removes old Windows Updates.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a009_\",\n  \"InvokeScript\": [\n    \"\n      cleanmgr.exe /d C: /VERYLOWDISK\n      Dism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/DiskCleanup\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/DiskCleanup/#invoke-script","title":"Invoke Script","text":"<pre><code>      cleanmgr.exe /d C: /VERYLOWDISK\n      Dism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/","title":"Debloat Edge","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#description","title":"Description","text":"<p>Disables various telemetry options, popups, and other annoyances in Edge.</p> Preview Code <pre><code>{\n  \"Content\": \"Debloat Edge\",\n  \"Description\": \"Disables various telemetry options, popups, and other annoyances in Edge.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a016_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\EdgeUpdate\",\n      \"Name\": \"CreateDesktopShortcutDefault\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"EdgeEnhanceImagesEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"PersonalizationReportingEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"ShowRecommendationsEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"HideFirstRunExperience\",\n      \"Type\": \"DWord\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"UserFeedbackAllowed\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"ConfigureDoNotTrack\",\n      \"Type\": \"DWord\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"AlternateErrorPagesEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"EdgeCollectionsEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"EdgeFollowEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"EdgeShoppingAssistantEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"MicrosoftEdgeInsiderPromotionEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"PersonalizationReportingEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"ShowMicrosoftRewards\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"WebWidgetAllowed\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"DiagnosticData\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"EdgeAssetDeliveryServiceEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"EdgeCollectionsEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"CryptoWalletEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"ConfigureDoNotTrack\",\n      \"Type\": \"DWord\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\",\n      \"Name\": \"WalletDonationEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/EdgeDebloat\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-createdesktopshortcutdefault","title":"Registry Key: CreateDesktopShortcutDefault","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-edgeenhanceimagesenabled","title":"Registry Key: EdgeEnhanceImagesEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-personalizationreportingenabled","title":"Registry Key: PersonalizationReportingEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-showrecommendationsenabled","title":"Registry Key: ShowRecommendationsEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-hidefirstrunexperience","title":"Registry Key: HideFirstRunExperience","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-userfeedbackallowed","title":"Registry Key: UserFeedbackAllowed","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-configuredonottrack","title":"Registry Key: ConfigureDoNotTrack","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-alternateerrorpagesenabled","title":"Registry Key: AlternateErrorPagesEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-edgecollectionsenabled","title":"Registry Key: EdgeCollectionsEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-edgefollowenabled","title":"Registry Key: EdgeFollowEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-edgeshoppingassistantenabled","title":"Registry Key: EdgeShoppingAssistantEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-microsoftedgeinsiderpromotionenabled","title":"Registry Key: MicrosoftEdgeInsiderPromotionEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-personalizationreportingenabled_1","title":"Registry Key: PersonalizationReportingEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-showmicrosoftrewards","title":"Registry Key: ShowMicrosoftRewards","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-webwidgetallowed","title":"Registry Key: WebWidgetAllowed","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-diagnosticdata","title":"Registry Key: DiagnosticData","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-edgeassetdeliveryserviceenabled","title":"Registry Key: EdgeAssetDeliveryServiceEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-edgecollectionsenabled_1","title":"Registry Key: EdgeCollectionsEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-cryptowalletenabled","title":"Registry Key: CryptoWalletEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-configuredonottrack_1","title":"Registry Key: ConfigureDoNotTrack","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/EdgeDebloat/#registry-key-walletdonationenabled","title":"Registry Key: WalletDonationEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/EndTaskOnTaskbar/","title":"Enable End Task With Right Click","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/EndTaskOnTaskbar/#description","title":"Description","text":"<p>Enables option to end task when right clicking a program in the taskbar</p> Preview Code <pre><code>{\n  \"Content\": \"Enable End Task With Right Click\",\n  \"Description\": \"Enables option to end task when right clicking a program in the taskbar\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a006_\",\n  \"InvokeScript\": [\n    \"$path = \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\\\\TaskbarDeveloperSettings\\\"\n      $name = \\\"TaskbarEndTask\\\"\n      $value = 1\n\n      # Ensure the registry key exists\n      if (-not (Test-Path $path)) {\n        New-Item -Path $path -Force | Out-Null\n      }\n\n      # Set the property, creating it if it doesn't exist\n      New-ItemProperty -Path $path -Name $name -PropertyType DWord -Value $value -Force | Out-Null\"\n  ],\n  \"UndoScript\": [\n    \"$path = \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\\\\TaskbarDeveloperSettings\\\"\n      $name = \\\"TaskbarEndTask\\\"\n      $value = 0\n\n      # Ensure the registry key exists\n      if (-not (Test-Path $path)) {\n        New-Item -Path $path -Force | Out-Null\n      }\n\n      # Set the property, creating it if it doesn't exist\n      New-ItemProperty -Path $path -Name $name -PropertyType DWord -Value $value -Force | Out-Null\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/EndTaskOnTaskbar\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/EndTaskOnTaskbar/#invoke-script","title":"Invoke Script","text":"<pre><code>$path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\TaskbarDeveloperSettings\"\n      $name = \"TaskbarEndTask\"\n      $value = 1\n\n      # Ensure the registry key exists\n      if (-not (Test-Path $path)) {\n        New-Item -Path $path -Force | Out-Null\n      }\n\n      # Set the property, creating it if it doesn't exist\n      New-ItemProperty -Path $path -Name $name -PropertyType DWord -Value $value -Force | Out-Null\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/EndTaskOnTaskbar/#undo-script","title":"Undo Script","text":"<pre><code>$path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\TaskbarDeveloperSettings\"\n      $name = \"TaskbarEndTask\"\n      $value = 0\n\n      # Ensure the registry key exists\n      if (-not (Test-Path $path)) {\n        New-Item -Path $path -Force | Out-Null\n      }\n\n      # Set the property, creating it if it doesn't exist\n      New-ItemProperty -Path $path -Name $name -PropertyType DWord -Value $value -Force | Out-Null\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Hiber/","title":"Disable Hibernation","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Hiber/#description","title":"Description","text":"<p>Hibernation is really meant for laptops as it saves what's in memory before turning the pc off. It really should never be used, but some people are lazy and rely on it. Don't be like Bob. Bob likes hibernation.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Hibernation\",\n  \"Description\": \"Hibernation is really meant for laptops as it saves what's in memory before turning the pc off. It really should never be used, but some people are lazy and rely on it. Don't be like Bob. Bob likes hibernation.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a005_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Power\",\n      \"Name\": \"HibernateEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FlyoutMenuSettings\",\n      \"Name\": \"ShowHibernateOption\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    }\n  ],\n  \"InvokeScript\": [\n    \"powercfg.exe /hibernate off\"\n  ],\n  \"UndoScript\": [\n    \"powercfg.exe /hibernate on\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Hiber\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Hiber/#invoke-script","title":"Invoke Script","text":"<pre><code>powercfg.exe /hibernate off\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Hiber/#undo-script","title":"Undo Script","text":"<pre><code>powercfg.exe /hibernate on\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Hiber/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Hiber/#registry-key-hibernateenabled","title":"Registry Key: HibernateEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Hiber/#registry-key-showhibernateoption","title":"Registry Key: ShowHibernateOption","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Home/","title":"Disable Homegroup","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Home/#description","title":"Description","text":"<p>Disables HomeGroup - HomeGroup is a password-protected home networking service that lets you share your stuff with other PCs that are currently running and connected to your network.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Homegroup\",\n  \"Description\": \"Disables HomeGroup - HomeGroup is a password-protected home networking service that lets you share your stuff with other PCs that are currently running and connected to your network.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a005_\",\n  \"service\": [\n    {\n      \"Name\": \"HomeGroupListener\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"HomeGroupProvider\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Home\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Home/#service-changes","title":"Service Changes","text":"<p>Windows services are background processes for system functions or applications. Setting some to manual optimizes performance by starting them only when needed.</p> <p>You can find information about services on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Home/#service-name-homegrouplistener","title":"Service Name: HomeGroupListener","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Home/#service-name-homegroupprovider","title":"Service Name: HomeGroupProvider","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/IPv46/","title":"Prefer IPv4 over IPv6","text":"<p>Last Updated: 2024-08-27</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/IPv46/#description","title":"Description","text":"<p>To set the IPv4 preference can have latency and security benefits on private networks where IPv6 is not configured.</p> Preview Code <pre><code>{\n  \"Content\": \"Prefer IPv4 over IPv6\",\n  \"Description\": \"To set the IPv4 preference can have latency and security benefits on private networks where IPv6 is not configured.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a005_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip6\\\\Parameters\",\n      \"Name\": \"DisabledComponents\",\n      \"Value\": \"32\",\n      \"OriginalValue\": \"0\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/IPv46\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/IPv46/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/IPv46/#registry-key-disabledcomponents","title":"Registry Key: DisabledComponents","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 32</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/LaptopHibernation/","title":"Set Hibernation as default (good for laptops)","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/LaptopHibernation/#description","title":"Description","text":"<p>Most modern laptops have connected standby enabled which drains the battery, this sets hibernation as default which will not drain the battery. See issue https://github.com/ChrisTitusTech/winutil/issues/1399</p> Preview Code <pre><code>{\n  \"Content\": \"Set Hibernation as default (good for laptops)\",\n  \"Description\": \"Most modern laptops have connected standby enabled which drains the battery, this sets hibernation as default which will not drain the battery. See issue https://github.com/ChrisTitusTech/winutil/issues/1399\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a014_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Power\\\\PowerSettings\\\\238C9FA8-0AAD-41ED-83F4-97BE242C8F20\\\\7bc4a2f9-d8fc-4469-b07b-33eb785aaca0\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"Attributes\",\n      \"Value\": \"2\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Power\\\\PowerSettings\\\\abfc2519-3608-4c2a-94ea-171b0ed546ab\\\\94ac6d29-73ce-41a6-809f-6363ba21b47e\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"Attributes \",\n      \"Value\": \"2\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"InvokeScript\": [\n    \"\n      Write-Host \\\"Turn on Hibernation\\\"\n      Start-Process -FilePath powercfg -ArgumentList \\\"/hibernate on\\\" -NoNewWindow -Wait\n\n      # Set hibernation as the default action\n      Start-Process -FilePath powercfg -ArgumentList \\\"/change standby-timeout-ac 60\\\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \\\"/change standby-timeout-dc 60\\\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \\\"/change monitor-timeout-ac 10\\\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \\\"/change monitor-timeout-dc 1\\\" -NoNewWindow -Wait\n      \"\n  ],\n  \"UndoScript\": [\n    \"\n      Write-Host \\\"Turn off Hibernation\\\"\n      Start-Process -FilePath powercfg -ArgumentList \\\"/hibernate off\\\" -NoNewWindow -Wait\n\n      # Set standby to detault values\n      Start-Process -FilePath powercfg -ArgumentList \\\"/change standby-timeout-ac 15\\\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \\\"/change standby-timeout-dc 15\\\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \\\"/change monitor-timeout-ac 15\\\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \\\"/change monitor-timeout-dc 15\\\" -NoNewWindow -Wait\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/LaptopHibernation\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/LaptopHibernation/#invoke-script","title":"Invoke Script","text":"<pre><code>      Write-Host \"Turn on Hibernation\"\n      Start-Process -FilePath powercfg -ArgumentList \"/hibernate on\" -NoNewWindow -Wait\n\n      # Set hibernation as the default action\n      Start-Process -FilePath powercfg -ArgumentList \"/change standby-timeout-ac 60\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \"/change standby-timeout-dc 60\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \"/change monitor-timeout-ac 10\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \"/change monitor-timeout-dc 1\" -NoNewWindow -Wait\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/LaptopHibernation/#undo-script","title":"Undo Script","text":"<pre><code>      Write-Host \"Turn off Hibernation\"\n      Start-Process -FilePath powercfg -ArgumentList \"/hibernate off\" -NoNewWindow -Wait\n\n      # Set standby to detault values\n      Start-Process -FilePath powercfg -ArgumentList \"/change standby-timeout-ac 15\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \"/change standby-timeout-dc 15\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \"/change monitor-timeout-ac 15\" -NoNewWindow -Wait\n      Start-Process -FilePath powercfg -ArgumentList \"/change monitor-timeout-dc 15\" -NoNewWindow -Wait\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/LaptopHibernation/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/LaptopHibernation/#registry-key-attributes","title":"Registry Key: Attributes","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 2</p>"},{"location":"dev/tweaks/Essential-Tweaks/LaptopHibernation/#registry-key-attributes_1","title":"Registry Key: Attributes","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 2</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Loc/","title":"Disable Location Tracking","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Loc/#description","title":"Description","text":"<p>Disables Location Tracking...DUH!</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Location Tracking\",\n  \"Description\": \"Disables Location Tracking...DUH!\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a005_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\CapabilityAccessManager\\\\ConsentStore\\\\location\",\n      \"Name\": \"Value\",\n      \"Type\": \"String\",\n      \"Value\": \"Deny\",\n      \"OriginalValue\": \"Allow\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Sensor\\\\Overrides\\\\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}\",\n      \"Name\": \"SensorPermissionState\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\lfsvc\\\\Service\\\\Configuration\",\n      \"Name\": \"Status\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\Maps\",\n      \"Name\": \"AutoUpdateEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Loc\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Loc/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Loc/#registry-key-value","title":"Registry Key: Value","text":"<p>Type: String</p> <p>Original Value: Allow</p> <p>New Value: Deny</p>"},{"location":"dev/tweaks/Essential-Tweaks/Loc/#registry-key-sensorpermissionstate","title":"Registry Key: SensorPermissionState","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Loc/#registry-key-status","title":"Registry Key: Status","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Loc/#registry-key-autoupdateenabled","title":"Registry Key: AutoUpdateEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7/","title":"Change Windows Terminal default: PowerShell 5 -&gt; PowerShell 7","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7/#description","title":"Description","text":"<p>This will edit the config file of the Windows Terminal replacing PowerShell 5 with PowerShell 7 and installing PS7 if necessary</p> Preview Code <pre><code>{\n  \"Content\": \"Change Windows Terminal default: PowerShell 5 -&gt; PowerShell 7\",\n  \"Description\": \"This will edit the config file of the Windows Terminal replacing PowerShell 5 with PowerShell 7 and installing PS7 if necessary\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a009_\",\n  \"InvokeScript\": [\n    \"Invoke-WPFTweakPS7 -action \\\"PS7\\\"\"\n  ],\n  \"UndoScript\": [\n    \"Invoke-WPFTweakPS7 -action \\\"PS5\\\"\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Powershell7\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7/#invoke-script","title":"Invoke Script","text":"<pre><code>Invoke-WPFTweakPS7 -action \"PS7\"\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7/#undo-script","title":"Undo Script","text":"<pre><code>Invoke-WPFTweakPS7 -action \"PS5\"\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7/#function-invoke-wpftweakps7","title":"Function: Invoke-WPFTweakPS7","text":"<pre><code>function Invoke-WPFTweakPS7{\n        &lt;#\n    .SYNOPSIS\n        This will edit the config file of the Windows Terminal Replacing the Powershell 5 to Powershell 7 and install Powershell 7 if necessary\n    .PARAMETER action\n        PS7:           Configures Powershell 7 to be the default Terminal\n        PS5:           Configures Powershell 5 to be the default Terminal\n    #&gt;\n    param (\n        [ValidateSet(\"PS7\", \"PS5\")]\n        [string]$action\n    )\n\n    switch ($action) {\n        \"PS7\"{\n            if (Test-Path -Path \"$env:ProgramFiles\\PowerShell\\7\") {\n                Write-Host \"Powershell 7 is already installed.\"\n            } else {\n                Write-Host \"Installing Powershell 7...\"\n                Install-WinUtilProgramWinget -Action Install -Programs @(\"Microsoft.PowerShell\")\n            }\n            $targetTerminalName = \"PowerShell\"\n        }\n        \"PS5\"{\n            $targetTerminalName = \"Windows PowerShell\"\n        }\n    }\n    # Check if the Windows Terminal is installed and return if not (Prerequisite for the following code)\n    if (-not (Get-Command \"wt\" -ErrorAction SilentlyContinue)) {\n        Write-Host \"Windows Terminal not installed. Skipping Terminal preference\"\n        return\n    }\n    # Check if the Windows Terminal settings.json file exists and return if not (Prereqisite for the following code)\n    $settingsPath = \"$env:LOCALAPPDATA\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json\"\n    if (-not (Test-Path -Path $settingsPath)) {\n        Write-Host \"Windows Terminal Settings file not found at $settingsPath\"\n        return\n    }\n\n    Write-Host \"Settings file found.\"\n    $settingsContent = Get-Content -Path $settingsPath | ConvertFrom-Json\n    $ps7Profile = $settingsContent.profiles.list | Where-Object { $_.name -eq $targetTerminalName }\n    if ($ps7Profile) {\n        $settingsContent.defaultProfile = $ps7Profile.guid\n        $updatedSettings = $settingsContent | ConvertTo-Json -Depth 100\n        Set-Content -Path $settingsPath -Value $updatedSettings\n        Write-Host \"Default profile updated to \" -NoNewline\n        Write-Host \"$targetTerminalName \" -ForegroundColor White -NoNewline\n        Write-Host \"using the name attribute.\"\n    } else {\n        Write-Host \"No PowerShell 7 profile found in Windows Terminal settings using the name attribute.\"\n    }\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7/#function-install-winutilprogramwinget","title":"Function: Install-WinUtilProgramWinget","text":"<pre><code>Function Install-WinUtilProgramWinget {\n    &lt;#\n    .SYNOPSIS\n    Runs the designated action on the provided programs using Winget\n\n    .PARAMETER Programs\n    A list of programs to process\n\n    .PARAMETER action\n    The action to perform on the programs, can be either 'Install' or 'Uninstall'\n\n    .NOTES\n    The triple quotes are required any time you need a \" in a normal script block.\n    The winget Return codes are documented here: https://github.com/microsoft/winget-cli/blob/master/doc/windows/package-actionr/winget/returnCodes.md\n    #&gt;\n\n    param(\n        [Parameter(Mandatory, Position=0)]$Programs,\n\n        [Parameter(Mandatory, Position=1)]\n        [ValidateSet(\"Install\", \"Uninstall\")]\n        [String]$Action\n    )\n\n    Function Invoke-Winget {\n    &lt;#\n    .SYNOPSIS\n    Invokes the winget.exe with the provided arguments and return the exit code\n\n    .PARAMETER wingetId\n    The Id of the Program that Winget should Install/Uninstall\n\n    .PARAMETER scope\n    Determines the installation mode. Can be \"user\" or \"machine\" (For more info look at the winget documentation)\n\n    .PARAMETER credential\n    The PSCredential Object of the user that should be used to run winget\n\n    .NOTES\n    Invoke Winget uses the public variable $Action defined outside the function to determine if a Program should be installed or removed\n    #&gt;\n        param (\n            [string]$wingetId,\n            [string]$scope = \"\",\n            [PScredential]$credential = $null\n        )\n\n        $commonArguments = \"--id $wingetId --silent\"\n        $arguments = if ($Action -eq \"Install\") {\n            \"install $commonArguments --accept-source-agreements --accept-package-agreements $(if ($scope) {\" --scope $scope\"})\"\n        } else {\n            \"uninstall $commonArguments\"\n        }\n\n        $processParams = @{\n            FilePath = \"winget\"\n            ArgumentList = $arguments\n            Wait = $true\n            PassThru = $true\n            NoNewWindow = $true\n        }\n\n        if ($credential) {\n            $processParams.credential = $credential\n        }\n\n        return (Start-Process @processParams).ExitCode\n    }\n\n    Function Invoke-Install {\n    &lt;#\n    .SYNOPSIS\n    Contains the Install Logic and return code handling from winget\n\n    .PARAMETER Program\n    The Winget ID of the Program that should be installed\n    #&gt;\n        param (\n            [string]$Program\n        )\n        $status = Invoke-Winget -wingetId $Program\n        if ($status -eq 0) {\n            Write-Host \"$($Program) installed successfully.\"\n            return $true\n        } elseif ($status -eq -1978335189) {\n            Write-Host \"$($Program) No applicable update found\"\n            return $true\n        }\n\n        Write-Host \"Attempt installation of $($Program) with User scope\"\n        $status = Invoke-Winget -wingetId $Program -scope \"user\"\n        if ($status -eq 0) {\n            Write-Host \"$($Program) installed successfully with User scope.\"\n            return $true\n        } elseif ($status -eq -1978335189) {\n            Write-Host \"$($Program) No applicable update found\"\n            return $true\n        }\n\n        $userChoice = [System.Windows.MessageBox]::Show(\"Do you want to attempt $($Program) installation with specific user credentials? Select 'Yes' to proceed or 'No' to skip.\", \"User credential Prompt\", [System.Windows.MessageBoxButton]::YesNo)\n        if ($userChoice -eq 'Yes') {\n            $getcreds = Get-Credential\n            $status = Invoke-Winget -wingetId $Program -credential $getcreds\n            if ($status -eq 0) {\n                Write-Host \"$($Program) installed successfully with User prompt.\"\n                return $true\n            }\n        } else {\n            Write-Host \"Skipping installation with specific user credentials.\"\n        }\n\n        Write-Host \"Failed to install $($Program).\"\n        return $false\n    }\n\n    Function Invoke-Uninstall {\n        &lt;#\n        .SYNOPSIS\n        Contains the Uninstall Logic and return code handling from winget\n\n        .PARAMETER Program\n        The Winget ID of the Program that should be uninstalled\n        #&gt;\n        param (\n            [psobject]$Program\n        )\n\n        try {\n            $status = Invoke-Winget -wingetId $Program\n            if ($status -eq 0) {\n                Write-Host \"$($Program) uninstalled successfully.\"\n                return $true\n            } else {\n                Write-Host \"Failed to uninstall $($Program).\"\n                return $false\n            }\n        } catch {\n            Write-Host \"Failed to uninstall $($Program) due to an error: $_\"\n            return $false\n        }\n    }\n\n    $count = $Programs.Count\n    $failedPackages = @()\n\n    Write-Host \"===========================================\"\n    Write-Host \"--    Configuring winget packages       ---\"\n    Write-Host \"===========================================\"\n\n    for ($i = 0; $i -lt $count; $i++) {\n        $Program = $Programs[$i]\n        $result = $false\n        Set-WinUtilProgressBar -label \"$Action $($Program)\" -percent ($i / $count * 100)\n        $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -value ($i / $count)})\n\n        $result = switch ($Action) {\n            \"Install\" {Invoke-Install -Program $Program}\n            \"Uninstall\" {Invoke-Uninstall -Program $Program}\n            default {throw \"[Install-WinUtilProgramWinget] Invalid action: $Action\"}\n        }\n\n        if (-not $result) {\n            $failedPackages += $Program\n        }\n    }\n\n    Set-WinUtilProgressBar -label \"$($Action)ation done\" -percent 100\n    return $failedPackages\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7/#function-set-winutilprogressbar","title":"Function: Set-WinUtilProgressbar","text":"<pre><code>function Set-WinUtilProgressbar{\n    &lt;#\n    .SYNOPSIS\n        This function is used to Update the Progress Bar displayed in the winutil GUI.\n        It will be automatically hidden if the user clicks something and no process is running\n    .PARAMETER Label\n        The Text to be overlayed onto the Progress Bar\n    .PARAMETER PERCENT\n        The percentage of the Progress Bar that should be filled (0-100)\n    .PARAMETER Hide\n        If provided, the Progress Bar and the label will be hidden\n    #&gt;\n    param(\n        [string]$Label,\n        [ValidateRange(0,100)]\n        [int]$Percent,\n        $Hide\n    )\n    if ($hide) {\n        $sync.form.Dispatcher.Invoke([action]{$sync.ProgressBarLabel.Visibility = \"Collapsed\"})\n        $sync.form.Dispatcher.Invoke([action]{$sync.ProgressBar.Visibility = \"Collapsed\"})\n    } else {\n        $sync.form.Dispatcher.Invoke([action]{$sync.ProgressBarLabel.Visibility = \"Visible\"})\n        $sync.form.Dispatcher.Invoke([action]{$sync.ProgressBar.Visibility = \"Visible\"})\n    }\n    $sync.form.Dispatcher.Invoke([action]{$sync.ProgressBarLabel.Content.Text = $label})\n    $sync.form.Dispatcher.Invoke([action]{$sync.ProgressBarLabel.Content.ToolTip = $label})\n    $sync.form.Dispatcher.Invoke([action]{ $sync.ProgressBar.Value = $percent})\n\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7/#function-set-winutiltaskbaritem","title":"Function: Set-WinUtilTaskbarItem","text":"<pre><code>function Set-WinUtilTaskbaritem {\n    &lt;#\n\n    .SYNOPSIS\n        Modifies the Taskbaritem of the WPF Form\n\n    .PARAMETER value\n        Value can be between 0 and 1, 0 being no progress done yet and 1 being fully completed\n        Value does not affect item without setting the state to 'Normal', 'Error' or 'Paused'\n        Set-WinUtilTaskbaritem -value 0.5\n\n    .PARAMETER state\n        State can be 'None' &gt; No progress, 'Indeterminate' &gt; inf. loading gray, 'Normal' &gt; Gray, 'Error' &gt; Red, 'Paused' &gt; Yellow\n        no value needed:\n        - Set-WinUtilTaskbaritem -state \"None\"\n        - Set-WinUtilTaskbaritem -state \"Indeterminate\"\n        value needed:\n        - Set-WinUtilTaskbaritem -state \"Error\"\n        - Set-WinUtilTaskbaritem -state \"Normal\"\n        - Set-WinUtilTaskbaritem -state \"Paused\"\n\n    .PARAMETER overlay\n        Overlay icon to display on the taskbar item, there are the presets 'None', 'logo' and 'checkmark' or you can specify a path/link to an image file.\n        CTT logo preset:\n        - Set-WinUtilTaskbaritem -overlay \"logo\"\n        Checkmark preset:\n        - Set-WinUtilTaskbaritem -overlay \"checkmark\"\n        Warning preset:\n        - Set-WinUtilTaskbaritem -overlay \"warning\"\n        No overlay:\n        - Set-WinUtilTaskbaritem -overlay \"None\"\n        Custom icon (needs to be supported by WPF):\n        - Set-WinUtilTaskbaritem -overlay \"C:\\path\\to\\icon.png\"\n\n    .PARAMETER description\n        Description to display on the taskbar item preview\n        Set-WinUtilTaskbaritem -description \"This is a description\"\n    #&gt;\n    param (\n        [string]$state,\n        [double]$value,\n        [string]$overlay,\n        [string]$description\n    )\n\n    if ($value) {\n        $sync[\"Form\"].taskbarItemInfo.ProgressValue = $value\n    }\n\n    if ($state) {\n        switch ($state) {\n            'None' { $sync[\"Form\"].taskbarItemInfo.ProgressState = \"None\" }\n            'Indeterminate' { $sync[\"Form\"].taskbarItemInfo.ProgressState = \"Indeterminate\" }\n            'Normal' { $sync[\"Form\"].taskbarItemInfo.ProgressState = \"Normal\" }\n            'Error' { $sync[\"Form\"].taskbarItemInfo.ProgressState = \"Error\" }\n            'Paused' { $sync[\"Form\"].taskbarItemInfo.ProgressState = \"Paused\" }\n            default { throw \"[Set-WinUtilTaskbarItem] Invalid state\" }\n        }\n    }\n\n    if ($overlay) {\n        switch ($overlay) {\n            'logo' {\n                $sync[\"Form\"].taskbarItemInfo.Overlay = \"$env:LOCALAPPDATA\\winutil\\cttlogo.png\"\n            }\n            'checkmark' {\n                $sync[\"Form\"].taskbarItemInfo.Overlay = \"$env:LOCALAPPDATA\\winutil\\checkmark.png\"\n            }\n            'warning' {\n                $sync[\"Form\"].taskbarItemInfo.Overlay = \"$env:LOCALAPPDATA\\winutil\\warning.png\"\n            }\n            'None' {\n                $sync[\"Form\"].taskbarItemInfo.Overlay = $null\n            }\n            default {\n                if (Test-Path $overlay) {\n                    $sync[\"Form\"].taskbarItemInfo.Overlay = $overlay\n                }\n            }\n        }\n    }\n\n    if ($description) {\n        $sync[\"Form\"].taskbarItemInfo.Description = $description\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7Tele/","title":"Disable Powershell 7 Telemetry","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7Tele/#description","title":"Description","text":"<p>This will create an Environment Variable called 'POWERSHELL_TELEMETRY_OPTOUT' with a value of '1' which will tell Powershell 7 to not send Telemetry Data.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Powershell 7 Telemetry\",\n  \"Description\": \"This will create an Environment Variable called 'POWERSHELL_TELEMETRY_OPTOUT' with a value of '1' which will tell Powershell 7 to not send Telemetry Data.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a009_\",\n  \"InvokeScript\": [\n    \"[Environment]::SetEnvironmentVariable('POWERSHELL_TELEMETRY_OPTOUT', '1', 'Machine')\"\n  ],\n  \"UndoScript\": [\n    \"[Environment]::SetEnvironmentVariable('POWERSHELL_TELEMETRY_OPTOUT', '', 'Machine')\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Powershell7Tele\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7Tele/#invoke-script","title":"Invoke Script","text":"<pre><code>[Environment]::SetEnvironmentVariable('POWERSHELL_TELEMETRY_OPTOUT', '1', 'Machine')\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Powershell7Tele/#undo-script","title":"Undo Script","text":"<pre><code>[Environment]::SetEnvironmentVariable('POWERSHELL_TELEMETRY_OPTOUT', '', 'Machine')\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/RestorePoint/","title":"Create Restore Point","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/RestorePoint/#description","title":"Description","text":"<p>Creates a restore point at runtime in case a revert is needed from WinUtil modifications</p> Preview Code <pre><code>{\n  \"Content\": \"Create Restore Point\",\n  \"Description\": \"Creates a restore point at runtime in case a revert is needed from WinUtil modifications\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Checked\": \"False\",\n  \"Order\": \"a001_\",\n  \"InvokeScript\": [\n    \"\n        # Check if the user has administrative privileges\n        if (-Not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {\n            Write-Host \\\"Please run this script as an administrator.\\\"\n            return\n        }\n\n        # Check if System Restore is enabled for the main drive\n        try {\n            # Try getting restore points to check if System Restore is enabled\n            Enable-ComputerRestore -Drive \\\"$env:SystemDrive\\\"\n        } catch {\n            Write-Host \\\"An error occurred while enabling System Restore: $_\\\"\n        }\n\n        # Check if the SystemRestorePointCreationFrequency value exists\n        $exists = Get-ItemProperty -path \\\"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SystemRestore\\\" -Name \\\"SystemRestorePointCreationFrequency\\\" -ErrorAction SilentlyContinue\n        if($null -eq $exists) {\n            write-host 'Changing system to allow multiple restore points per day'\n            Set-ItemProperty -Path \\\"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SystemRestore\\\" -Name \\\"SystemRestorePointCreationFrequency\\\" -Value \\\"0\\\" -Type DWord -Force -ErrorAction Stop | Out-Null\n        }\n\n        # Attempt to load the required module for Get-ComputerRestorePoint\n        try {\n            Import-Module Microsoft.PowerShell.Management -ErrorAction Stop\n        } catch {\n            Write-Host \\\"Failed to load the Microsoft.PowerShell.Management module: $_\\\"\n            return\n        }\n\n        # Get all the restore points for the current day\n        try {\n            $existingRestorePoints = Get-ComputerRestorePoint | Where-Object { $_.CreationTime.Date -eq (Get-Date).Date }\n        } catch {\n            Write-Host \\\"Failed to retrieve restore points: $_\\\"\n            return\n        }\n\n        # Check if there is already a restore point created today\n        if ($existingRestorePoints.Count -eq 0) {\n            $description = \\\"System Restore Point created by WinUtil\\\"\n\n            Checkpoint-Computer -Description $description -RestorePointType \\\"MODIFY_SETTINGS\\\"\n            Write-Host -ForegroundColor Green \\\"System Restore Point Created Successfully\\\"\n        }\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/RestorePoint\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/RestorePoint/#invoke-script","title":"Invoke Script","text":"<pre><code>        # Check if the user has administrative privileges\n        if (-Not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {\n            Write-Host \"Please run this script as an administrator.\"\n            return\n        }\n\n        # Check if System Restore is enabled for the main drive\n        try {\n            # Try getting restore points to check if System Restore is enabled\n            Enable-ComputerRestore -Drive \"$env:SystemDrive\"\n        } catch {\n            Write-Host \"An error occurred while enabling System Restore: $_\"\n        }\n\n        # Check if the SystemRestorePointCreationFrequency value exists\n        $exists = Get-ItemProperty -path \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" -Name \"SystemRestorePointCreationFrequency\" -ErrorAction SilentlyContinue\n        if($null -eq $exists) {\n            write-host 'Changing system to allow multiple restore points per day'\n            Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" -Name \"SystemRestorePointCreationFrequency\" -Value \"0\" -Type DWord -Force -ErrorAction Stop | Out-Null\n        }\n\n        # Attempt to load the required module for Get-ComputerRestorePoint\n        try {\n            Import-Module Microsoft.PowerShell.Management -ErrorAction Stop\n        } catch {\n            Write-Host \"Failed to load the Microsoft.PowerShell.Management module: $_\"\n            return\n        }\n\n        # Get all the restore points for the current day\n        try {\n            $existingRestorePoints = Get-ComputerRestorePoint | Where-Object { $_.CreationTime.Date -eq (Get-Date).Date }\n        } catch {\n            Write-Host \"Failed to retrieve restore points: $_\"\n            return\n        }\n\n        # Check if there is already a restore point created today\n        if ($existingRestorePoints.Count -eq 0) {\n            $description = \"System Restore Point created by WinUtil\"\n\n            Checkpoint-Computer -Description $description -RestorePointType \"MODIFY_SETTINGS\"\n            Write-Host -ForegroundColor Green \"System Restore Point Created Successfully\"\n        }\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/","title":"Set Services to Manual","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#description","title":"Description","text":"<p>Turns a bunch of system services to manual that don't need to be running all the time. This is pretty harmless as if the service is needed, it will simply start on demand.</p> Preview Code <pre><code>{\n  \"Content\": \"Set Services to Manual\",\n  \"Description\": \"Turns a bunch of system services to manual that don't need to be running all the time. This is pretty harmless as if the service is needed, it will simply start on demand.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a014_\",\n  \"service\": [\n    {\n      \"Name\": \"AJRouter\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"ALG\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"AppIDSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"AppMgmt\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"AppReadiness\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"AppVClient\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"AppXSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Appinfo\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"AssignedAccessManagerSvc\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"AudioEndpointBuilder\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"AudioSrv\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"Audiosrv\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"AxInstSV\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"BDESVC\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"BFE\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"BITS\",\n      \"StartupType\": \"AutomaticDelayedStart\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"BTAGService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"BcastDVRUserService_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"BluetoothUserService_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"BrokerInfrastructure\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"Browser\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"BthAvctpSvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"BthHFSrv\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"CDPSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"CDPUserSvc_*\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"COMSysApp\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"CaptureService_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"CertPropSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"ClipSVC\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"ConsentUxUserSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"CoreMessagingRegistrar\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"CredentialEnrollmentManagerUserSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"CryptSvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"CscService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DPS\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"DcomLaunch\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"DcpSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DevQueryBroker\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DeviceAssociationBrokerSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DeviceAssociationService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DeviceInstall\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DevicePickerUserSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DevicesFlowUserSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Dhcp\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"DiagTrack\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"DialogBlockingService\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"DispBrokerDesktopSvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"DisplayEnhancementService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DmEnrollmentSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Dnscache\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"DoSvc\",\n      \"StartupType\": \"AutomaticDelayedStart\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"DsSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DsmSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"DusmSvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"EFS\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"EapHost\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"EntAppSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"EventLog\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"EventSystem\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"FDResPub\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Fax\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"FontCache\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"FrameServer\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"FrameServerMonitor\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"GraphicsPerfSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"HomeGroupListener\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"HomeGroupProvider\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"HvHost\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"IEEtwCollectorService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"IKEEXT\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"InstallService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"InventorySvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"IpxlatCfgSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"KeyIso\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"KtmRm\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"LSM\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"LanmanServer\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"LanmanWorkstation\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"LicenseManager\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"LxpSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"MSDTC\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"MSiSCSI\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"MapsBroker\",\n      \"StartupType\": \"AutomaticDelayedStart\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"McpManagementService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"MessagingService_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"MicrosoftEdgeElevationService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"MixedRealityOpenXRSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"MpsSvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"MsKeyboardFilter\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"NPSMSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NaturalAuthentication\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NcaSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NcbService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NcdAutoSetup\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NetSetupSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NetTcpPortSharing\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"Netlogon\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"Netman\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NgcCtnrSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NgcSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"NlaSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"OneSyncSvc_*\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"P9RdrService_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PNRPAutoReg\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PNRPsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PcaSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"PeerDistSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PenService_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PerfHost\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PhoneSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PimIndexMaintenanceSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PlugPlay\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PolicyAgent\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Power\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"PrintNotify\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"PrintWorkflowUserSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"ProfSvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"PushToInstall\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"QWAVE\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"RasAuto\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"RasMan\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"RemoteAccess\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"RemoteRegistry\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"RetailDemo\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"RmSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"RpcEptMapper\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"RpcLocator\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"RpcSs\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"SCPolicySvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SCardSvr\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SDRSVC\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SEMgrSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SENS\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"SNMPTRAP\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SNMPTrap\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SSDPSRV\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SamSs\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"ScDeviceEnum\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Schedule\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"SecurityHealthService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Sense\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SensorDataService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SensorService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SensrSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SessionEnv\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SgrmBroker\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"SharedAccess\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"SharedRealitySvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"ShellHWDetection\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"SmsRouter\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Spooler\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"SstpSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"StateRepository\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"StiSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"StorSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"SysMain\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"SystemEventsBroker\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"TabletInputService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"TapiSrv\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"TermService\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"TextInputManagementService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"Themes\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"TieringEngineService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"TimeBroker\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"TimeBrokerSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"TokenBroker\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"TrkWks\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"TroubleshootingSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"TrustedInstaller\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"UI0Detect\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"UdkUserSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"UevAgentService\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"UmRdpService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"UnistoreSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"UserDataSvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"UserManager\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"UsoSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"VGAuthService\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"VMTools\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"VSS\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"VacSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"VaultSvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"W32Time\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WEPHOSTSVC\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WFDSConMgrSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WMPNetworkSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WManSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WPDBusEnum\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WSService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WSearch\",\n      \"StartupType\": \"AutomaticDelayedStart\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"WaaSMedicSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WalletService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WarpJITSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WbioSrvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Wcmsvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"WcsPlugInService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WdNisSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WdiServiceHost\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WdiSystemHost\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WebClient\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Wecsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WerSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WiaRpc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WinDefend\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"WinHttpAutoProxySvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WinRM\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"Winmgmt\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"WlanSvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"WpcMonSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"WpnService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"WpnUserService_*\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"XblAuthManager\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"XblGameSave\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"XboxGipSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"XboxNetApiSvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"autotimesvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"bthserv\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"camsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"cbdhsvc_*\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"cloudidsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"dcsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"defragsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"diagnosticshub.standardcollector.service\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"diagsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"dmwappushservice\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"dot3svc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"edgeupdate\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"edgeupdatem\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"embeddedmode\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"fdPHost\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"fhsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"gpsvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"hidserv\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"icssvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"iphlpsvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"lfsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"lltdsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"lmhosts\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"mpssvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"msiserver\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"netprofm\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"nsi\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"p2pimsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"p2psvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"perceptionsimulation\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"pla\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"seclogon\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"shpamsvc\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"smphost\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"spectrum\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"sppsvc\",\n      \"StartupType\": \"AutomaticDelayedStart\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"ssh-agent\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"svsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"swprv\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"tiledatamodelsvc\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"tzautoupdate\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"uhssvc\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Disabled\"\n    },\n    {\n      \"Name\": \"upnphost\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vds\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vm3dservice\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"vmicguestinterface\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vmicheartbeat\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vmickvpexchange\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vmicrdv\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vmicshutdown\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vmictimesync\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vmicvmsession\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vmicvss\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"vmvss\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"wbengine\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"wcncsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"webthreatdefsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"webthreatdefusersvc_*\",\n      \"StartupType\": \"Automatic\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"wercplsupport\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"wisvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"wlidsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"wlpasvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"wmiApSrv\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"workfolderssvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"wscsvc\",\n      \"StartupType\": \"AutomaticDelayedStart\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"wuauserv\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    },\n    {\n      \"Name\": \"wudfsvc\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Manual\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Services\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-changes","title":"Service Changes","text":"<p>Windows services are background processes for system functions or applications. Setting some to manual optimizes performance by starting them only when needed.</p> <p>You can find information about services on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ajrouter","title":"Service Name: AJRouter","text":"<p>Startup Type: Disabled</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-alg","title":"Service Name: ALG","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-appidsvc","title":"Service Name: AppIDSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-appmgmt","title":"Service Name: AppMgmt","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-appreadiness","title":"Service Name: AppReadiness","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-appvclient","title":"Service Name: AppVClient","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-appxsvc","title":"Service Name: AppXSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-appinfo","title":"Service Name: Appinfo","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-assignedaccessmanagersvc","title":"Service Name: AssignedAccessManagerSvc","text":"<p>Startup Type: Disabled</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-audioendpointbuilder","title":"Service Name: AudioEndpointBuilder","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-audiosrv","title":"Service Name: AudioSrv","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-audiosrv_1","title":"Service Name: Audiosrv","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-axinstsv","title":"Service Name: AxInstSV","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-bdesvc","title":"Service Name: BDESVC","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-bfe","title":"Service Name: BFE","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-bits","title":"Service Name: BITS","text":"<p>Startup Type: AutomaticDelayedStart</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-btagservice","title":"Service Name: BTAGService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-bcastdvruserservice_","title":"Service Name: BcastDVRUserService_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-bluetoothuserservice_","title":"Service Name: BluetoothUserService_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-brokerinfrastructure","title":"Service Name: BrokerInfrastructure","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-browser","title":"Service Name: Browser","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-bthavctpsvc","title":"Service Name: BthAvctpSvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-bthhfsrv","title":"Service Name: BthHFSrv","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-cdpsvc","title":"Service Name: CDPSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-cdpusersvc_","title":"Service Name: CDPUserSvc_*","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-comsysapp","title":"Service Name: COMSysApp","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-captureservice_","title":"Service Name: CaptureService_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-certpropsvc","title":"Service Name: CertPropSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-clipsvc","title":"Service Name: ClipSVC","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-consentuxusersvc_","title":"Service Name: ConsentUxUserSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-coremessagingregistrar","title":"Service Name: CoreMessagingRegistrar","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-credentialenrollmentmanagerusersvc_","title":"Service Name: CredentialEnrollmentManagerUserSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-cryptsvc","title":"Service Name: CryptSvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-cscservice","title":"Service Name: CscService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dps","title":"Service Name: DPS","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dcomlaunch","title":"Service Name: DcomLaunch","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dcpsvc","title":"Service Name: DcpSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-devquerybroker","title":"Service Name: DevQueryBroker","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-deviceassociationbrokersvc_","title":"Service Name: DeviceAssociationBrokerSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-deviceassociationservice","title":"Service Name: DeviceAssociationService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-deviceinstall","title":"Service Name: DeviceInstall","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-devicepickerusersvc_","title":"Service Name: DevicePickerUserSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-devicesflowusersvc_","title":"Service Name: DevicesFlowUserSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dhcp","title":"Service Name: Dhcp","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-diagtrack","title":"Service Name: DiagTrack","text":"<p>Startup Type: Disabled</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dialogblockingservice","title":"Service Name: DialogBlockingService","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dispbrokerdesktopsvc","title":"Service Name: DispBrokerDesktopSvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-displayenhancementservice","title":"Service Name: DisplayEnhancementService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dmenrollmentsvc","title":"Service Name: DmEnrollmentSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dnscache","title":"Service Name: Dnscache","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dosvc","title":"Service Name: DoSvc","text":"<p>Startup Type: AutomaticDelayedStart</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dssvc","title":"Service Name: DsSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dsmsvc","title":"Service Name: DsmSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dusmsvc","title":"Service Name: DusmSvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-efs","title":"Service Name: EFS","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-eaphost","title":"Service Name: EapHost","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-entappsvc","title":"Service Name: EntAppSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-eventlog","title":"Service Name: EventLog","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-eventsystem","title":"Service Name: EventSystem","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-fdrespub","title":"Service Name: FDResPub","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-fax","title":"Service Name: Fax","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-fontcache","title":"Service Name: FontCache","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-frameserver","title":"Service Name: FrameServer","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-frameservermonitor","title":"Service Name: FrameServerMonitor","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-graphicsperfsvc","title":"Service Name: GraphicsPerfSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-homegrouplistener","title":"Service Name: HomeGroupListener","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-homegroupprovider","title":"Service Name: HomeGroupProvider","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-hvhost","title":"Service Name: HvHost","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ieetwcollectorservice","title":"Service Name: IEEtwCollectorService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ikeext","title":"Service Name: IKEEXT","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-installservice","title":"Service Name: InstallService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-inventorysvc","title":"Service Name: InventorySvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ipxlatcfgsvc","title":"Service Name: IpxlatCfgSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-keyiso","title":"Service Name: KeyIso","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ktmrm","title":"Service Name: KtmRm","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-lsm","title":"Service Name: LSM","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-lanmanserver","title":"Service Name: LanmanServer","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-lanmanworkstation","title":"Service Name: LanmanWorkstation","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-licensemanager","title":"Service Name: LicenseManager","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-lxpsvc","title":"Service Name: LxpSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-msdtc","title":"Service Name: MSDTC","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-msiscsi","title":"Service Name: MSiSCSI","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-mapsbroker","title":"Service Name: MapsBroker","text":"<p>Startup Type: AutomaticDelayedStart</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-mcpmanagementservice","title":"Service Name: McpManagementService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-messagingservice_","title":"Service Name: MessagingService_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-microsoftedgeelevationservice","title":"Service Name: MicrosoftEdgeElevationService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-mixedrealityopenxrsvc","title":"Service Name: MixedRealityOpenXRSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-mpssvc","title":"Service Name: MpsSvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-mskeyboardfilter","title":"Service Name: MsKeyboardFilter","text":"<p>Startup Type: Manual</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-npsmsvc_","title":"Service Name: NPSMSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-naturalauthentication","title":"Service Name: NaturalAuthentication","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ncasvc","title":"Service Name: NcaSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ncbservice","title":"Service Name: NcbService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ncdautosetup","title":"Service Name: NcdAutoSetup","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-netsetupsvc","title":"Service Name: NetSetupSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-nettcpportsharing","title":"Service Name: NetTcpPortSharing","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-netlogon","title":"Service Name: Netlogon","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-netman","title":"Service Name: Netman","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ngcctnrsvc","title":"Service Name: NgcCtnrSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ngcsvc","title":"Service Name: NgcSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-nlasvc","title":"Service Name: NlaSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-onesyncsvc_","title":"Service Name: OneSyncSvc_*","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-p9rdrservice_","title":"Service Name: P9RdrService_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-pnrpautoreg","title":"Service Name: PNRPAutoReg","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-pnrpsvc","title":"Service Name: PNRPsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-pcasvc","title":"Service Name: PcaSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-peerdistsvc","title":"Service Name: PeerDistSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-penservice_","title":"Service Name: PenService_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-perfhost","title":"Service Name: PerfHost","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-phonesvc","title":"Service Name: PhoneSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-pimindexmaintenancesvc_","title":"Service Name: PimIndexMaintenanceSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-plugplay","title":"Service Name: PlugPlay","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-policyagent","title":"Service Name: PolicyAgent","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-power","title":"Service Name: Power","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-printnotify","title":"Service Name: PrintNotify","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-printworkflowusersvc_","title":"Service Name: PrintWorkflowUserSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-profsvc","title":"Service Name: ProfSvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-pushtoinstall","title":"Service Name: PushToInstall","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-qwave","title":"Service Name: QWAVE","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-rasauto","title":"Service Name: RasAuto","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-rasman","title":"Service Name: RasMan","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-remoteaccess","title":"Service Name: RemoteAccess","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-remoteregistry","title":"Service Name: RemoteRegistry","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-retaildemo","title":"Service Name: RetailDemo","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-rmsvc","title":"Service Name: RmSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-rpceptmapper","title":"Service Name: RpcEptMapper","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-rpclocator","title":"Service Name: RpcLocator","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-rpcss","title":"Service Name: RpcSs","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-scpolicysvc","title":"Service Name: SCPolicySvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-scardsvr","title":"Service Name: SCardSvr","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sdrsvc","title":"Service Name: SDRSVC","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-semgrsvc","title":"Service Name: SEMgrSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sens","title":"Service Name: SENS","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-snmptrap","title":"Service Name: SNMPTRAP","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-snmptrap_1","title":"Service Name: SNMPTrap","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ssdpsrv","title":"Service Name: SSDPSRV","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-samss","title":"Service Name: SamSs","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-scdeviceenum","title":"Service Name: ScDeviceEnum","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-schedule","title":"Service Name: Schedule","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-securityhealthservice","title":"Service Name: SecurityHealthService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sense","title":"Service Name: Sense","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sensordataservice","title":"Service Name: SensorDataService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sensorservice","title":"Service Name: SensorService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sensrsvc","title":"Service Name: SensrSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sessionenv","title":"Service Name: SessionEnv","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sgrmbroker","title":"Service Name: SgrmBroker","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sharedaccess","title":"Service Name: SharedAccess","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sharedrealitysvc","title":"Service Name: SharedRealitySvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-shellhwdetection","title":"Service Name: ShellHWDetection","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-smsrouter","title":"Service Name: SmsRouter","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-spooler","title":"Service Name: Spooler","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sstpsvc","title":"Service Name: SstpSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-staterepository","title":"Service Name: StateRepository","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-stisvc","title":"Service Name: StiSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-storsvc","title":"Service Name: StorSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sysmain","title":"Service Name: SysMain","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-systemeventsbroker","title":"Service Name: SystemEventsBroker","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-tabletinputservice","title":"Service Name: TabletInputService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-tapisrv","title":"Service Name: TapiSrv","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-termservice","title":"Service Name: TermService","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-textinputmanagementservice","title":"Service Name: TextInputManagementService","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-themes","title":"Service Name: Themes","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-tieringengineservice","title":"Service Name: TieringEngineService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-timebroker","title":"Service Name: TimeBroker","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-timebrokersvc","title":"Service Name: TimeBrokerSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-tokenbroker","title":"Service Name: TokenBroker","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-trkwks","title":"Service Name: TrkWks","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-troubleshootingsvc","title":"Service Name: TroubleshootingSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-trustedinstaller","title":"Service Name: TrustedInstaller","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ui0detect","title":"Service Name: UI0Detect","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-udkusersvc_","title":"Service Name: UdkUserSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-uevagentservice","title":"Service Name: UevAgentService","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-umrdpservice","title":"Service Name: UmRdpService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-unistoresvc_","title":"Service Name: UnistoreSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-userdatasvc_","title":"Service Name: UserDataSvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-usermanager","title":"Service Name: UserManager","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-usosvc","title":"Service Name: UsoSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vgauthservice","title":"Service Name: VGAuthService","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmtools","title":"Service Name: VMTools","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vss","title":"Service Name: VSS","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vacsvc","title":"Service Name: VacSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vaultsvc","title":"Service Name: VaultSvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-w32time","title":"Service Name: W32Time","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wephostsvc","title":"Service Name: WEPHOSTSVC","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wfdsconmgrsvc","title":"Service Name: WFDSConMgrSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wmpnetworksvc","title":"Service Name: WMPNetworkSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wmansvc","title":"Service Name: WManSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wpdbusenum","title":"Service Name: WPDBusEnum","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wsservice","title":"Service Name: WSService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wsearch","title":"Service Name: WSearch","text":"<p>Startup Type: AutomaticDelayedStart</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-waasmedicsvc","title":"Service Name: WaaSMedicSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-walletservice","title":"Service Name: WalletService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-warpjitsvc","title":"Service Name: WarpJITSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wbiosrvc","title":"Service Name: WbioSrvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wcmsvc","title":"Service Name: Wcmsvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wcspluginservice","title":"Service Name: WcsPlugInService","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wdnissvc","title":"Service Name: WdNisSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wdiservicehost","title":"Service Name: WdiServiceHost","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wdisystemhost","title":"Service Name: WdiSystemHost","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-webclient","title":"Service Name: WebClient","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wecsvc","title":"Service Name: Wecsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wersvc","title":"Service Name: WerSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wiarpc","title":"Service Name: WiaRpc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-windefend","title":"Service Name: WinDefend","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-winhttpautoproxysvc","title":"Service Name: WinHttpAutoProxySvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-winrm","title":"Service Name: WinRM","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-winmgmt","title":"Service Name: Winmgmt","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wlansvc","title":"Service Name: WlanSvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wpcmonsvc","title":"Service Name: WpcMonSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wpnservice","title":"Service Name: WpnService","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wpnuserservice_","title":"Service Name: WpnUserService_*","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-xblauthmanager","title":"Service Name: XblAuthManager","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-xblgamesave","title":"Service Name: XblGameSave","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-xboxgipsvc","title":"Service Name: XboxGipSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-xboxnetapisvc","title":"Service Name: XboxNetApiSvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-autotimesvc","title":"Service Name: autotimesvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-bthserv","title":"Service Name: bthserv","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-camsvc","title":"Service Name: camsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-cbdhsvc_","title":"Service Name: cbdhsvc_*","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-cloudidsvc","title":"Service Name: cloudidsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dcsvc","title":"Service Name: dcsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-defragsvc","title":"Service Name: defragsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-diagnosticshubstandardcollectorservice","title":"Service Name: diagnosticshub.standardcollector.service","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-diagsvc","title":"Service Name: diagsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dmwappushservice","title":"Service Name: dmwappushservice","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-dot3svc","title":"Service Name: dot3svc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-edgeupdate","title":"Service Name: edgeupdate","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-edgeupdatem","title":"Service Name: edgeupdatem","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-embeddedmode","title":"Service Name: embeddedmode","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-fdphost","title":"Service Name: fdPHost","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-fhsvc","title":"Service Name: fhsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-gpsvc","title":"Service Name: gpsvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-hidserv","title":"Service Name: hidserv","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-icssvc","title":"Service Name: icssvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-iphlpsvc","title":"Service Name: iphlpsvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-lfsvc","title":"Service Name: lfsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-lltdsvc","title":"Service Name: lltdsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-lmhosts","title":"Service Name: lmhosts","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-mpssvc_1","title":"Service Name: mpssvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-msiserver","title":"Service Name: msiserver","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-netprofm","title":"Service Name: netprofm","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-nsi","title":"Service Name: nsi","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-p2pimsvc","title":"Service Name: p2pimsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-p2psvc","title":"Service Name: p2psvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-perceptionsimulation","title":"Service Name: perceptionsimulation","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-pla","title":"Service Name: pla","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-seclogon","title":"Service Name: seclogon","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-shpamsvc","title":"Service Name: shpamsvc","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-smphost","title":"Service Name: smphost","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-spectrum","title":"Service Name: spectrum","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-sppsvc","title":"Service Name: sppsvc","text":"<p>Startup Type: AutomaticDelayedStart</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-ssh-agent","title":"Service Name: ssh-agent","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-svsvc","title":"Service Name: svsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-swprv","title":"Service Name: swprv","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-tiledatamodelsvc","title":"Service Name: tiledatamodelsvc","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-tzautoupdate","title":"Service Name: tzautoupdate","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-uhssvc","title":"Service Name: uhssvc","text":"<p>Startup Type: Disabled</p> <p>Original Type: Disabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-upnphost","title":"Service Name: upnphost","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vds","title":"Service Name: vds","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vm3dservice","title":"Service Name: vm3dservice","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmicguestinterface","title":"Service Name: vmicguestinterface","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmicheartbeat","title":"Service Name: vmicheartbeat","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmickvpexchange","title":"Service Name: vmickvpexchange","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmicrdv","title":"Service Name: vmicrdv","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmicshutdown","title":"Service Name: vmicshutdown","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmictimesync","title":"Service Name: vmictimesync","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmicvmsession","title":"Service Name: vmicvmsession","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmicvss","title":"Service Name: vmicvss","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-vmvss","title":"Service Name: vmvss","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wbengine","title":"Service Name: wbengine","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wcncsvc","title":"Service Name: wcncsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-webthreatdefsvc","title":"Service Name: webthreatdefsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-webthreatdefusersvc_","title":"Service Name: webthreatdefusersvc_*","text":"<p>Startup Type: Automatic</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wercplsupport","title":"Service Name: wercplsupport","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wisvc","title":"Service Name: wisvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wlidsvc","title":"Service Name: wlidsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wlpasvc","title":"Service Name: wlpasvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wmiapsrv","title":"Service Name: wmiApSrv","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-workfolderssvc","title":"Service Name: workfolderssvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wscsvc","title":"Service Name: wscsvc","text":"<p>Startup Type: AutomaticDelayedStart</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wuauserv","title":"Service Name: wuauserv","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p>"},{"location":"dev/tweaks/Essential-Tweaks/Services/#service-name-wudfsvc","title":"Service Name: wudfsvc","text":"<p>Startup Type: Manual</p> <p>Original Type: Manual</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Storage/","title":"Disable Storage Sense","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Storage/#description","title":"Description","text":"<p>Storage Sense deletes temp files automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Storage Sense\",\n  \"Description\": \"Storage Sense deletes temp files automatically.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a005_\",\n  \"InvokeScript\": [\n    \"Set-ItemProperty -Path \\\"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\StorageSense\\\\Parameters\\\\StoragePolicy\\\" -Name \\\"01\\\" -Value 0 -Type Dword -Force\"\n  ],\n  \"UndoScript\": [\n    \"Set-ItemProperty -Path \\\"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\StorageSense\\\\Parameters\\\\StoragePolicy\\\" -Name \\\"01\\\" -Value 1 -Type Dword -Force\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Storage\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Storage/#invoke-script","title":"Invoke Script","text":"<pre><code>Set-ItemProperty -Path \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\StorageSense\\Parameters\\StoragePolicy\" -Name \"01\" -Value 0 -Type Dword -Force\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Storage/#undo-script","title":"Undo Script","text":"<pre><code>Set-ItemProperty -Path \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\StorageSense\\Parameters\\StoragePolicy\" -Name \"01\" -Value 1 -Type Dword -Force\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/","title":"Disable Telemetry","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#description","title":"Description","text":"<p>Disables Microsoft Telemetry. Note: This will lock many Edge Browser settings. Microsoft spies heavily on you when using the Edge browser.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Telemetry\",\n  \"Description\": \"Disables Microsoft Telemetry. Note: This will lock many Edge Browser settings. Microsoft spies heavily on you when using the Edge browser.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a003_\",\n  \"ScheduledTask\": [\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Application Experience\\\\Microsoft Compatibility Appraiser\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Application Experience\\\\ProgramDataUpdater\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Autochk\\\\Proxy\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Customer Experience Improvement Program\\\\Consolidator\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Customer Experience Improvement Program\\\\UsbCeip\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\DiskDiagnostic\\\\Microsoft-Windows-DiskDiagnosticDataCollector\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Feedback\\\\Siuf\\\\DmClient\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Feedback\\\\Siuf\\\\DmClientOnScenarioDownload\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Windows Error Reporting\\\\QueueReporting\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Application Experience\\\\MareBackup\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Application Experience\\\\StartupAppTask\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Application Experience\\\\PcaPatchDbTask\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    },\n    {\n      \"Name\": \"Microsoft\\\\Windows\\\\Maps\\\\MapsUpdateTask\",\n      \"State\": \"Disabled\",\n      \"OriginalState\": \"Enabled\"\n    }\n  ],\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\DataCollection\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"Name\": \"AllowTelemetry\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\DataCollection\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"AllowTelemetry\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"ContentDeliveryAllowed\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"OemPreInstalledAppsEnabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"PreInstalledAppsEnabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"PreInstalledAppsEverEnabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SilentInstalledAppsEnabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SubscribedContent-338387Enabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SubscribedContent-338388Enabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SubscribedContent-338389Enabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SubscribedContent-353698Enabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\ContentDeliveryManager\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SystemPaneSuggestionsEnabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Siuf\\\\Rules\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"NumberOfSIUFInPeriod\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\DataCollection\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"DoNotShowFeedbackNotifications\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\CloudContent\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"DisableTailoredExperiencesWithDiagnosticData\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\AdvertisingInfo\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"DisabledByGroupPolicy\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\Windows Error Reporting\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"Disabled\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\DeliveryOptimization\\\\Config\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"DODownloadMode\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Remote Assistance\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"fAllowToGetHelp\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\OperationStatusManager\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"EnthusiastMode\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"ShowTaskViewButton\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\\\\People\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"PeopleBand\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"LaunchTo\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\FileSystem\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"LongPathsEnabled\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"_Comment\": \"Driver searching is a function that should be left in\",\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\DriverSearching\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SearchOrderConfig\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Multimedia\\\\SystemProfile\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SystemResponsiveness\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Multimedia\\\\SystemProfile\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"NetworkThrottlingIndex\",\n      \"Value\": \"4294967295\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Control Panel\\\\Desktop\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"MenuShowDelay\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Control Panel\\\\Desktop\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"AutoEndTasks\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Memory Management\",\n      \"OriginalValue\": \"0\",\n      \"Name\": \"ClearPageFileAtShutdown\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\ControlSet001\\\\Services\\\\Ndu\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"Start\",\n      \"Value\": \"2\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Control Panel\\\\Mouse\",\n      \"OriginalValue\": \"400\",\n      \"Name\": \"MouseHoverTime\",\n      \"Value\": \"400\",\n      \"Type\": \"String\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\LanmanServer\\\\Parameters\",\n      \"OriginalValue\": \"20\",\n      \"Name\": \"IRPStackSize\",\n      \"Value\": \"30\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\Windows Feeds\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"EnableFeeds\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Feeds\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"ShellFeedsTaskbarViewMode\",\n      \"Value\": \"2\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"HideSCAMeetNow\",\n      \"Value\": \"1\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\UserProfileEngagement\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"ScoobeSystemSettingEnabled\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"InvokeScript\": [\n    \"\n      bcdedit /set `{current`} bootmenupolicy Legacy | Out-Null\n        If ((get-ItemProperty -Path \\\"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\" -Name CurrentBuild).CurrentBuild -lt 22557) {\n            $taskmgr = Start-Process -WindowStyle Hidden -FilePath taskmgr.exe -PassThru\n            Do {\n                Start-Sleep -Milliseconds 100\n                $preferences = Get-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\TaskManager\\\" -Name \\\"Preferences\\\" -ErrorAction SilentlyContinue\n            } Until ($preferences)\n            Stop-Process $taskmgr\n            $preferences.Preferences[28] = 0\n            Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\TaskManager\\\" -Name \\\"Preferences\\\" -Type Binary -Value $preferences.Preferences\n        }\n        Remove-Item -Path \\\"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\MyComputer\\\\NameSpace\\\\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}\\\" -Recurse -ErrorAction SilentlyContinue\n\n        # Fix Managed by your organization in Edge if regustry path exists then remove it\n\n        If (Test-Path \\\"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\\\") {\n            Remove-Item -Path \\\"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Edge\\\" -Recurse -ErrorAction SilentlyContinue\n        }\n\n        # Group svchost.exe processes\n        $ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb\n        Set-ItemProperty -Path \\\"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\" -Name \\\"SvcHostSplitThresholdInKB\\\" -Type DWord -Value $ram -Force\n\n        $autoLoggerDir = \\\"$env:PROGRAMDATA\\\\Microsoft\\\\Diagnosis\\\\ETLLogs\\\\AutoLogger\\\"\n        If (Test-Path \\\"$autoLoggerDir\\\\AutoLogger-Diagtrack-Listener.etl\\\") {\n            Remove-Item \\\"$autoLoggerDir\\\\AutoLogger-Diagtrack-Listener.etl\\\"\n        }\n        icacls $autoLoggerDir /deny SYSTEM:`(OI`)`(CI`)F | Out-Null\n\n        # Disable Defender Auto Sample Submission\n        Set-MpPreference -SubmitSamplesConsent 2 -ErrorAction SilentlyContinue | Out-Null\n        \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Tele\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#invoke-script","title":"Invoke Script","text":"<pre><code>      bcdedit /set `{current`} bootmenupolicy Legacy | Out-Null\n        If ((get-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\" -Name CurrentBuild).CurrentBuild -lt 22557) {\n            $taskmgr = Start-Process -WindowStyle Hidden -FilePath taskmgr.exe -PassThru\n            Do {\n                Start-Sleep -Milliseconds 100\n                $preferences = Get-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\TaskManager\" -Name \"Preferences\" -ErrorAction SilentlyContinue\n            } Until ($preferences)\n            Stop-Process $taskmgr\n            $preferences.Preferences[28] = 0\n            Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\TaskManager\" -Name \"Preferences\" -Type Binary -Value $preferences.Preferences\n        }\n        Remove-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}\" -Recurse -ErrorAction SilentlyContinue\n\n        # Fix Managed by your organization in Edge if regustry path exists then remove it\n\n        If (Test-Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Edge\") {\n            Remove-Item -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Edge\" -Recurse -ErrorAction SilentlyContinue\n        }\n\n        # Group svchost.exe processes\n        $ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb\n        Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\" -Name \"SvcHostSplitThresholdInKB\" -Type DWord -Value $ram -Force\n\n        $autoLoggerDir = \"$env:PROGRAMDATA\\Microsoft\\Diagnosis\\ETLLogs\\AutoLogger\"\n        If (Test-Path \"$autoLoggerDir\\AutoLogger-Diagtrack-Listener.etl\") {\n            Remove-Item \"$autoLoggerDir\\AutoLogger-Diagtrack-Listener.etl\"\n        }\n        icacls $autoLoggerDir /deny SYSTEM:`(OI`)`(CI`)F | Out-Null\n\n        # Disable Defender Auto Sample Submission\n        Set-MpPreference -SubmitSamplesConsent 2 -ErrorAction SilentlyContinue | Out-Null\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-allowtelemetry","title":"Registry Key: AllowTelemetry","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-allowtelemetry_1","title":"Registry Key: AllowTelemetry","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-contentdeliveryallowed","title":"Registry Key: ContentDeliveryAllowed","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-oempreinstalledappsenabled","title":"Registry Key: OemPreInstalledAppsEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-preinstalledappsenabled","title":"Registry Key: PreInstalledAppsEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-preinstalledappseverenabled","title":"Registry Key: PreInstalledAppsEverEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-silentinstalledappsenabled","title":"Registry Key: SilentInstalledAppsEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-subscribedcontent-338387enabled","title":"Registry Key: SubscribedContent-338387Enabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-subscribedcontent-338388enabled","title":"Registry Key: SubscribedContent-338388Enabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-subscribedcontent-338389enabled","title":"Registry Key: SubscribedContent-338389Enabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-subscribedcontent-353698enabled","title":"Registry Key: SubscribedContent-353698Enabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-systempanesuggestionsenabled","title":"Registry Key: SystemPaneSuggestionsEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-numberofsiufinperiod","title":"Registry Key: NumberOfSIUFInPeriod","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-donotshowfeedbacknotifications","title":"Registry Key: DoNotShowFeedbackNotifications","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-disabletailoredexperienceswithdiagnosticdata","title":"Registry Key: DisableTailoredExperiencesWithDiagnosticData","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-disabledbygrouppolicy","title":"Registry Key: DisabledByGroupPolicy","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-disabled","title":"Registry Key: Disabled","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-dodownloadmode","title":"Registry Key: DODownloadMode","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-fallowtogethelp","title":"Registry Key: fAllowToGetHelp","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-enthusiastmode","title":"Registry Key: EnthusiastMode","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-showtaskviewbutton","title":"Registry Key: ShowTaskViewButton","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-peopleband","title":"Registry Key: PeopleBand","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-launchto","title":"Registry Key: LaunchTo","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-longpathsenabled","title":"Registry Key: LongPathsEnabled","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-searchorderconfig","title":"Registry Key: SearchOrderConfig","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-systemresponsiveness","title":"Registry Key: SystemResponsiveness","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-networkthrottlingindex","title":"Registry Key: NetworkThrottlingIndex","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 4294967295</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-menushowdelay","title":"Registry Key: MenuShowDelay","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-autoendtasks","title":"Registry Key: AutoEndTasks","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-clearpagefileatshutdown","title":"Registry Key: ClearPageFileAtShutdown","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-start","title":"Registry Key: Start","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 2</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-mousehovertime","title":"Registry Key: MouseHoverTime","text":"<p>Type: String</p> <p>Original Value: 400</p> <p>New Value: 400</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-irpstacksize","title":"Registry Key: IRPStackSize","text":"<p>Type: DWord</p> <p>Original Value: 20</p> <p>New Value: 30</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-enablefeeds","title":"Registry Key: EnableFeeds","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-shellfeedstaskbarviewmode","title":"Registry Key: ShellFeedsTaskbarViewMode","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 2</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-hidescameetnow","title":"Registry Key: HideSCAMeetNow","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#registry-key-scoobesystemsettingenabled","title":"Registry Key: ScoobeSystemSettingEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#scheduled-task-changes","title":"Scheduled Task Changes","text":"<p>Windows scheduled tasks are used to run scripts or programs at specific times or events. Disabling unnecessary tasks can improve system performance and reduce unwanted background activity.</p> <p>You can find information about scheduled tasks on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsapplication-experiencemicrosoft-compatibility-appraiser","title":"Task Name: Microsoft\\Windows\\Application Experience\\Microsoft Compatibility Appraiser","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsapplication-experienceprogramdataupdater","title":"Task Name: Microsoft\\Windows\\Application Experience\\ProgramDataUpdater","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsautochkproxy","title":"Task Name: Microsoft\\Windows\\Autochk\\Proxy","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowscustomer-experience-improvement-programconsolidator","title":"Task Name: Microsoft\\Windows\\Customer Experience Improvement Program\\Consolidator","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowscustomer-experience-improvement-programusbceip","title":"Task Name: Microsoft\\Windows\\Customer Experience Improvement Program\\UsbCeip","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsdiskdiagnosticmicrosoft-windows-diskdiagnosticdatacollector","title":"Task Name: Microsoft\\Windows\\DiskDiagnostic\\Microsoft-Windows-DiskDiagnosticDataCollector","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsfeedbacksiufdmclient","title":"Task Name: Microsoft\\Windows\\Feedback\\Siuf\\DmClient","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsfeedbacksiufdmclientonscenariodownload","title":"Task Name: Microsoft\\Windows\\Feedback\\Siuf\\DmClientOnScenarioDownload","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowswindows-error-reportingqueuereporting","title":"Task Name: Microsoft\\Windows\\Windows Error Reporting\\QueueReporting","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsapplication-experiencemarebackup","title":"Task Name: Microsoft\\Windows\\Application Experience\\MareBackup","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsapplication-experiencestartupapptask","title":"Task Name: Microsoft\\Windows\\Application Experience\\StartupAppTask","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsapplication-experiencepcapatchdbtask","title":"Task Name: Microsoft\\Windows\\Application Experience\\PcaPatchDbTask","text":"<p>State: Disabled</p> <p>Original State: Enabled</p>"},{"location":"dev/tweaks/Essential-Tweaks/Tele/#task-name-microsoftwindowsmapsmapsupdatetask","title":"Task Name: Microsoft\\Windows\\Maps\\MapsUpdateTask","text":"<p>State: Disabled</p> <p>Original State: Enabled</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Essential-Tweaks/Wifi/","title":"Disable Wifi-Sense","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Wifi/#description","title":"Description","text":"<p>Wifi Sense is a spying service that phones home all nearby scanned wifi networks and your current geo location.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Wifi-Sense\",\n  \"Description\": \"Wifi Sense is a spying service that phones home all nearby scanned wifi networks and your current geo location.\",\n  \"category\": \"Essential Tweaks\",\n  \"panel\": \"1\",\n  \"Order\": \"a005_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\Software\\\\Microsoft\\\\PolicyManager\\\\default\\\\WiFi\\\\AllowWiFiHotSpotReporting\",\n      \"Name\": \"Value\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    },\n    {\n      \"Path\": \"HKLM:\\\\Software\\\\Microsoft\\\\PolicyManager\\\\default\\\\WiFi\\\\AllowAutoConnectToWiFiSenseHotspots\",\n      \"Name\": \"Value\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Essential-Tweaks/Wifi\"\n}\n</code></pre>"},{"location":"dev/tweaks/Essential-Tweaks/Wifi/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/Essential-Tweaks/Wifi/#registry-key-value","title":"Registry Key: Value","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/Essential-Tweaks/Wifi/#registry-key-value_1","title":"Registry Key: Value","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/Performance-Plans/AddUltPerf/","title":"Add and Activate Ultimate Performance Profile","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Add and Activate Ultimate Performance Profile\",\n  \"category\": \"Performance Plans\",\n  \"panel\": \"2\",\n  \"Order\": \"a080_\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Performance-Plans/AddUltPerf\"\n}\n</code></pre>"},{"location":"dev/tweaks/Performance-Plans/AddUltPerf/#function-invoke-wpfultimateperformance","title":"Function: Invoke-WPFUltimatePerformance","text":"<pre><code>Function Invoke-WPFUltimatePerformance {\n    &lt;#\n\n    .SYNOPSIS\n        Creates or removes the Ultimate Performance power scheme\n\n    .PARAMETER State\n        Indicates whether to enable or disable the Ultimate Performance power scheme\n\n    #&gt;\n    param($State)\n    try {\n        # Check if Ultimate Performance plan is installed\n        $ultimatePlan = powercfg -list | Select-String -Pattern \"Ultimate Performance\"\n        if($state -eq \"Enable\") {\n            if ($ultimatePlan) {\n                Write-Host \"Ultimate Performance plan is already installed.\"\n            } else {\n                Write-Host \"Installing Ultimate Performance plan...\"\n                powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61\n                Write-Host \"&gt; Ultimate Performance plan installed.\"\n            }\n\n            # Set the Ultimate Performance plan as active\n            $ultimatePlanGUID = (powercfg -list | Select-String -Pattern \"Ultimate Performance\").Line.Split()[3]\n            powercfg -setactive $ultimatePlanGUID\n\n            Write-Host \"Ultimate Performance plan is now active.\"\n\n\n        }\n        elseif($state -eq \"Disable\") {\n            if ($ultimatePlan) {\n                # Extract the GUID of the Ultimate Performance plan\n                $ultimatePlanGUID = $ultimatePlan.Line.Split()[3]\n\n                # Set a different power plan as active before deleting the Ultimate Performance plan\n                $balancedPlanGUID = (powercfg -list | Select-String -Pattern \"Balanced\").Line.Split()[3]\n                powercfg -setactive $balancedPlanGUID\n\n                # Delete the Ultimate Performance plan\n                powercfg -delete $ultimatePlanGUID\n\n                Write-Host \"Ultimate Performance plan has been uninstalled.\"\n                Write-Host \"&gt; Balanced plan is now active.\"\n            } else {\n                Write-Host \"Ultimate Performance plan is not installed.\"\n            }\n        }\n    } catch {\n        Write-Warning $psitem.Exception.Message\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/Performance-Plans/RemoveUltPerf/","title":"Remove Ultimate Performance Profile","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Remove Ultimate Performance Profile\",\n  \"category\": \"Performance Plans\",\n  \"panel\": \"2\",\n  \"Order\": \"a081_\",\n  \"Type\": \"Button\",\n  \"ButtonWidth\": \"300\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/Performance-Plans/RemoveUltPerf\"\n}\n</code></pre>"},{"location":"dev/tweaks/Performance-Plans/RemoveUltPerf/#function-invoke-wpfultimateperformance","title":"Function: Invoke-WPFUltimatePerformance","text":"<pre><code>Function Invoke-WPFUltimatePerformance {\n    &lt;#\n\n    .SYNOPSIS\n        Creates or removes the Ultimate Performance power scheme\n\n    .PARAMETER State\n        Indicates whether to enable or disable the Ultimate Performance power scheme\n\n    #&gt;\n    param($State)\n    try {\n        # Check if Ultimate Performance plan is installed\n        $ultimatePlan = powercfg -list | Select-String -Pattern \"Ultimate Performance\"\n        if($state -eq \"Enable\") {\n            if ($ultimatePlan) {\n                Write-Host \"Ultimate Performance plan is already installed.\"\n            } else {\n                Write-Host \"Installing Ultimate Performance plan...\"\n                powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61\n                Write-Host \"&gt; Ultimate Performance plan installed.\"\n            }\n\n            # Set the Ultimate Performance plan as active\n            $ultimatePlanGUID = (powercfg -list | Select-String -Pattern \"Ultimate Performance\").Line.Split()[3]\n            powercfg -setactive $ultimatePlanGUID\n\n            Write-Host \"Ultimate Performance plan is now active.\"\n\n\n        }\n        elseif($state -eq \"Disable\") {\n            if ($ultimatePlan) {\n                # Extract the GUID of the Ultimate Performance plan\n                $ultimatePlanGUID = $ultimatePlan.Line.Split()[3]\n\n                # Set a different power plan as active before deleting the Ultimate Performance plan\n                $balancedPlanGUID = (powercfg -list | Select-String -Pattern \"Balanced\").Line.Split()[3]\n                powercfg -setactive $balancedPlanGUID\n\n                # Delete the Ultimate Performance plan\n                powercfg -delete $ultimatePlanGUID\n\n                Write-Host \"Ultimate Performance plan has been uninstalled.\"\n                Write-Host \"&gt; Balanced plan is now active.\"\n            } else {\n                Write-Host \"Ultimate Performance plan is not installed.\"\n            }\n        }\n    } catch {\n        Write-Warning $psitem.Exception.Message\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/BlockAdobeNet/","title":"Adobe Network Block","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/BlockAdobeNet/#description","title":"Description","text":"<p>Reduce user interruptions by selectively blocking connections to Adobe's activation and telemetry servers. Credit: Ruddernation-Designs</p> Preview Code <pre><code>{\n  \"Content\": \"Adobe Network Block\",\n  \"Description\": \"Reduce user interruptions by selectively blocking connections to Adobe's activation and telemetry servers. Credit: Ruddernation-Designs\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a021_\",\n  \"InvokeScript\": [\n    \"\n      # Define the URL of the remote HOSTS file and the local paths\n      $remoteHostsUrl = \\\"https://raw.githubusercontent.com/Ruddernation-Designs/Adobe-URL-Block-List/master/hosts\\\"\n      $localHostsPath = \\\"C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\\\"\n      $tempHostsPath = \\\"C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\temp_hosts\\\"\n\n      # Download the remote HOSTS file to a temporary location\n      try {\n          Invoke-WebRequest -Uri $remoteHostsUrl -OutFile $tempHostsPath\n          Write-Output \\\"Downloaded the remote HOSTS file to a temporary location.\\\"\n      } catch {\n          Write-Error \\\"Failed to download the HOSTS file. Error: $_\\\"\n      }\n\n      # Check if the AdobeNetBlock has already been started\n      try {\n          $localHostsContent = Get-Content $localHostsPath -ErrorAction Stop\n\n          # Check if AdobeNetBlock markers exist\n          $blockStartExists = $localHostsContent -like \\\"*#AdobeNetBlock-start*\\\"\n          if ($blockStartExists) {\n              Write-Output \\\"AdobeNetBlock-start already exists. Skipping addition of new block.\\\"\n          } else {\n              # Load the new block from the downloaded file\n              $newBlockContent = Get-Content $tempHostsPath -ErrorAction Stop\n              $newBlockContent = $newBlockContent | Where-Object { $_ -notmatch \\\"^\\\\s*#\\\" -and $_ -ne \\\"\\\" } # Exclude empty lines and comments\n              $newBlockHeader = \\\"#AdobeNetBlock-start\\\"\n              $newBlockFooter = \\\"#AdobeNetBlock-end\\\"\n\n              # Combine the contents, ensuring new block is properly formatted\n              $combinedContent = $localHostsContent + $newBlockHeader, $newBlockContent, $newBlockFooter | Out-String\n\n              # Write the combined content back to the original HOSTS file\n              $combinedContent | Set-Content $localHostsPath -Encoding ASCII\n              Write-Output \\\"Successfully added the AdobeNetBlock.\\\"\n          }\n      } catch {\n          Write-Error \\\"Error during processing: $_\\\"\n      }\n\n      # Clean up temporary file\n      Remove-Item $tempHostsPath -ErrorAction Ignore\n\n      # Flush the DNS resolver cache\n      try {\n          Invoke-Expression \\\"ipconfig /flushdns\\\"\n          Write-Output \\\"DNS cache flushed successfully.\\\"\n      } catch {\n          Write-Error \\\"Failed to flush DNS cache. Error: $_\\\"\n      }\n      \"\n  ],\n  \"UndoScript\": [\n    \"\n      # Define the local path of the HOSTS file\n      $localHostsPath = \\\"C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\\\"\n\n      # Load the content of the HOSTS file\n      try {\n          $hostsContent = Get-Content $localHostsPath -ErrorAction Stop\n      } catch {\n          Write-Error \\\"Failed to load the HOSTS file. Error: $_\\\"\n          return\n      }\n\n      # Initialize flags and buffer for new content\n      $recording = $true\n      $newContent = @()\n\n      # Iterate over each line of the HOSTS file\n      foreach ($line in $hostsContent) {\n          if ($line -match \\\"#AdobeNetBlock-start\\\") {\n              $recording = $false\n          }\n          if ($recording) {\n              $newContent += $line\n          }\n          if ($line -match \\\"#AdobeNetBlock-end\\\") {\n              $recording = $true\n          }\n      }\n\n      # Write the filtered content back to the HOSTS file\n      try {\n          $newContent | Set-Content $localHostsPath -Encoding ASCII\n          Write-Output \\\"Successfully removed the AdobeNetBlock section from the HOSTS file.\\\"\n      } catch {\n          Write-Error \\\"Failed to write back to the HOSTS file. Error: $_\\\"\n      }\n\n      # Flush the DNS resolver cache\n      try {\n          Invoke-Expression \\\"ipconfig /flushdns\\\"\n          Write-Output \\\"DNS cache flushed successfully.\\\"\n      } catch {\n          Write-Error \\\"Failed to flush DNS cache. Error: $_\\\"\n      }\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/BlockAdobeNet\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/BlockAdobeNet/#invoke-script","title":"Invoke Script","text":"<pre><code>      # Define the URL of the remote HOSTS file and the local paths\n      $remoteHostsUrl = \"https://raw.githubusercontent.com/Ruddernation-Designs/Adobe-URL-Block-List/master/hosts\"\n      $localHostsPath = \"C:\\Windows\\System32\\drivers\\etc\\hosts\"\n      $tempHostsPath = \"C:\\Windows\\System32\\drivers\\etc\\temp_hosts\"\n\n      # Download the remote HOSTS file to a temporary location\n      try {\n          Invoke-WebRequest -Uri $remoteHostsUrl -OutFile $tempHostsPath\n          Write-Output \"Downloaded the remote HOSTS file to a temporary location.\"\n      } catch {\n          Write-Error \"Failed to download the HOSTS file. Error: $_\"\n      }\n\n      # Check if the AdobeNetBlock has already been started\n      try {\n          $localHostsContent = Get-Content $localHostsPath -ErrorAction Stop\n\n          # Check if AdobeNetBlock markers exist\n          $blockStartExists = $localHostsContent -like \"*#AdobeNetBlock-start*\"\n          if ($blockStartExists) {\n              Write-Output \"AdobeNetBlock-start already exists. Skipping addition of new block.\"\n          } else {\n              # Load the new block from the downloaded file\n              $newBlockContent = Get-Content $tempHostsPath -ErrorAction Stop\n              $newBlockContent = $newBlockContent | Where-Object { $_ -notmatch \"^\\s*#\" -and $_ -ne \"\" } # Exclude empty lines and comments\n              $newBlockHeader = \"#AdobeNetBlock-start\"\n              $newBlockFooter = \"#AdobeNetBlock-end\"\n\n              # Combine the contents, ensuring new block is properly formatted\n              $combinedContent = $localHostsContent + $newBlockHeader, $newBlockContent, $newBlockFooter | Out-String\n\n              # Write the combined content back to the original HOSTS file\n              $combinedContent | Set-Content $localHostsPath -Encoding ASCII\n              Write-Output \"Successfully added the AdobeNetBlock.\"\n          }\n      } catch {\n          Write-Error \"Error during processing: $_\"\n      }\n\n      # Clean up temporary file\n      Remove-Item $tempHostsPath -ErrorAction Ignore\n\n      # Flush the DNS resolver cache\n      try {\n          Invoke-Expression \"ipconfig /flushdns\"\n          Write-Output \"DNS cache flushed successfully.\"\n      } catch {\n          Write-Error \"Failed to flush DNS cache. Error: $_\"\n      }\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/BlockAdobeNet/#undo-script","title":"Undo Script","text":"<pre><code>      # Define the local path of the HOSTS file\n      $localHostsPath = \"C:\\Windows\\System32\\drivers\\etc\\hosts\"\n\n      # Load the content of the HOSTS file\n      try {\n          $hostsContent = Get-Content $localHostsPath -ErrorAction Stop\n      } catch {\n          Write-Error \"Failed to load the HOSTS file. Error: $_\"\n          return\n      }\n\n      # Initialize flags and buffer for new content\n      $recording = $true\n      $newContent = @()\n\n      # Iterate over each line of the HOSTS file\n      foreach ($line in $hostsContent) {\n          if ($line -match \"#AdobeNetBlock-start\") {\n              $recording = $false\n          }\n          if ($recording) {\n              $newContent += $line\n          }\n          if ($line -match \"#AdobeNetBlock-end\") {\n              $recording = $true\n          }\n      }\n\n      # Write the filtered content back to the HOSTS file\n      try {\n          $newContent | Set-Content $localHostsPath -Encoding ASCII\n          Write-Output \"Successfully removed the AdobeNetBlock section from the HOSTS file.\"\n      } catch {\n          Write-Error \"Failed to write back to the HOSTS file. Error: $_\"\n      }\n\n      # Flush the DNS resolver cache\n      try {\n          Invoke-Expression \"ipconfig /flushdns\"\n          Write-Output \"DNS cache flushed successfully.\"\n      } catch {\n          Write-Error \"Failed to flush DNS cache. Error: $_\"\n      }\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DeBloat/","title":"Remove ALL MS Store Apps - NOT RECOMMENDED","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DeBloat/#description","title":"Description","text":"<p>USE WITH CAUTION!!!!! This will remove ALL Microsoft store apps other than the essentials to make winget work. Games installed by MS Store ARE INCLUDED!</p> Preview Code <pre><code>{\n  \"Content\": \"Remove ALL MS Store Apps - NOT RECOMMENDED\",\n  \"Description\": \"USE WITH CAUTION!!!!! This will remove ALL Microsoft store apps other than the essentials to make winget work. Games installed by MS Store ARE INCLUDED!\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a028_\",\n  \"appx\": [\n    \"Microsoft.Microsoft3DViewer\",\n    \"Microsoft.AppConnector\",\n    \"Microsoft.BingFinance\",\n    \"Microsoft.BingNews\",\n    \"Microsoft.BingSports\",\n    \"Microsoft.BingTranslator\",\n    \"Microsoft.BingWeather\",\n    \"Microsoft.BingFoodAndDrink\",\n    \"Microsoft.BingHealthAndFitness\",\n    \"Microsoft.BingTravel\",\n    \"Microsoft.MinecraftUWP\",\n    \"Microsoft.GamingServices\",\n    \"Microsoft.GetHelp\",\n    \"Microsoft.Getstarted\",\n    \"Microsoft.Messaging\",\n    \"Microsoft.Microsoft3DViewer\",\n    \"Microsoft.MicrosoftSolitaireCollection\",\n    \"Microsoft.NetworkSpeedTest\",\n    \"Microsoft.News\",\n    \"Microsoft.Office.Lens\",\n    \"Microsoft.Office.Sway\",\n    \"Microsoft.Office.OneNote\",\n    \"Microsoft.OneConnect\",\n    \"Microsoft.People\",\n    \"Microsoft.Print3D\",\n    \"Microsoft.SkypeApp\",\n    \"Microsoft.Wallet\",\n    \"Microsoft.Whiteboard\",\n    \"Microsoft.WindowsAlarms\",\n    \"microsoft.windowscommunicationsapps\",\n    \"Microsoft.WindowsFeedbackHub\",\n    \"Microsoft.WindowsMaps\",\n    \"Microsoft.YourPhone\",\n    \"Microsoft.WindowsSoundRecorder\",\n    \"Microsoft.XboxApp\",\n    \"Microsoft.ConnectivityStore\",\n    \"Microsoft.ScreenSketch\",\n    \"Microsoft.Xbox.TCUI\",\n    \"Microsoft.XboxGameOverlay\",\n    \"Microsoft.XboxGameCallableUI\",\n    \"Microsoft.XboxSpeechToTextOverlay\",\n    \"Microsoft.MixedReality.Portal\",\n    \"Microsoft.XboxIdentityProvider\",\n    \"Microsoft.ZuneMusic\",\n    \"Microsoft.ZuneVideo\",\n    \"Microsoft.Getstarted\",\n    \"Microsoft.MicrosoftOfficeHub\",\n    \"*EclipseManager*\",\n    \"*ActiproSoftwareLLC*\",\n    \"*AdobeSystemsIncorporated.AdobePhotoshopExpress*\",\n    \"*Duolingo-LearnLanguagesforFree*\",\n    \"*PandoraMediaInc*\",\n    \"*CandyCrush*\",\n    \"*BubbleWitch3Saga*\",\n    \"*Wunderlist*\",\n    \"*Flipboard*\",\n    \"*Twitter*\",\n    \"*Facebook*\",\n    \"*Royal Revolt*\",\n    \"*Sway*\",\n    \"*Speed Test*\",\n    \"*Dolby*\",\n    \"*Viber*\",\n    \"*ACGMediaPlayer*\",\n    \"*Netflix*\",\n    \"*OneCalendar*\",\n    \"*LinkedInforWindows*\",\n    \"*HiddenCityMysteryofShadows*\",\n    \"*Hulu*\",\n    \"*HiddenCity*\",\n    \"*AdobePhotoshopExpress*\",\n    \"*HotspotShieldFreeVPN*\",\n    \"*Microsoft.Advertising.Xaml*\"\n  ],\n  \"InvokeScript\": [\n    \"\n        $TeamsPath = [System.IO.Path]::Combine($env:LOCALAPPDATA, 'Microsoft', 'Teams')\n        $TeamsUpdateExePath = [System.IO.Path]::Combine($TeamsPath, 'Update.exe')\n\n        Write-Host \\\"Stopping Teams process...\\\"\n        Stop-Process -Name \\\"*teams*\\\" -Force -ErrorAction SilentlyContinue\n\n        Write-Host \\\"Uninstalling Teams from AppData\\\\Microsoft\\\\Teams\\\"\n        if ([System.IO.File]::Exists($TeamsUpdateExePath)) {\n            # Uninstall app\n            $proc = Start-Process $TeamsUpdateExePath \\\"-uninstall -s\\\" -PassThru\n            $proc.WaitForExit()\n        }\n\n        Write-Host \\\"Removing Teams AppxPackage...\\\"\n        Get-AppxPackage \\\"*Teams*\\\" | Remove-AppxPackage -ErrorAction SilentlyContinue\n        Get-AppxPackage \\\"*Teams*\\\" -AllUsers | Remove-AppxPackage -AllUsers -ErrorAction SilentlyContinue\n\n        Write-Host \\\"Deleting Teams directory\\\"\n        if ([System.IO.Directory]::Exists($TeamsPath)) {\n            Remove-Item $TeamsPath -Force -Recurse -ErrorAction SilentlyContinue\n        }\n\n        Write-Host \\\"Deleting Teams uninstall registry key\\\"\n        # Uninstall from Uninstall registry key UninstallString\n        $us = (Get-ChildItem -Path HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall, HKLM:\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall | Get-ItemProperty | Where-Object { $_.DisplayName -like '*Teams*'}).UninstallString\n        if ($us.Length -gt 0) {\n            $us = ($us.Replace('/I', '/uninstall ') + ' /quiet').Replace('  ', ' ')\n            $FilePath = ($us.Substring(0, $us.IndexOf('.exe') + 4).Trim())\n            $ProcessArgs = ($us.Substring($us.IndexOf('.exe') + 5).Trim().replace('  ', ' '))\n            $proc = Start-Process -FilePath $FilePath -Args $ProcessArgs -PassThru\n            $proc.WaitForExit()\n        }\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/DeBloat\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DeBloat/#invoke-script","title":"Invoke Script","text":"<pre><code>        $TeamsPath = [System.IO.Path]::Combine($env:LOCALAPPDATA, 'Microsoft', 'Teams')\n        $TeamsUpdateExePath = [System.IO.Path]::Combine($TeamsPath, 'Update.exe')\n\n        Write-Host \"Stopping Teams process...\"\n        Stop-Process -Name \"*teams*\" -Force -ErrorAction SilentlyContinue\n\n        Write-Host \"Uninstalling Teams from AppData\\Microsoft\\Teams\"\n        if ([System.IO.File]::Exists($TeamsUpdateExePath)) {\n            # Uninstall app\n            $proc = Start-Process $TeamsUpdateExePath \"-uninstall -s\" -PassThru\n            $proc.WaitForExit()\n        }\n\n        Write-Host \"Removing Teams AppxPackage...\"\n        Get-AppxPackage \"*Teams*\" | Remove-AppxPackage -ErrorAction SilentlyContinue\n        Get-AppxPackage \"*Teams*\" -AllUsers | Remove-AppxPackage -AllUsers -ErrorAction SilentlyContinue\n\n        Write-Host \"Deleting Teams directory\"\n        if ([System.IO.Directory]::Exists($TeamsPath)) {\n            Remove-Item $TeamsPath -Force -Recurse -ErrorAction SilentlyContinue\n        }\n\n        Write-Host \"Deleting Teams uninstall registry key\"\n        # Uninstall from Uninstall registry key UninstallString\n        $us = (Get-ChildItem -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall, HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall | Get-ItemProperty | Where-Object { $_.DisplayName -like '*Teams*'}).UninstallString\n        if ($us.Length -gt 0) {\n            $us = ($us.Replace('/I', '/uninstall ') + ' /quiet').Replace('  ', ' ')\n            $FilePath = ($us.Substring(0, $us.IndexOf('.exe') + 4).Trim())\n            $ProcessArgs = ($us.Substring($us.IndexOf('.exe') + 5).Trim().replace('  ', ' '))\n            $proc = Start-Process -FilePath $FilePath -Args $ProcessArgs -PassThru\n            $proc.WaitForExit()\n        }\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/","title":"Adobe Debloat","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#description","title":"Description","text":"<p>Manages Adobe Services, Adobe Desktop Service, and Acrobat Updates</p> Preview Code <pre><code>{\n  \"Content\": \"Adobe Debloat\",\n  \"Description\": \"Manages Adobe Services, Adobe Desktop Service, and Acrobat Updates\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a021_\",\n  \"InvokeScript\": [\n    \"\n      function CCStopper {\n        $path = \\\"C:\\\\Program Files (x86)\\\\Common Files\\\\Adobe\\\\Adobe Desktop Common\\\\ADS\\\\Adobe Desktop Service.exe\\\"\n\n        # Test if the path exists before proceeding\n        if (Test-Path $path) {\n            Takeown /f $path\n            $acl = Get-Acl $path\n            $acl.SetOwner([System.Security.Principal.NTAccount]\\\"Administrators\\\")\n            $acl | Set-Acl $path\n\n            Rename-Item -Path $path -NewName \\\"Adobe Desktop Service.exe.old\\\" -Force\n        } else {\n            Write-Host \\\"Adobe Desktop Service is not in the default location.\\\"\n        }\n      }\n\n\n      function AcrobatUpdates {\n        # Editing Acrobat Updates. The last folder before the key is dynamic, therefore using a script.\n        # Possible Values for the edited key:\n        # 0 = Do not download or install updates automatically\n        # 2 = Automatically download updates but let the user choose when to install them\n        # 3 = Automatically download and install updates (default value)\n        # 4 = Notify the user when an update is available but don't download or install it automatically\n        #   = It notifies the user using Windows Notifications. It runs on startup without having to have a Service/Acrobat/Reader running, therefore 0 is the next best thing.\n\n        $rootPath = \\\"HKLM:\\\\SOFTWARE\\\\WOW6432Node\\\\Adobe\\\\Adobe ARM\\\\Legacy\\\\Acrobat\\\"\n\n        # Get all subkeys under the specified root path\n        $subKeys = Get-ChildItem -Path $rootPath | Where-Object { $_.PSChildName -like \\\"{*}\\\" }\n\n        # Loop through each subkey\n        foreach ($subKey in $subKeys) {\n            # Get the full registry path\n            $fullPath = Join-Path -Path $rootPath -ChildPath $subKey.PSChildName\n            try {\n                Set-ItemProperty -Path $fullPath -Name Mode -Value 0\n                Write-Host \\\"Acrobat Updates have been disabled.\\\"\n            } catch {\n                Write-Host \\\"Registry Key for changing Acrobat Updates does not exist in $fullPath\\\"\n            }\n        }\n      }\n\n      CCStopper\n      AcrobatUpdates\n      \"\n  ],\n  \"UndoScript\": [\n    \"\n      function RestoreCCService {\n        $originalPath = \\\"C:\\\\Program Files (x86)\\\\Common Files\\\\Adobe\\\\Adobe Desktop Common\\\\ADS\\\\Adobe Desktop Service.exe.old\\\"\n        $newPath = \\\"C:\\\\Program Files (x86)\\\\Common Files\\\\Adobe\\\\Adobe Desktop Common\\\\ADS\\\\Adobe Desktop Service.exe\\\"\n\n        if (Test-Path -Path $originalPath) {\n            Rename-Item -Path $originalPath -NewName \\\"Adobe Desktop Service.exe\\\" -Force\n            Write-Host \\\"Adobe Desktop Service has been restored.\\\"\n        } else {\n            Write-Host \\\"Backup file does not exist. No changes were made.\\\"\n        }\n      }\n\n      function AcrobatUpdates {\n        # Default Value:\n        # 3 = Automatically download and install updates\n\n        $rootPath = \\\"HKLM:\\\\SOFTWARE\\\\WOW6432Node\\\\Adobe\\\\Adobe ARM\\\\Legacy\\\\Acrobat\\\"\n\n        # Get all subkeys under the specified root path\n        $subKeys = Get-ChildItem -Path $rootPath | Where-Object { $_.PSChildName -like \\\"{*}\\\" }\n\n        # Loop through each subkey\n        foreach ($subKey in $subKeys) {\n            # Get the full registry path\n            $fullPath = Join-Path -Path $rootPath -ChildPath $subKey.PSChildName\n            try {\n                Set-ItemProperty -Path $fullPath -Name Mode -Value 3\n            } catch {\n                Write-Host \\\"Registry Key for changing Acrobat Updates does not exist in $fullPath\\\"\n            }\n        }\n      }\n\n      RestoreCCService\n      AcrobatUpdates\n      \"\n  ],\n  \"service\": [\n    {\n      \"Name\": \"AGSService\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"AGMService\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"AdobeUpdateService\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"Adobe Acrobat Update\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"Adobe Genuine Monitor Service\",\n      \"StartupType\": \"Disabled\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"AdobeARMservice\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"Adobe Licensing Console\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"CCXProcess\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"AdobeIPCBroker\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    },\n    {\n      \"Name\": \"CoreSync\",\n      \"StartupType\": \"Manual\",\n      \"OriginalType\": \"Automatic\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#invoke-script","title":"Invoke Script","text":"<pre><code>      function CCStopper {\n        $path = \"C:\\Program Files (x86)\\Common Files\\Adobe\\Adobe Desktop Common\\ADS\\Adobe Desktop Service.exe\"\n\n        # Test if the path exists before proceeding\n        if (Test-Path $path) {\n            Takeown /f $path\n            $acl = Get-Acl $path\n            $acl.SetOwner([System.Security.Principal.NTAccount]\"Administrators\")\n            $acl | Set-Acl $path\n\n            Rename-Item -Path $path -NewName \"Adobe Desktop Service.exe.old\" -Force\n        } else {\n            Write-Host \"Adobe Desktop Service is not in the default location.\"\n        }\n      }\n\n\n      function AcrobatUpdates {\n        # Editing Acrobat Updates. The last folder before the key is dynamic, therefore using a script.\n        # Possible Values for the edited key:\n        # 0 = Do not download or install updates automatically\n        # 2 = Automatically download updates but let the user choose when to install them\n        # 3 = Automatically download and install updates (default value)\n        # 4 = Notify the user when an update is available but don't download or install it automatically\n        #   = It notifies the user using Windows Notifications. It runs on startup without having to have a Service/Acrobat/Reader running, therefore 0 is the next best thing.\n\n        $rootPath = \"HKLM:\\SOFTWARE\\WOW6432Node\\Adobe\\Adobe ARM\\Legacy\\Acrobat\"\n\n        # Get all subkeys under the specified root path\n        $subKeys = Get-ChildItem -Path $rootPath | Where-Object { $_.PSChildName -like \"{*}\" }\n\n        # Loop through each subkey\n        foreach ($subKey in $subKeys) {\n            # Get the full registry path\n            $fullPath = Join-Path -Path $rootPath -ChildPath $subKey.PSChildName\n            try {\n                Set-ItemProperty -Path $fullPath -Name Mode -Value 0\n                Write-Host \"Acrobat Updates have been disabled.\"\n            } catch {\n                Write-Host \"Registry Key for changing Acrobat Updates does not exist in $fullPath\"\n            }\n        }\n      }\n\n      CCStopper\n      AcrobatUpdates\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#undo-script","title":"Undo Script","text":"<pre><code>      function RestoreCCService {\n        $originalPath = \"C:\\Program Files (x86)\\Common Files\\Adobe\\Adobe Desktop Common\\ADS\\Adobe Desktop Service.exe.old\"\n        $newPath = \"C:\\Program Files (x86)\\Common Files\\Adobe\\Adobe Desktop Common\\ADS\\Adobe Desktop Service.exe\"\n\n        if (Test-Path -Path $originalPath) {\n            Rename-Item -Path $originalPath -NewName \"Adobe Desktop Service.exe\" -Force\n            Write-Host \"Adobe Desktop Service has been restored.\"\n        } else {\n            Write-Host \"Backup file does not exist. No changes were made.\"\n        }\n      }\n\n      function AcrobatUpdates {\n        # Default Value:\n        # 3 = Automatically download and install updates\n\n        $rootPath = \"HKLM:\\SOFTWARE\\WOW6432Node\\Adobe\\Adobe ARM\\Legacy\\Acrobat\"\n\n        # Get all subkeys under the specified root path\n        $subKeys = Get-ChildItem -Path $rootPath | Where-Object { $_.PSChildName -like \"{*}\" }\n\n        # Loop through each subkey\n        foreach ($subKey in $subKeys) {\n            # Get the full registry path\n            $fullPath = Join-Path -Path $rootPath -ChildPath $subKey.PSChildName\n            try {\n                Set-ItemProperty -Path $fullPath -Name Mode -Value 3\n            } catch {\n                Write-Host \"Registry Key for changing Acrobat Updates does not exist in $fullPath\"\n            }\n        }\n      }\n\n      RestoreCCService\n      AcrobatUpdates\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-changes","title":"Service Changes","text":"<p>Windows services are background processes for system functions or applications. Setting some to manual optimizes performance by starting them only when needed.</p> <p>You can find information about services on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-agsservice","title":"Service Name: AGSService","text":"<p>Startup Type: Disabled</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-agmservice","title":"Service Name: AGMService","text":"<p>Startup Type: Disabled</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-adobeupdateservice","title":"Service Name: AdobeUpdateService","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-adobe-acrobat-update","title":"Service Name: Adobe Acrobat Update","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-adobe-genuine-monitor-service","title":"Service Name: Adobe Genuine Monitor Service","text":"<p>Startup Type: Disabled</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-adobearmservice","title":"Service Name: AdobeARMservice","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-adobe-licensing-console","title":"Service Name: Adobe Licensing Console","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-ccxprocess","title":"Service Name: CCXProcess","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-adobeipcbroker","title":"Service Name: AdobeIPCBroker","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DebloatAdobe/#service-name-coresync","title":"Service Name: CoreSync","text":"<p>Startup Type: Manual</p> <p>Original Type: Automatic</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableBGapps/","title":"Disable Background Apps","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableBGapps/#description","title":"Description","text":"<p>Disables all Microsoft Store apps from running in the background, which has to be done individually since Win11</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Background Apps\",\n  \"Description\": \"Disables all Microsoft Store apps from running in the background, which has to be done individually since Win11\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a024_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\BackgroundAccessApplications\",\n      \"Name\": \"GlobalUserDisabled\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableBGapps\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableBGapps/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableBGapps/#registry-key-globaluserdisabled","title":"Registry Key: GlobalUserDisabled","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableFSO/","title":"Disable Fullscreen Optimizations","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableFSO/#description","title":"Description","text":"<p>Disables FSO in all applications. NOTE: This will disable Color Management in Exclusive Fullscreen</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Fullscreen Optimizations\",\n  \"Description\": \"Disables FSO in all applications. NOTE: This will disable Color Management in Exclusive Fullscreen\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a024_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKCU:\\\\System\\\\GameConfigStore\",\n      \"Name\": \"GameDVR_DXGIHonorFSEWindowsCompatible\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableFSO\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableFSO/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableFSO/#registry-key-gamedvr_dxgihonorfsewindowscompatible","title":"Registry Key: GameDVR_DXGIHonorFSEWindowsCompatible","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableLMS1/","title":"Disable Intel MM (vPro LMS)","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableLMS1/#description","title":"Description","text":"<p>Intel LMS service is always listening on all ports and could be a huge security risk. There is no need to run LMS on home machines and even in the Enterprise there are better solutions.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Intel MM (vPro LMS)\",\n  \"Description\": \"Intel LMS service is always listening on all ports and could be a huge security risk. There is no need to run LMS on home machines and even in the Enterprise there are better solutions.\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a026_\",\n  \"InvokeScript\": [\n    \"\n        Write-Host \\\"Kill LMS\\\"\n        $serviceName = \\\"LMS\\\"\n        Write-Host \\\"Stopping and disabling service: $serviceName\\\"\n        Stop-Service -Name $serviceName -Force -ErrorAction SilentlyContinue;\n        Set-Service -Name $serviceName -StartupType Disabled -ErrorAction SilentlyContinue;\n\n        Write-Host \\\"Removing service: $serviceName\\\";\n        sc.exe delete $serviceName;\n\n        Write-Host \\\"Removing LMS driver packages\\\";\n        $lmsDriverPackages = Get-ChildItem -Path \\\"C:\\\\Windows\\\\System32\\\\DriverStore\\\\FileRepository\\\" -Recurse -Filter \\\"lms.inf*\\\";\n        foreach ($package in $lmsDriverPackages) {\n            Write-Host \\\"Removing driver package: $($package.Name)\\\";\n            pnputil /delete-driver $($package.Name) /uninstall /force;\n        }\n        if ($lmsDriverPackages.Count -eq 0) {\n            Write-Host \\\"No LMS driver packages found in the driver store.\\\";\n        } else {\n            Write-Host \\\"All found LMS driver packages have been removed.\\\";\n        }\n\n        Write-Host \\\"Searching and deleting LMS executable files\\\";\n        $programFilesDirs = @(\\\"C:\\\\Program Files\\\", \\\"C:\\\\Program Files (x86)\\\");\n        $lmsFiles = @();\n        foreach ($dir in $programFilesDirs) {\n            $lmsFiles += Get-ChildItem -Path $dir -Recurse -Filter \\\"LMS.exe\\\" -ErrorAction SilentlyContinue;\n        }\n        foreach ($file in $lmsFiles) {\n            Write-Host \\\"Taking ownership of file: $($file.FullName)\\\";\n            &amp; icacls $($file.FullName) /grant Administrators:F /T /C /Q;\n            &amp; takeown /F $($file.FullName) /A /R /D Y;\n            Write-Host \\\"Deleting file: $($file.FullName)\\\";\n            Remove-Item $($file.FullName) -Force -ErrorAction SilentlyContinue;\n        }\n        if ($lmsFiles.Count -eq 0) {\n            Write-Host \\\"No LMS.exe files found in Program Files directories.\\\";\n        } else {\n            Write-Host \\\"All found LMS.exe files have been deleted.\\\";\n        }\n        Write-Host 'Intel LMS vPro service has been disabled, removed, and blocked.';\n       \"\n  ],\n  \"UndoScript\": [\n    \"\n      Write-Host \\\"LMS vPro needs to be redownloaded from intel.com\\\"\n\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableLMS1\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableLMS1/#invoke-script","title":"Invoke Script","text":"<pre><code>        Write-Host \"Kill LMS\"\n        $serviceName = \"LMS\"\n        Write-Host \"Stopping and disabling service: $serviceName\"\n        Stop-Service -Name $serviceName -Force -ErrorAction SilentlyContinue;\n        Set-Service -Name $serviceName -StartupType Disabled -ErrorAction SilentlyContinue;\n\n        Write-Host \"Removing service: $serviceName\";\n        sc.exe delete $serviceName;\n\n        Write-Host \"Removing LMS driver packages\";\n        $lmsDriverPackages = Get-ChildItem -Path \"C:\\Windows\\System32\\DriverStore\\FileRepository\" -Recurse -Filter \"lms.inf*\";\n        foreach ($package in $lmsDriverPackages) {\n            Write-Host \"Removing driver package: $($package.Name)\";\n            pnputil /delete-driver $($package.Name) /uninstall /force;\n        }\n        if ($lmsDriverPackages.Count -eq 0) {\n            Write-Host \"No LMS driver packages found in the driver store.\";\n        } else {\n            Write-Host \"All found LMS driver packages have been removed.\";\n        }\n\n        Write-Host \"Searching and deleting LMS executable files\";\n        $programFilesDirs = @(\"C:\\Program Files\", \"C:\\Program Files (x86)\");\n        $lmsFiles = @();\n        foreach ($dir in $programFilesDirs) {\n            $lmsFiles += Get-ChildItem -Path $dir -Recurse -Filter \"LMS.exe\" -ErrorAction SilentlyContinue;\n        }\n        foreach ($file in $lmsFiles) {\n            Write-Host \"Taking ownership of file: $($file.FullName)\";\n            &amp; icacls $($file.FullName) /grant Administrators:F /T /C /Q;\n            &amp; takeown /F $($file.FullName) /A /R /D Y;\n            Write-Host \"Deleting file: $($file.FullName)\";\n            Remove-Item $($file.FullName) -Force -ErrorAction SilentlyContinue;\n        }\n        if ($lmsFiles.Count -eq 0) {\n            Write-Host \"No LMS.exe files found in Program Files directories.\";\n        } else {\n            Write-Host \"All found LMS.exe files have been deleted.\";\n        }\n        Write-Host 'Intel LMS vPro service has been disabled, removed, and blocked.';\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableLMS1/#undo-script","title":"Undo Script","text":"<pre><code>      Write-Host \"LMS vPro needs to be redownloaded from intel.com\"\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableNotifications/","title":"Disable Notification Tray/Calendar","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableNotifications/#description","title":"Description","text":"<p>Disables all Notifications INCLUDING Calendar</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Notification Tray/Calendar\",\n  \"Description\": \"Disables all Notifications INCLUDING Calendar\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a026_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Policies\\\\Microsoft\\\\Windows\\\\Explorer\",\n      \"Name\": \"DisableNotificationCenter\",\n      \"Type\": \"DWord\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\PushNotifications\",\n      \"Name\": \"ToastEnabled\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableNotifications\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableNotifications/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableNotifications/#registry-key-disablenotificationcenter","title":"Registry Key: DisableNotificationCenter","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/DisableNotifications/#registry-key-toastenabled","title":"Registry Key: ToastEnabled","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Disableipsix/","title":"Disable IPv6","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Disableipsix/#description","title":"Description","text":"<p>Disables IPv6.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable IPv6\",\n  \"Description\": \"Disables IPv6.\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a023_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip6\\\\Parameters\",\n      \"Name\": \"DisabledComponents\",\n      \"Value\": \"255\",\n      \"OriginalValue\": \"0\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"InvokeScript\": [\n    \"Disable-NetAdapterBinding -Name \\\"*\\\" -ComponentID ms_tcpip6\"\n  ],\n  \"UndoScript\": [\n    \"Enable-NetAdapterBinding -Name \\\"*\\\" -ComponentID ms_tcpip6\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/Disableipsix\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Disableipsix/#invoke-script","title":"Invoke Script","text":"<pre><code>Disable-NetAdapterBinding -Name \"*\" -ComponentID ms_tcpip6\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Disableipsix/#undo-script","title":"Undo Script","text":"<pre><code>Enable-NetAdapterBinding -Name \"*\" -ComponentID ms_tcpip6\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Disableipsix/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Disableipsix/#registry-key-disabledcomponents","title":"Registry Key: DisabledComponents","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 255</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/","title":"Set Display for Performance","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#description","title":"Description","text":"<p>Sets the system preferences to performance. You can do this manually with sysdm.cpl as well.</p> Preview Code <pre><code>{\n  \"Content\": \"Set Display for Performance\",\n  \"Description\": \"Sets the system preferences to performance. You can do this manually with sysdm.cpl as well.\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a027_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKCU:\\\\Control Panel\\\\Desktop\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"DragFullWindows\",\n      \"Value\": \"0\",\n      \"Type\": \"String\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Control Panel\\\\Desktop\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"MenuShowDelay\",\n      \"Value\": \"200\",\n      \"Type\": \"String\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Control Panel\\\\Desktop\\\\WindowMetrics\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"MinAnimate\",\n      \"Value\": \"0\",\n      \"Type\": \"String\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Control Panel\\\\Keyboard\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"KeyboardDelay\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"ListviewAlphaSelect\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"ListviewShadow\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"TaskbarAnimations\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\VisualEffects\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"VisualFXSetting\",\n      \"Value\": \"3\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\DWM\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"EnableAeroPeek\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"TaskbarMn\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"TaskbarDa\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"ShowTaskViewButton\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Search\",\n      \"OriginalValue\": \"1\",\n      \"Name\": \"SearchboxTaskbarMode\",\n      \"Value\": \"0\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"InvokeScript\": [\n    \"Set-ItemProperty -Path \\\"HKCU:\\\\Control Panel\\\\Desktop\\\" -Name \\\"UserPreferencesMask\\\" -Type Binary -Value ([byte[]](144,18,3,128,16,0,0,0))\"\n  ],\n  \"UndoScript\": [\n    \"Remove-ItemProperty -Path \\\"HKCU:\\\\Control Panel\\\\Desktop\\\" -Name \\\"UserPreferencesMask\\\"\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/Display\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#invoke-script","title":"Invoke Script","text":"<pre><code>Set-ItemProperty -Path \"HKCU:\\Control Panel\\Desktop\" -Name \"UserPreferencesMask\" -Type Binary -Value ([byte[]](144,18,3,128,16,0,0,0))\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#undo-script","title":"Undo Script","text":"<pre><code>Remove-ItemProperty -Path \"HKCU:\\Control Panel\\Desktop\" -Name \"UserPreferencesMask\"\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-dragfullwindows","title":"Registry Key: DragFullWindows","text":"<p>Type: String</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-menushowdelay","title":"Registry Key: MenuShowDelay","text":"<p>Type: String</p> <p>Original Value: 1</p> <p>New Value: 200</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-minanimate","title":"Registry Key: MinAnimate","text":"<p>Type: String</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-keyboarddelay","title":"Registry Key: KeyboardDelay","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-listviewalphaselect","title":"Registry Key: ListviewAlphaSelect","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-listviewshadow","title":"Registry Key: ListviewShadow","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-taskbaranimations","title":"Registry Key: TaskbarAnimations","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-visualfxsetting","title":"Registry Key: VisualFXSetting","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 3</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-enableaeropeek","title":"Registry Key: EnableAeroPeek","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-taskbarmn","title":"Registry Key: TaskbarMn","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-taskbarda","title":"Registry Key: TaskbarDa","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-showtaskviewbutton","title":"Registry Key: ShowTaskViewButton","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Display/#registry-key-searchboxtaskbarmode","title":"Registry Key: SearchboxTaskbarMode","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/OOSUbutton/","title":"Run OO Shutup 10","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Run OO Shutup 10\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a039_\",\n  \"Type\": \"Button\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/OOSUbutton\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/OOSUbutton/#function-invoke-wpfoosu","title":"Function: Invoke-WPFOOSU","text":"<pre><code>function Invoke-WPFOOSU {\n    &lt;#\n    .SYNOPSIS\n        Downloads and runs OO Shutup 10\n    #&gt;\n    try {\n        $OOSU_filepath = \"$ENV:temp\\OOSU10.exe\"\n        $Initial_ProgressPreference = $ProgressPreference\n        $ProgressPreference = \"SilentlyContinue\" # Disables the Progress Bar to drasticly speed up Invoke-WebRequest\n        Invoke-WebRequest -Uri \"https://dl5.oo-software.com/files/ooshutup10/OOSU10.exe\" -OutFile $OOSU_filepath\n        Write-Host \"Starting OO Shutup 10 ...\"\n        Start-Process $OOSU_filepath\n    } catch {\n        Write-Host \"Error Downloading and Running OO Shutup 10\" -ForegroundColor Red\n    }\n    finally {\n        $ProgressPreference = $Initial_ProgressPreference\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot/","title":"Disable Microsoft Copilot","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot/#description","title":"Description","text":"<p>Disables MS Copilot AI built into Windows since 23H2.</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Microsoft Copilot\",\n  \"Description\": \"Disables MS Copilot AI built into Windows since 23H2.\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a025_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\WindowsCopilot\",\n      \"Name\": \"TurnOffWindowsCopilot\",\n      \"Type\": \"DWord\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Policies\\\\Microsoft\\\\Windows\\\\WindowsCopilot\",\n      \"Name\": \"TurnOffWindowsCopilot\",\n      \"Type\": \"DWord\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\"\n    },\n    {\n      \"Path\": \"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\",\n      \"Name\": \"ShowCopilotButton\",\n      \"Type\": \"DWord\",\n      \"Value\": \"0\",\n      \"OriginalValue\": \"1\"\n    }\n  ],\n  \"InvokeScript\": [\n    \"\n      Write-Host \\\"Remove Copilot\\\"\n      dism /online /remove-package /package-name:Microsoft.Windows.Copilot\n      \"\n  ],\n  \"UndoScript\": [\n    \"\n      Write-Host \\\"Install Copilot\\\"\n      dism /online /add-package /package-name:Microsoft.Windows.Copilot\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot/#invoke-script","title":"Invoke Script","text":"<pre><code>      Write-Host \"Remove Copilot\"\n      dism /online /remove-package /package-name:Microsoft.Windows.Copilot\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot/#undo-script","title":"Undo Script","text":"<pre><code>      Write-Host \"Install Copilot\"\n      dism /online /add-package /package-name:Microsoft.Windows.Copilot\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot/#registry-key-turnoffwindowscopilot","title":"Registry Key: TurnOffWindowsCopilot","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot/#registry-key-turnoffwindowscopilot_1","title":"Registry Key: TurnOffWindowsCopilot","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveCopilot/#registry-key-showcopilotbutton","title":"Registry Key: ShowCopilotButton","text":"<p>Type: DWord</p> <p>Original Value: 1</p> <p>New Value: 0</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveEdge/","title":"Remove Microsoft Edge","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveEdge/#description","title":"Description","text":"<p>Removes MS Edge when it gets reinstalled by updates. Credit: Techie Jack</p> Preview Code <pre><code>{\n  \"Content\": \"Remove Microsoft Edge\",\n  \"Description\": \"Removes MS Edge when it gets reinstalled by updates. Credit: Techie Jack\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a029_\",\n  \"InvokeScript\": [\n    \"\n         Uninstall-WinUtilEdgeBrowser\n        \"\n  ],\n  \"UndoScript\": [\n    \"\n      Write-Host \\\"Install Microsoft Edge\\\"\n      Start-Process -FilePath winget -ArgumentList \\\"install --force -e --accept-source-agreements --accept-package-agreements --silent Microsoft.Edge \\\" -NoNewWindow -Wait\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveEdge\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveEdge/#invoke-script","title":"Invoke Script","text":"<pre><code>         Uninstall-WinUtilEdgeBrowser\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveEdge/#undo-script","title":"Undo Script","text":"<pre><code>      Write-Host \"Install Microsoft Edge\"\n      Start-Process -FilePath winget -ArgumentList \"install --force -e --accept-source-agreements --accept-package-agreements --silent Microsoft.Edge \" -NoNewWindow -Wait\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveEdge/#function-uninstall-winutiledgebrowser","title":"Function: Uninstall-WinUtilEdgeBrowser","text":"<pre><code>Function Uninstall-WinUtilEdgeBrowser {\n\n    &lt;#\n\n    .SYNOPSIS\n        This will uninstall edge by changing the region to Ireland and uninstalling edge the changing it back\n\n    #&gt;\n\n$msedgeProcess = Get-Process -Name \"msedge\" -ErrorAction SilentlyContinue\n$widgetsProcess = Get-Process -Name \"widgets\" -ErrorAction SilentlyContinue\n# Checking if Microsoft Edge is running\nif ($msedgeProcess) {\n    Stop-Process -Name \"msedge\" -Force\n} else {\n    Write-Output \"msedge process is not running.\"\n}\n# Checking if Widgets is running\nif ($widgetsProcess) {\n    Stop-Process -Name \"widgets\" -Force\n} else {\n    Write-Output \"widgets process is not running.\"\n}\n\nfunction Uninstall-Process {\n    param (\n        [Parameter(Mandatory = $true)]\n        [string]$Key\n    )\n\n    $originalNation = [microsoft.win32.registry]::GetValue('HKEY_USERS\\.DEFAULT\\Control Panel\\International\\Geo', 'Nation', [Microsoft.Win32.RegistryValueKind]::String)\n\n    # Set Nation to 84 (France) temporarily\n    [microsoft.win32.registry]::SetValue('HKEY_USERS\\.DEFAULT\\Control Panel\\International\\Geo', 'Nation', 68, [Microsoft.Win32.RegistryValueKind]::String) | Out-Null\n\n    # credits to he3als for the Acl commands\n    $fileName = \"IntegratedServicesRegionPolicySet.json\"\n    $pathISRPS = [Environment]::SystemDirectory + \"\\\" + $fileName\n    $aclISRPS = Get-Acl -Path $pathISRPS\n    $aclISRPSBackup = [System.Security.AccessControl.FileSecurity]::new()\n    $aclISRPSBackup.SetSecurityDescriptorSddlForm($acl.Sddl)\n    if (Test-Path -Path $pathISRPS) {\n        try {\n            $admin = [System.Security.Principal.NTAccount]$(New-Object System.Security.Principal.SecurityIdentifier('S-1-5-32-544')).Translate([System.Security.Principal.NTAccount]).Value\n\n            $aclISRPS.SetOwner($admin)\n            $rule = New-Object System.Security.AccessControl.FileSystemAccessRule($admin, 'FullControl', 'Allow')\n            $aclISRPS.AddAccessRule($rule)\n            Set-Acl -Path $pathISRPS -AclObject $aclISRPS\n\n            Rename-Item -Path $pathISRPS -NewName ($fileName + '.bak') -Force\n        }\n        catch {\n            Write-Error \"[$Mode] Failed to set owner for $pathISRPS\"\n        }\n    }\n\n    $baseKey = 'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\EdgeUpdate'\n    $registryPath = $baseKey + '\\ClientState\\' + $Key\n\n    if (!(Test-Path -Path $registryPath)) {\n        Write-Host \"[$Mode] Registry key not found: $registryPath\"\n        return\n    }\n\n    Remove-ItemProperty -Path $registryPath -Name \"experiment_control_labels\" -ErrorAction SilentlyContinue | Out-Null\n\n    $uninstallString = (Get-ItemProperty -Path $registryPath).UninstallString\n    $uninstallArguments = (Get-ItemProperty -Path $registryPath).UninstallArguments\n\n    if ([string]::IsNullOrEmpty($uninstallString) -or [string]::IsNullOrEmpty($uninstallArguments)) {\n        Write-Host \"[$Mode] Cannot find uninstall methods for $Mode\"\n        return\n    }\n\n    $uninstallArguments += \" --force-uninstall --delete-profile\"\n\n    # $uninstallCommand = \"`\"$uninstallString`\"\" + $uninstallArguments\n    if (!(Test-Path -Path $uninstallString)) {\n        Write-Host \"[$Mode] setup.exe not found at: $uninstallString\"\n        return\n    }\n    Start-Process -FilePath $uninstallString -ArgumentList $uninstallArguments -Wait -NoNewWindow -Verbose\n\n    # Restore Acl\n    if (Test-Path -Path ($pathISRPS + '.bak')) {\n        Rename-Item -Path ($pathISRPS + '.bak') -NewName $fileName -Force\n        Set-Acl -Path $pathISRPS -AclObject $aclISRPSBackup\n    }\n\n    # Restore Nation\n    [microsoft.win32.registry]::SetValue('HKEY_USERS\\.DEFAULT\\Control Panel\\International\\Geo', 'Nation', $originalNation, [Microsoft.Win32.RegistryValueKind]::String) | Out-Null\n\n    if ((Get-ItemProperty -Path $baseKey).IsEdgeStableUninstalled -eq 1) {\n        Write-Host \"[$Mode] Edge Stable has been successfully uninstalled\"\n    }\n}\n\nfunction Uninstall-Edge {\n    Remove-ItemProperty -Path \"HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Microsoft Edge\" -Name \"NoRemove\" -ErrorAction SilentlyContinue | Out-Null\n\n    [microsoft.win32.registry]::SetValue(\"HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\EdgeUpdateDev\", \"AllowUninstall\", 1, [Microsoft.Win32.RegistryValueKind]::DWord) | Out-Null\n\n    Uninstall-Process -Key '{56EB18F8-B008-4CBD-B6D2-8C97FE7E9062}'\n\n    @( \"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\",\n       \"$env:PUBLIC\\Desktop\",\n       \"$env:USERPROFILE\\Desktop\" ) | ForEach-Object {\n        $shortcutPath = Join-Path -Path $_ -ChildPath \"Microsoft Edge.lnk\"\n        if (Test-Path -Path $shortcutPath) {\n            Remove-Item -Path $shortcutPath -Force\n        }\n    }\n\n}\n\nfunction Uninstall-WebView {\n    Remove-ItemProperty -Path \"HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Microsoft EdgeWebView\" -Name \"NoRemove\" -ErrorAction SilentlyContinue | Out-Null\n\n    # Force to use system-wide WebView2\n    # [microsoft.win32.registry]::SetValue(\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge\\WebView2\\BrowserExecutableFolder\", \"*\", \"%%SystemRoot%%\\System32\\Microsoft-Edge-WebView\")\n\n    Uninstall-Process -Key '{F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}'\n}\n\nfunction Uninstall-EdgeUpdate {\n    Remove-ItemProperty -Path \"HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Microsoft Edge Update\" -Name \"NoRemove\" -ErrorAction SilentlyContinue | Out-Null\n\n    $registryPath = 'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\EdgeUpdate'\n    if (!(Test-Path -Path $registryPath)) {\n        Write-Host \"Registry key not found: $registryPath\"\n        return\n    }\n    $uninstallCmdLine = (Get-ItemProperty -Path $registryPath).UninstallCmdLine\n\n    if ([string]::IsNullOrEmpty($uninstallCmdLine)) {\n        Write-Host \"Cannot find uninstall methods for $Mode\"\n        return\n    }\n\n    Write-Output \"Uninstalling: $uninstallCmdLine\"\n    Start-Process cmd.exe \"/c $uninstallCmdLine\" -WindowStyle Hidden -Wait\n}\n\nUninstall-Edge\n    # \"WebView\" { Uninstall-WebView }\n    # \"EdgeUpdate\" { Uninstall-EdgeUpdate }\n\n\n\n\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveHomeGallery/","title":"Remove Home and Gallery from explorer","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveHomeGallery/#description","title":"Description","text":"<p>Removes the Home and Gallery from explorer and sets This PC as default</p> Preview Code <pre><code>{\n  \"Content\": \"Remove Home and Gallery from explorer\",\n  \"Description\": \"Removes the Home and Gallery from explorer and sets This PC as default\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a029_\",\n  \"InvokeScript\": [\n    \"\n      REG DELETE \\\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Desktop\\\\NameSpace\\\\{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}\\\" /f\n      REG DELETE \\\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Desktop\\\\NameSpace\\\\{f874310e-b6b7-47dc-bc84-b9e6b38f5903}\\\" /f\n      REG ADD \\\"HKEY_CURRENT_USER\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\\\" /f /v \\\"LaunchTo\\\" /t REG_DWORD /d \\\"1\\\"\n      \"\n  ],\n  \"UndoScript\": [\n    \"\n      REG ADD \\\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Desktop\\\\NameSpace\\\\{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}\\\" /f /ve /t REG_SZ /d \\\"{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}\\\"\n      REG ADD \\\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Desktop\\\\NameSpace\\\\{f874310e-b6b7-47dc-bc84-b9e6b38f5903}\\\" /f /ve /t REG_SZ /d \\\"CLSID_MSGraphHomeFolder\\\"\n      REG DELETE \\\"HKEY_CURRENT_USER\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Advanced\\\" /f /v \\\"LaunchTo\\\"\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveHomeGallery\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveHomeGallery/#invoke-script","title":"Invoke Script","text":"<pre><code>      REG DELETE \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}\" /f\n      REG DELETE \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\{f874310e-b6b7-47dc-bc84-b9e6b38f5903}\" /f\n      REG ADD \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" /f /v \"LaunchTo\" /t REG_DWORD /d \"1\"\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveHomeGallery/#undo-script","title":"Undo Script","text":"<pre><code>      REG ADD \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}\" /f /ve /t REG_SZ /d \"{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}\"\n      REG ADD \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\\{f874310e-b6b7-47dc-bc84-b9e6b38f5903}\" /f /ve /t REG_SZ /d \"CLSID_MSGraphHomeFolder\"\n      REG DELETE \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" /f /v \"LaunchTo\"\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveOnedrive/","title":"Remove OneDrive","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveOnedrive/#description","title":"Description","text":"<p>Moves OneDrive files to Default Home Folders and Uninstalls it.</p> Preview Code <pre><code>{\n  \"Content\": \"Remove OneDrive\",\n  \"Description\": \"Moves OneDrive files to Default Home Folders and Uninstalls it.\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a030_\",\n  \"InvokeScript\": [\n    \"\n      $OneDrivePath = $($env:OneDrive)\n      Write-Host \\\"Removing OneDrive\\\"\n      $regPath = \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\OneDriveSetup.exe\\\"\n      if (Test-Path $regPath) {\n          $OneDriveUninstallString = Get-ItemPropertyValue \\\"$regPath\\\" -Name \\\"UninstallString\\\"\n          $OneDriveExe, $OneDriveArgs = $OneDriveUninstallString.Split(\\\" \\\")\n          Start-Process -FilePath $OneDriveExe -ArgumentList \\\"$OneDriveArgs /silent\\\" -NoNewWindow -Wait\n      } else {\n          Write-Host \\\"Onedrive dosn't seem to be installed anymore\\\" -ForegroundColor Red\n          return\n      }\n      # Check if OneDrive got Uninstalled\n      if (-not (Test-Path $regPath)) {\n      Write-Host \\\"Copy downloaded Files from the OneDrive Folder to Root UserProfile\\\"\n      Start-Process -FilePath powershell -ArgumentList \\\"robocopy '$($OneDrivePath)' '$($env:USERPROFILE.TrimEnd())\\\\' /mov /e /xj\\\" -NoNewWindow -Wait\n\n      Write-Host \\\"Removing OneDrive leftovers\\\"\n      Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \\\"$env:localappdata\\\\Microsoft\\\\OneDrive\\\"\n      Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \\\"$env:localappdata\\\\OneDrive\\\"\n      Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \\\"$env:programdata\\\\Microsoft OneDrive\\\"\n      Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \\\"$env:systemdrive\\\\OneDriveTemp\\\"\n      reg delete \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\OneDrive\\\" -f\n      # check if directory is empty before removing:\n      If ((Get-ChildItem \\\"$OneDrivePath\\\" -Recurse | Measure-Object).Count -eq 0) {\n          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \\\"$OneDrivePath\\\"\n      }\n\n      Write-Host \\\"Remove Onedrive from explorer sidebar\\\"\n      Set-ItemProperty -Path \\\"HKCR:\\\\CLSID\\\\{018D5C66-4533-4307-9B53-224DE2ED1FE6}\\\" -Name \\\"System.IsPinnedToNameSpaceTree\\\" -Value 0\n      Set-ItemProperty -Path \\\"HKCR:\\\\Wow6432Node\\\\CLSID\\\\{018D5C66-4533-4307-9B53-224DE2ED1FE6}\\\" -Name \\\"System.IsPinnedToNameSpaceTree\\\" -Value 0\n\n      Write-Host \\\"Removing run hook for new users\\\"\n      reg load \\\"hku\\\\Default\\\" \\\"C:\\\\Users\\\\Default\\\\NTUSER.DAT\\\"\n      reg delete \\\"HKEY_USERS\\\\Default\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\" /v \\\"OneDriveSetup\\\" /f\n      reg unload \\\"hku\\\\Default\\\"\n\n      Write-Host \\\"Removing startmenu entry\\\"\n      Remove-Item -Force -ErrorAction SilentlyContinue \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\OneDrive.lnk\\\"\n\n      Write-Host \\\"Removing scheduled task\\\"\n      Get-ScheduledTask -TaskPath '\\\\' -TaskName 'OneDrive*' -ea SilentlyContinue | Unregister-ScheduledTask -Confirm:$false\n\n      # Add Shell folders restoring default locations\n      Write-Host \\\"Shell Fixing\\\"\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"AppData\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Cache\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\INetCache\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Cookies\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\INetCookies\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Favorites\\\" -Value \\\"$env:userprofile\\\\Favorites\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"History\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\History\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Local AppData\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Local\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"My Music\\\" -Value \\\"$env:userprofile\\\\Music\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"My Video\\\" -Value \\\"$env:userprofile\\\\Videos\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"NetHood\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Network Shortcuts\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"PrintHood\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Printer Shortcuts\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Programs\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Recent\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Recent\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"SendTo\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\SendTo\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Start Menu\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Startup\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Templates\\\" -Value \\\"$env:userprofile\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Templates\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"{374DE290-123F-4565-9164-39C4925E467B}\\\" -Value \\\"$env:userprofile\\\\Downloads\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Desktop\\\" -Value \\\"$env:userprofile\\\\Desktop\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"My Pictures\\\" -Value \\\"$env:userprofile\\\\Pictures\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"Personal\\\" -Value \\\"$env:userprofile\\\\Documents\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"{F42EE2D3-909F-4907-8871-4C22FC0BF756}\\\" -Value \\\"$env:userprofile\\\\Documents\\\" -Type ExpandString\n      Set-ItemProperty -Path \\\"HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\" -Name \\\"{0DDD015D-B06C-45D5-8C4C-F59713854639}\\\" -Value \\\"$env:userprofile\\\\Pictures\\\" -Type ExpandString\n      Write-Host \\\"Restarting explorer\\\"\n      taskkill.exe /F /IM \\\"explorer.exe\\\"\n      Start-Process \\\"explorer.exe\\\"\n\n      Write-Host \\\"Waiting for explorer to complete loading\\\"\n      Write-Host \\\"Please Note - The OneDrive folder at $OneDrivePath may still have items in it. You must manually delete it, but all the files should already be copied to the base user folder.\\\"\n      Write-Host \\\"If there are Files missing afterwards, please Login to Onedrive.com and Download them manually\\\" -ForegroundColor Yellow\n      Start-Sleep 5\n      } else {\n      Write-Host \\\"Something went Wrong during the Unistallation of OneDrive\\\" -ForegroundColor Red\n      }\n      \"\n  ],\n  \"UndoScript\": [\n    \"\n      Write-Host \\\"Install OneDrive\\\"\n      Start-Process -FilePath winget -ArgumentList \\\"install -e --accept-source-agreements --accept-package-agreements --silent Microsoft.OneDrive \\\" -NoNewWindow -Wait\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveOnedrive\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveOnedrive/#invoke-script","title":"Invoke Script","text":"<pre><code>      $OneDrivePath = $($env:OneDrive)\n      Write-Host \"Removing OneDrive\"\n      $regPath = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\OneDriveSetup.exe\"\n      if (Test-Path $regPath) {\n          $OneDriveUninstallString = Get-ItemPropertyValue \"$regPath\" -Name \"UninstallString\"\n          $OneDriveExe, $OneDriveArgs = $OneDriveUninstallString.Split(\" \")\n          Start-Process -FilePath $OneDriveExe -ArgumentList \"$OneDriveArgs /silent\" -NoNewWindow -Wait\n      } else {\n          Write-Host \"Onedrive dosn't seem to be installed anymore\" -ForegroundColor Red\n          return\n      }\n      # Check if OneDrive got Uninstalled\n      if (-not (Test-Path $regPath)) {\n      Write-Host \"Copy downloaded Files from the OneDrive Folder to Root UserProfile\"\n      Start-Process -FilePath powershell -ArgumentList \"robocopy '$($OneDrivePath)' '$($env:USERPROFILE.TrimEnd())\\' /mov /e /xj\" -NoNewWindow -Wait\n\n      Write-Host \"Removing OneDrive leftovers\"\n      Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:localappdata\\Microsoft\\OneDrive\"\n      Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:localappdata\\OneDrive\"\n      Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:programdata\\Microsoft OneDrive\"\n      Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:systemdrive\\OneDriveTemp\"\n      reg delete \"HKEY_CURRENT_USER\\Software\\Microsoft\\OneDrive\" -f\n      # check if directory is empty before removing:\n      If ((Get-ChildItem \"$OneDrivePath\" -Recurse | Measure-Object).Count -eq 0) {\n          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$OneDrivePath\"\n      }\n\n      Write-Host \"Remove Onedrive from explorer sidebar\"\n      Set-ItemProperty -Path \"HKCR:\\CLSID\\{018D5C66-4533-4307-9B53-224DE2ED1FE6}\" -Name \"System.IsPinnedToNameSpaceTree\" -Value 0\n      Set-ItemProperty -Path \"HKCR:\\Wow6432Node\\CLSID\\{018D5C66-4533-4307-9B53-224DE2ED1FE6}\" -Name \"System.IsPinnedToNameSpaceTree\" -Value 0\n\n      Write-Host \"Removing run hook for new users\"\n      reg load \"hku\\Default\" \"C:\\Users\\Default\\NTUSER.DAT\"\n      reg delete \"HKEY_USERS\\Default\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /v \"OneDriveSetup\" /f\n      reg unload \"hku\\Default\"\n\n      Write-Host \"Removing startmenu entry\"\n      Remove-Item -Force -ErrorAction SilentlyContinue \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\OneDrive.lnk\"\n\n      Write-Host \"Removing scheduled task\"\n      Get-ScheduledTask -TaskPath '\\' -TaskName 'OneDrive*' -ea SilentlyContinue | Unregister-ScheduledTask -Confirm:$false\n\n      # Add Shell folders restoring default locations\n      Write-Host \"Shell Fixing\"\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"AppData\" -Value \"$env:userprofile\\AppData\\Roaming\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Cache\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\INetCache\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Cookies\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\INetCookies\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Favorites\" -Value \"$env:userprofile\\Favorites\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"History\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\History\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Local AppData\" -Value \"$env:userprofile\\AppData\\Local\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Music\" -Value \"$env:userprofile\\Music\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Video\" -Value \"$env:userprofile\\Videos\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"NetHood\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Network Shortcuts\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"PrintHood\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Printer Shortcuts\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Programs\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Recent\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Recent\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"SendTo\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\SendTo\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Start Menu\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Startup\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Templates\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Templates\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{374DE290-123F-4565-9164-39C4925E467B}\" -Value \"$env:userprofile\\Downloads\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Desktop\" -Value \"$env:userprofile\\Desktop\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Pictures\" -Value \"$env:userprofile\\Pictures\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Personal\" -Value \"$env:userprofile\\Documents\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{F42EE2D3-909F-4907-8871-4C22FC0BF756}\" -Value \"$env:userprofile\\Documents\" -Type ExpandString\n      Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{0DDD015D-B06C-45D5-8C4C-F59713854639}\" -Value \"$env:userprofile\\Pictures\" -Type ExpandString\n      Write-Host \"Restarting explorer\"\n      taskkill.exe /F /IM \"explorer.exe\"\n      Start-Process \"explorer.exe\"\n\n      Write-Host \"Waiting for explorer to complete loading\"\n      Write-Host \"Please Note - The OneDrive folder at $OneDrivePath may still have items in it. You must manually delete it, but all the files should already be copied to the base user folder.\"\n      Write-Host \"If there are Files missing afterwards, please Login to Onedrive.com and Download them manually\" -ForegroundColor Yellow\n      Start-Sleep 5\n      } else {\n      Write-Host \"Something went Wrong during the Unistallation of OneDrive\" -ForegroundColor Red\n      }\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RemoveOnedrive/#undo-script","title":"Undo Script","text":"<pre><code>      Write-Host \"Install OneDrive\"\n      Start-Process -FilePath winget -ArgumentList \"install -e --accept-source-agreements --accept-package-agreements --silent Microsoft.OneDrive \" -NoNewWindow -Wait\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RightClickMenu/","title":"Set Classic Right-Click Menu","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RightClickMenu/#description","title":"Description","text":"<p>Great Windows 11 tweak to bring back good context menus when right clicking things in explorer.</p> Preview Code <pre><code>{\n  \"Content\": \"Set Classic Right-Click Menu \",\n  \"Description\": \"Great Windows 11 tweak to bring back good context menus when right clicking things in explorer.\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a027_\",\n  \"InvokeScript\": [\n    \"\n      New-Item -Path \\\"HKCU:\\\\Software\\\\Classes\\\\CLSID\\\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\\" -Name \\\"InprocServer32\\\" -force -value \\\"\\\"\n      Write-Host Restarting explorer.exe ...\n      $process = Get-Process -Name \\\"explorer\\\"\n      Stop-Process -InputObject $process\n      \"\n  ],\n  \"UndoScript\": [\n    \"\n      Remove-Item -Path \\\"HKCU:\\\\Software\\\\Classes\\\\CLSID\\\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\\" -Recurse -Confirm:$false -Force\n      # Restarting Explorer in the Undo Script might not be necessary, as the Registry change without restarting Explorer does work, but just to make sure.\n      Write-Host Restarting explorer.exe ...\n      $process = Get-Process -Name \\\"explorer\\\"\n      Stop-Process -InputObject $process\n      \"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/RightClickMenu\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RightClickMenu/#invoke-script","title":"Invoke Script","text":"<pre><code>      New-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\" -Name \"InprocServer32\" -force -value \"\"\n      Write-Host Restarting explorer.exe ...\n      $process = Get-Process -Name \"explorer\"\n      Stop-Process -InputObject $process\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/RightClickMenu/#undo-script","title":"Undo Script","text":"<pre><code>      Remove-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\" -Recurse -Confirm:$false -Force\n      # Restarting Explorer in the Undo Script might not be necessary, as the Registry change without restarting Explorer does work, but just to make sure.\n      Write-Host Restarting explorer.exe ...\n      $process = Get-Process -Name \"explorer\"\n      Stop-Process -InputObject $process\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Teredo/","title":"Disable Teredo","text":"<p>Last Updated: 2024-08-27</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Teredo/#description","title":"Description","text":"<p>Teredo network tunneling is a ipv6 feature that can cause additional latency, but may cause problems with some games</p> Preview Code <pre><code>{\n  \"Content\": \"Disable Teredo\",\n  \"Description\": \"Teredo network tunneling is a ipv6 feature that can cause additional latency, but may cause problems with some games\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a023_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip6\\\\Parameters\",\n      \"Name\": \"DisabledComponents\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\",\n      \"Type\": \"DWord\"\n    }\n  ],\n  \"InvokeScript\": [\n    \"netsh interface teredo set state disabled\"\n  ],\n  \"UndoScript\": [\n    \"netsh interface teredo set state default\"\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/Teredo\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Teredo/#invoke-script","title":"Invoke Script","text":"<pre><code>netsh interface teredo set state disabled\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Teredo/#undo-script","title":"Undo Script","text":"<pre><code>netsh interface teredo set state default\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Teredo/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Teredo/#registry-key-disabledcomponents","title":"Registry Key: DisabledComponents","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/UTC/","title":"Set Time to UTC (Dual Boot)","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/UTC/#description","title":"Description","text":"<p>Essential for computers that are dual booting. Fixes the time sync with Linux Systems.</p> Preview Code <pre><code>{\n  \"Content\": \"Set Time to UTC (Dual Boot)\",\n  \"Description\": \"Essential for computers that are dual booting. Fixes the time sync with Linux Systems.\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a027_\",\n  \"registry\": [\n    {\n      \"Path\": \"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\TimeZoneInformation\",\n      \"Name\": \"RealTimeIsUniversal\",\n      \"Type\": \"DWord\",\n      \"Value\": \"1\",\n      \"OriginalValue\": \"0\"\n    }\n  ],\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/UTC\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/UTC/#registry-changes","title":"Registry Changes","text":"<p>Applications and System Components store and retrieve configuration data to modify windows settings, so we can use the registry to change many settings in one place.</p> <p>You can find information about the registry on Wikipedia and Microsoft's Website.</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/UTC/#registry-key-realtimeisuniversal","title":"Registry Key: RealTimeIsUniversal","text":"<p>Type: DWord</p> <p>Original Value: 0</p> <p>New Value: 1</p> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Undoall/","title":"Undo Selected Tweaks","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Undo Selected Tweaks\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a042_\",\n  \"Type\": \"Button\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/Undoall\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/Undoall/#function-invoke-wpfundoall","title":"Function: Invoke-WPFundoall","text":"<pre><code>function Invoke-WPFundoall {\n    &lt;#\n\n    .SYNOPSIS\n        Undoes every selected tweak\n\n    #&gt;\n\n    if($sync.ProcessRunning) {\n        $msg = \"[Invoke-WPFundoall] Install process is currently running.\"\n        [System.Windows.MessageBox]::Show($msg, \"Winutil\", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)\n        return\n    }\n\n    $tweaks = (Get-WinUtilCheckBoxes)[\"WPFtweaks\"]\n\n    if ($tweaks.count -eq 0) {\n        $msg = \"Please check the tweaks you wish to undo.\"\n        [System.Windows.MessageBox]::Show($msg, \"Winutil\", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)\n        return\n    }\n\n    Invoke-WPFRunspace -ArgumentList $tweaks -DebugPreference $DebugPreference -ScriptBlock {\n        param($tweaks, $DebugPreference)\n\n        $sync.ProcessRunning = $true\n        if ($tweaks.count -eq 1) {\n            $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"Indeterminate\" -value 0.01 -overlay \"logo\" })\n        } else {\n            $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"Normal\" -value 0.01 -overlay \"logo\" })\n        }\n\n\n        for ($i = 0; $i -lt $tweaks.Count; $i++) {\n            Set-WinUtilProgressBar -Label \"Undoing $($tweaks[$i])\" -Percent ($i / $tweaks.Count * 100)\n            Invoke-WinUtiltweaks $tweaks[$i] -undo $true\n            $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -value ($i/$tweaks.Count) })\n        }\n\n        Set-WinUtilProgressBar -Label \"Undo Tweaks Finished\" -Percent 100\n        $sync.ProcessRunning = $false\n        $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"None\" -overlay \"checkmark\" })\n        Write-Host \"==================================\"\n        Write-Host \"---  Undo Tweaks are Finished  ---\"\n        Write-Host \"==================================\"\n\n    }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/button/","title":"Run Tweaks","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"Run Tweaks\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a041_\",\n  \"Type\": \"Button\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/button\"\n}\n</code></pre>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/button/#function-invoke-wpftweaksbutton","title":"Function: Invoke-WPFtweaksbutton","text":"<pre><code>function Invoke-WPFtweaksbutton {\n  &lt;#\n\n    .SYNOPSIS\n        Invokes the functions associated with each group of checkboxes\n\n  #&gt;\n\n  if($sync.ProcessRunning) {\n    $msg = \"[Invoke-WPFtweaksbutton] Install process is currently running.\"\n    [System.Windows.MessageBox]::Show($msg, \"Winutil\", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)\n    return\n  }\n\n  $Tweaks = (Get-WinUtilCheckBoxes)[\"WPFTweaks\"]\n\n  Set-WinUtilDNS -DNSProvider $sync[\"WPFchangedns\"].text\n\n  if ($tweaks.count -eq 0 -and  $sync[\"WPFchangedns\"].text -eq \"Default\") {\n    $msg = \"Please check the tweaks you wish to perform.\"\n    [System.Windows.MessageBox]::Show($msg, \"Winutil\", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)\n    return\n  }\n\n  Write-Debug \"Number of tweaks to process: $($Tweaks.Count)\"\n\n  Invoke-WPFRunspace -ArgumentList $Tweaks -DebugPreference $DebugPreference -ScriptBlock {\n    param($Tweaks, $DebugPreference)\n    Write-Debug \"Inside Number of tweaks to process: $($Tweaks.Count)\"\n\n    $sync.ProcessRunning = $true\n\n    if ($Tweaks.count -eq 1) {\n        $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"Indeterminate\" -value 0.01 -overlay \"logo\" })\n    } else {\n        $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"Normal\" -value 0.01 -overlay \"logo\" })\n    }\n    # Execute other selected tweaks\n\n    for ($i = 0; $i -lt $Tweaks.Count; $i++) {\n      Set-WinUtilProgressBar -Label \"Applying $($tweaks[$i])\" -Percent ($i / $Tweaks.Count * 100)\n      Invoke-WinUtilTweaks $tweaks[$i]$sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -value ($i/$Tweaks.Count) })\n    }\n    Set-WinUtilProgressBar -Label \"Tweaks finished\" -Percent 100\n    $sync.ProcessRunning = $false\n    $sync.form.Dispatcher.Invoke([action]{ Set-WinUtilTaskbaritem -state \"None\" -overlay \"checkmark\" })\n    Write-Host \"=================================\"\n    Write-Host \"--     Tweaks are Finished    ---\"\n    Write-Host \"=================================\"\n\n    # $ButtonType = [System.Windows.MessageBoxButton]::OK\n    # $MessageboxTitle = \"Tweaks are Finished \"\n    # $Messageboxbody = (\"Done\")\n    # $MessageIcon = [System.Windows.MessageBoxImage]::Information\n    # [System.Windows.MessageBox]::Show($Messageboxbody, $MessageboxTitle, $ButtonType, $MessageIcon)\n  }\n}\n</code></pre> <p>View the JSON file</p>"},{"location":"dev/tweaks/z--Advanced-Tweaks---CAUTION/changedns/","title":"DNS","text":"<p>Last Updated: 2024-08-07</p> <p>Info</p> <p>The Development Documentation is auto generated for every compilation of WinUtil, meaning a part of it will always stay up-to-date. Developers do have the ability to add custom content, which won't be updated automatically.</p> Preview Code <pre><code>{\n  \"Content\": \"DNS\",\n  \"category\": \"z__Advanced Tweaks - CAUTION\",\n  \"panel\": \"1\",\n  \"Order\": \"a040_\",\n  \"Type\": \"Combobox\",\n  \"ComboItems\": \"Default DHCP Google Cloudflare Cloudflare_Malware Cloudflare_Malware_Adult Open_DNS Quad9 AdGuard_Ads_Trackers AdGuard_Ads_Trackers_Malware_Adult\",\n  \"link\": \"https://christitustech.github.io/winutil/dev/tweaks/z--Advanced-Tweaks---CAUTION/changedns\"\n}\n</code></pre> <p>View the JSON file</p>"}]}